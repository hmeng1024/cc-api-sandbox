{
  "openapi": "3.0.0",
  "info": {
    "description": "This document provides an API reference, grouped by function, describing how to use the Console Connect REST API.\nProducts available through the Console Connect API include:\n* [Ports](#tag/Ports) - A port allows customers to access multiple on-demand Console Connect services, including access to cloud services, geographically separate networks (such as remote or branch offices) and the Internet, via a single network connection. \n* [L2 Connections](#tag/L2-Connections) - Console Connect's point-to-point Layer 2 connection is a secured virtual private Ethernet service, transported via a fully redundant Multi-Protocol Label Switching (MPLS) enabled IP infrastructure provided by Console Connect.\n* [Internet On-Demand (IO-D)](#tag/Internet-On-Demand-(IO-D)) - The IO-D service is carried on a fully redundant dual-stack global IP network, providing business-grade internet connectivity for enterprises and service providers.\n* [CloudRouter](#tag/CloudRouter) - CloudRouter is an MPLS VPN IP based infrastructure service which provides a private Layer 3 meshed network between multiple locations and network endpoints globally for enterprises and service providers.",
    "title": "Console Connect API",
    "version": "1.0.0",
    "license": {
      "name": "Commercial",
      "url": "https://www.consoleconnect.com/terms-of-use"
    },
    "termsOfService": "https://www.consoleconnect.com/terms-of-use",
    "x-logo": {
      "url": "https://storage.googleapis.com/console-connect-static-assets/cc-api-logo.jpg",
      "altText": "Console Connect logo"
    },
    "contact": {
      "name": "Console Connect Support",
      "email": "support@consoleconnect.com"
    }
  },
  "servers": [
    {
      "url": "https://api.consoleconnect.com"
    }
  ],
  "paths": {
    "/api/auth/token": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "summary": "Full response data",
                    "value": {
                      "id": "669xxxxxxxxxxxxxxxxxxxxx",
                      "companies": [
                        {
                          "id": "5daxxxxxxxxxxxxxxxxxxxxx",
                          "username": "samplecompanyname",
                          "officeAddress": null,
                          "system": {
                            "welcomeMessage": null
                          },
                          "company": {
                            "privacy": {
                              "network": {
                                "mode": "PRIVATE",
                                "blackListIds": [],
                                "whiteListIds": ["66aad8c7caac3ecbecbd8790"]
                              },
                              "community": {
                                "mode": "PRIVATE",
                                "blackListIds": [],
                                "whiteListIds": ["66aad8de1c740284bf0b2148"]
                              }
                            },
                            "industry": null,
                            "partnerType": null,
                            "companySize": null,
                            "dateFounded": null,
                            "businessRegistrationCertRejectedReason": null,
                            "clientId": null,
                            "first": null,
                            "last": null,
                            "address": null,
                            "city": null,
                            "state": null,
                            "zip": null,
                            "phone": null,
                            "fax": null,
                            "emailDomains": ["email.com"],
                            "website": "email.com",
                            "businessType": "Internal",
                            "registeredName": "Some Registered Name",
                            "addresses": [
                              {
                                "geo": {
                                  "type": "Point",
                                  "coordinates": []
                                },
                                "registered": true,
                                "address": "123/F, Address street",
                                "city": "City",
                                "state": null,
                                "zip": "123456",
                                "country": "Country",
                                "email": null,
                                "phone": null
                              }
                            ],
                            "businessRegistrationCertVerified": "UNVERIFIED",
                            "regionalInternetRegistry": [],
                            "businessDevelopmentManagerTypePreference": "DATA",
                            "isIoTDemoCompany": false,
                            "businessRegistrationCertReference": "5d1xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "businessRegistrationCertUploadedAt": "2024-03-28T14:02:43.261Z",
                            "isSDWAN": false
                          },
                          "cloudProviderDetails": {
                            "asn": {
                              "range": []
                            },
                            "bgpAuthority": "PCCWGLOBAL",
                            "companyType": "DCP"
                          },
                          "stats": {
                            "members": 25,
                            "interconnections": 0,
                            "followers": 0,
                            "following": 0,
                            "privateArticles": 0,
                            "privateEvents": 0,
                            "privatePosts": 0,
                            "articles": 1,
                            "events": 0,
                            "posts": 0
                          },
                          "overviewImage": null,
                          "accountManagerEmail": null,
                          "accountManagerId": null,
                          "createdAt": "2019-10-16T09:24:25.171Z",
                          "updatedAt": "2024-07-23T10:54:07.146Z",
                          "deletedAt": null,
                          "deleted": false,
                          "verified": true,
                          "tags": ["Analytics"],
                          "status": "ACTIVE",
                          "displayOrder": 0,
                          "groups": [],
                          "location": null,
                          "summary": "",
                          "headline": null,
                          "background": "667xxxxxxxxxxxxxxxxxxxxx",
                          "avatarId": "5f8xxxxxxxxxxxxxxxxxxxxx",
                          "name": "Sample Company Name",
                          "type": "COMPANY",
                          "oldAvatarId": "5e3xxxxxxxxxxxxxxxxxxxxx",
                          "verifiedIdentity": true,
                          "defaultPaymentType": "invoice",
                          "portsPending": 0,
                          "portsActive": 4,
                          "portsDisabled": 0,
                          "categories": ["NaaS", "Enterprise"],
                          "isCloudProvider": false,
                          "signedCompanyRefId": 12,
                          "signedCompanyVerified": true,
                          "businessRegistrationNumber": "317xxxxx-xxx-xx-xx-x",
                          "companies": [],
                          "online": false,
                          "isFollowing": false,
                          "isFollowee": false,
                          "linkUserCompany": {}
                        }
                      ],
                      "linkUserCompany": {
                        "5daxxxxxxxxxxxxxxxxxxxxx": {
                          "state": "ACTIVE",
                          "deleted": false,
                          "id": "669xxxxxxxxxxxxxxxxxxxxx",
                          "userId": "669xxxxxxxxxxxxxxxxxxxxx",
                          "companyId": "5daxxxxxxxxxxxxxxxxxxxxx",
                          "roleIds": [
                            "66aada952027420ab258aecd",
                            "66aada9ad8cf4a2092ee6f67"
                          ],
                          "deletedAt": null,
                          "createdAt": "2024-07-12T08:27:08.033Z",
                          "updatedAt": "2024-07-12T08:40:48.135Z",
                          "roles": ["NETWORKCONTROL", "USER"],
                          "permissions": {
                            "roles": [
                              {
                                "name": "NETWORKCONTROL",
                                "display": "Network Admin",
                                "icon": "flow switch",
                                "keyholder": false,
                                "visible": true,
                                "shieldOnly": false,
                                "systemDefault": false,
                                "unauthenticatedSystemDefault": false,
                                "id": "55exxxxxxxxxxxxxxxxxxxxx",
                                "deletedAt": null,
                                "displayOrder": -299,
                                "description": "A Network Admin may create, edit, remove, and otherwise manage all of your company's ports, connections and virtual routers",
                                "tags": ["networkadmin", "console"],
                                "createdAt": "2015-09-30T04:00:00.000Z",
                                "updatedAt": "2024-05-08T06:57:07.109Z",
                                "policyIds": ["66aadac907cf5d784e8798a0"],
                                "deleted": false,
                                "permissions": {
                                  "company-actions": false,
                                  "company-update": false,
                                  "connection-create": true,
                                  "connection-delete": true,
                                  "connection-modify": true,
                                  "connection-read": true,
                                  "order-create": true,
                                  "order-delete": true,
                                  "order-modify": true,
                                  "order-query": true,
                                  "ports-edit": true,
                                  "ports-read": true,
                                  "user-moderation": false
                                },
                                "permissionIds": ["66aadbb9b80425a0177b2aae"],
                                "queryable": true,
                                "companyIds": [],
                                "readOnly": false,
                                "policies": [
                                  {
                                    "name": "Console - Network read and write",
                                    "description": "Close Support Tickets for Console Users",
                                    "definition": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "product:DeleteSupportTicket"
                                          ],
                                          "Resource": [
                                            "rn:cc-api:product::${cc:accountId}:*"
                                          ],
                                          "Effect": "Allow",
                                          "Sid": "ProductDeleteSupportTicket"
                                        }
                                      ]
                                    },
                                    "id": "66aadac907cf5d784e8798a0",
                                    "deletedAt": null
                                  }
                                ]
                              },
                              {
                                "name": "USER",
                                "display": "Company Member",
                                "icon": "user outline",
                                "keyholder": false,
                                "visible": true,
                                "shieldOnly": false,
                                "systemDefault": false,
                                "unauthenticatedSystemDefault": false,
                                "id": "55exxxxxxxxxxxxxxxxxxxxx",
                                "deletedAt": null,
                                "displayOrder": 300,
                                "description": "A Member is associated with your company but may not edit company profile information or view company network information",
                                "tags": ["console"],
                                "createdAt": "2015-09-03T06:48:40.377Z",
                                "updatedAt": "2024-04-02T07:11:45.902Z",
                                "policyIds": ["66aade651799c8f777e26ec9"],
                                "deleted": false,
                                "permissions": {
                                  "company-actions": false,
                                  "company-update": false,
                                  "connection-create": false,
                                  "connection-delete": false,
                                  "connection-modify": false,
                                  "connection-read": false,
                                  "order-create": false,
                                  "order-delete": false,
                                  "order-modify": false,
                                  "order-query": false,
                                  "ports-edit": false,
                                  "ports-read": false,
                                  "user-moderation": false
                                },
                                "queryable": false,
                                "permissionIds": [],
                                "companyIds": [],
                                "readOnly": true,
                                "policies": [
                                  {
                                    "name": "Console  - Company Members Read",
                                    "description": "Feature - ZScalerOrder",
                                    "definition": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "feature:EnableZScalerOrder"
                                          ],
                                          "Resource": ["*"],
                                          "Effect": "Allow",
                                          "Sid": "enable-zscaler-order"
                                        }
                                      ]
                                    },
                                    "id": "66aade80e5efc037d719edce",
                                    "deletedAt": null
                                  }
                                ]
                              }
                            ],
                            "groups": {
                              "NETWORKCONTROL": {
                                "company-actions": false,
                                "company-update": false,
                                "connection-create": true,
                                "connection-delete": true,
                                "connection-modify": true,
                                "connection-read": true,
                                "order-create": true,
                                "order-delete": true,
                                "order-modify": true,
                                "order-query": true,
                                "ports-edit": true,
                                "ports-read": true,
                                "user-moderation": false
                              },
                              "USER": {
                                "company-actions": false,
                                "company-update": false,
                                "connection-create": false,
                                "connection-delete": false,
                                "connection-modify": false,
                                "connection-read": false,
                                "order-create": false,
                                "order-delete": false,
                                "order-modify": false,
                                "order-query": false,
                                "ports-edit": false,
                                "ports-read": false,
                                "user-moderation": false
                              }
                            }
                          }
                        }
                      },
                      "capabilities": {
                        "layer2": false,
                        "layer2Metros": [],
                        "layer2Regions": []
                      },
                      "system": {
                        "welcomeMessage": null
                      },
                      "cloudProviderDetails": {
                        "asn": {
                          "range": []
                        },
                        "companyType": "DCP",
                        "bgpAuthority": "PCCWGLOBAL"
                      },
                      "settings": {
                        "alertMeWhenNewFollower": {
                          "category": "communityAndMessages",
                          "option": true
                        },
                        "alertMeWhenCompanyNewFollower": {
                          "category": "communityAndMessages",
                          "option": true
                        },
                        "alertMeWhenMentionedInPost": {
                          "category": "communityAndMessages",
                          "option": true
                        },
                        "alertMeWhenCompanyMentionedInPost": {
                          "category": "communityAndMessages",
                          "option": true
                        },
                        "alertMeWhenCompanyMemberMentionedInPost": {
                          "category": "communityAndMessages",
                          "option": true
                        },
                        "alertMeWhenCommentInPost": {
                          "category": "communityAndMessages",
                          "option": true
                        },
                        "alertMeWhenCommentInPostByCompany": {
                          "category": "communityAndMessages",
                          "option": true
                        },
                        "alertMeWhenCommentInPostByCompanyMember": {
                          "category": "communityAndMessages",
                          "option": true
                        },
                        "alertMeWhenJoinCompanyRequest": {
                          "category": "communityAndMessages",
                          "option": true
                        },
                        "alertMeWhenJoinCompany": {
                          "category": "communityAndMessages",
                          "option": true
                        },
                        "alertMeWhenInterconnectRequest": {
                          "category": "network",
                          "option": true
                        },
                        "alertMeWhenCompanyJoinsConsole": {
                          "category": "network",
                          "option": true
                        },
                        "alertMeWhenNetworkRelatedEvent": {
                          "category": "network",
                          "option": true
                        },
                        "dismissPlanChangeMessage": {
                          "category": "hidden",
                          "option": true
                        },
                        "alertWhenKeywordsMentioned": {
                          "category": "communityAndMessages",
                          "option": [],
                          "enabled": true
                        },
                        "emailWhenMessageReceived": {
                          "category": "communityAndMessages",
                          "option": "ALL"
                        }
                      },
                      "stats": {
                        "posts": 0,
                        "events": 0,
                        "articles": 0,
                        "privatePosts": 0,
                        "privateEvents": 0,
                        "privateArticles": 0,
                        "following": 1,
                        "followers": 0,
                        "interconnections": 0,
                        "members": 0
                      },
                      "type": "PERSON",
                      "name": "Sample Full Name",
                      "email": "sample.email@email.com",
                      "avatarId": null,
                      "background": null,
                      "overviewImage": null,
                      "headline": "Sample Headline",
                      "summary": null,
                      "legalEntityId": null,
                      "location": null,
                      "passwordUpdatedAt": null,
                      "canInviteExternal": false,
                      "optIntoMarketingEmail": false,
                      "groups": [],
                      "following": ["5a0xxxxxxxxxxxxxxxxxxxxx"],
                      "phone": null,
                      "needsEmailVerification": false,
                      "newEmail": null,
                      "displayOrder": -299,
                      "newEmailTokenCreatedAt": null,
                      "status": "ACTIVE",
                      "tags": [],
                      "categories": [],
                      "verified": false,
                      "verifiedIdentity": false,
                      "deleted": false,
                      "deletedAt": null,
                      "businessRegistrationNumber": null,
                      "isCloudProvider": false,
                      "signedCompanyRefId": null,
                      "signedCompanyVerified": false,
                      "accountManagerEmail": null,
                      "accountManagerId": null,
                      "username": "sampleusername",
                      "updatedAt": "2024-07-19T08:15:22.521Z",
                      "createdAt": "2024-07-12T05:31:06.475Z",
                      "lastLoggedIn": "2024-07-19T08:15:22.521Z",
                      "online": false,
                      "token": null,
                      "hasAcceptedConsoleTermsOfUse": true
                    }
                  },
                  "Get-Company-Details": {
                    "summary": "Get companyId (id) and companyName (username)",
                    "value": {
                      "companies": [
                        {
                          "id": "5daxxxxxxxxxxxxxxxxxxxxx",
                          "username": "samplecompanyname",
                          "officeAddress": null,
                          "system": {
                            "welcomeMessage": null
                          },
                          "company": {
                            "privacy": {
                              "network": {
                                "mode": "PRIVATE",
                                "blackListIds": [],
                                "whiteListIds": ["66aad8c7caac3ecbecbd8790"]
                              },
                              "community": {
                                "mode": "PRIVATE",
                                "blackListIds": [],
                                "whiteListIds": ["66aad8de1c740284bf0b2148"]
                              }
                            },
                            "industry": null,
                            "partnerType": null,
                            "companySize": null,
                            "dateFounded": null,
                            "businessRegistrationCertRejectedReason": null,
                            "clientId": null,
                            "first": null,
                            "last": null,
                            "address": null,
                            "city": null,
                            "state": null,
                            "zip": null,
                            "phone": null,
                            "fax": null,
                            "emailDomains": ["email.com"],
                            "website": "email.com",
                            "businessType": "Internal",
                            "registeredName": "Some Registered Name",
                            "addresses": [
                              {
                                "geo": {
                                  "type": "Point",
                                  "coordinates": []
                                },
                                "registered": true,
                                "address": "123/F, Address street",
                                "city": "City",
                                "state": null,
                                "zip": "123456",
                                "country": "GB",
                                "email": null,
                                "phone": null
                              }
                            ],
                            "businessRegistrationCertVerified": "UNVERIFIED",
                            "regionalInternetRegistry": [],
                            "businessDevelopmentManagerTypePreference": "DATA",
                            "isIoTDemoCompany": false,
                            "businessRegistrationCertReference": "5d1xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                            "businessRegistrationCertUploadedAt": "2024-03-28T14:02:43.261Z",
                            "isSDWAN": false
                          },
                          "cloudProviderDetails": {
                            "asn": {
                              "range": []
                            },
                            "bgpAuthority": "PCCWGLOBAL",
                            "companyType": "DCP"
                          },
                          "stats": {
                            "members": 25,
                            "interconnections": 0,
                            "followers": 0,
                            "following": 0,
                            "privateArticles": 0,
                            "privateEvents": 0,
                            "privatePosts": 0,
                            "articles": 1,
                            "events": 0,
                            "posts": 0
                          },
                          "overviewImage": null,
                          "accountManagerEmail": null,
                          "accountManagerId": null,
                          "createdAt": "2019-10-16T09:24:25.171Z",
                          "updatedAt": "2024-07-23T10:54:07.146Z",
                          "deletedAt": null,
                          "deleted": false,
                          "verified": true,
                          "tags": ["Analytics"],
                          "status": "ACTIVE",
                          "displayOrder": 0,
                          "groups": [],
                          "location": null,
                          "summary": "",
                          "headline": null,
                          "background": "667xxxxxxxxxxxxxxxxxxxxx",
                          "avatarId": "5f8xxxxxxxxxxxxxxxxxxxxx",
                          "name": "Sample Company Name",
                          "type": "COMPANY",
                          "oldAvatarId": "5e3xxxxxxxxxxxxxxxxxxxxx",
                          "verifiedIdentity": true,
                          "defaultPaymentType": "invoice",
                          "portsPending": 0,
                          "portsActive": 4,
                          "portsDisabled": 0,
                          "categories": ["NaaS", "Enterprise"],
                          "isCloudProvider": false,
                          "signedCompanyRefId": 12,
                          "signedCompanyVerified": true,
                          "businessRegistrationNumber": "317xxxxx-xxx-xx-xx-x",
                          "companies": [],
                          "online": false,
                          "isFollowing": false,
                          "isFollowee": false,
                          "linkUserCompany": {}
                        }
                      ]
                    }
                  },
                  "Get-User-Roles": {
                    "summary": "Get User Roles under linkUserCompany.roles",
                    "value": {
                      "linkUserCompany": {
                        "5daxxxxxxxxxxxxxxxxxxxxx": {
                          "state": "ACTIVE",
                          "deleted": false,
                          "id": "669xxxxxxxxxxxxxxxxxxxxx",
                          "userId": "669xxxxxxxxxxxxxxxxxxxxx",
                          "companyId": "5daxxxxxxxxxxxxxxxxxxxxx",
                          "roleIds": [
                            "66aada952027420ab258aecd",
                            "66aada9ad8cf4a2092ee6f67"
                          ],
                          "deletedAt": null,
                          "createdAt": "2024-07-12T08:27:08.033Z",
                          "updatedAt": "2024-07-12T08:40:48.135Z",
                          "roles": ["NETWORKCONTROL", "USER"],
                          "permissions": {
                            "roles": [
                              {
                                "name": "NETWORKCONTROL",
                                "display": "Network Admin",
                                "icon": "flow switch",
                                "keyholder": false,
                                "visible": true,
                                "shieldOnly": false,
                                "systemDefault": false,
                                "unauthenticatedSystemDefault": false,
                                "id": "55exxxxxxxxxxxxxxxxxxxxx",
                                "deletedAt": null,
                                "displayOrder": -299,
                                "description": "A Network Admin may create, edit, remove, and otherwise manage all of your company's ports, connections and virtual routers",
                                "tags": ["networkadmin", "console"],
                                "createdAt": "2015-09-30T04:00:00.000Z",
                                "updatedAt": "2024-05-08T06:57:07.109Z",
                                "policyIds": ["66aadac907cf5d784e8798a0"],
                                "deleted": false,
                                "permissions": {
                                  "company-actions": false,
                                  "company-update": false,
                                  "connection-create": true,
                                  "connection-delete": true,
                                  "connection-modify": true,
                                  "connection-read": true,
                                  "order-create": true,
                                  "order-delete": true,
                                  "order-modify": true,
                                  "order-query": true,
                                  "ports-edit": true,
                                  "ports-read": true,
                                  "user-moderation": false
                                },
                                "permissionIds": ["66aadbb9b80425a0177b2aae"],
                                "queryable": true,
                                "companyIds": [],
                                "readOnly": false,
                                "policies": [
                                  {
                                    "name": "Console - Network read and write",
                                    "description": "Close Support Tickets for Console Users",
                                    "definition": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "product:DeleteSupportTicket"
                                          ],
                                          "Resource": [
                                            "rn:cc-api:product::${cc:accountId}:*"
                                          ],
                                          "Effect": "Allow",
                                          "Sid": "ProductDeleteSupportTicket"
                                        }
                                      ]
                                    },
                                    "id": "66aadac907cf5d784e8798a0",
                                    "deletedAt": null
                                  }
                                ]
                              },
                              {
                                "name": "USER",
                                "display": "Company Member",
                                "icon": "user outline",
                                "keyholder": false,
                                "visible": true,
                                "shieldOnly": false,
                                "systemDefault": false,
                                "unauthenticatedSystemDefault": false,
                                "id": "55exxxxxxxxxxxxxxxxxxxxx",
                                "deletedAt": null,
                                "displayOrder": 300,
                                "description": "A Member is associated with your company but may not edit company profile information or view company network information",
                                "tags": ["console"],
                                "createdAt": "2015-09-03T06:48:40.377Z",
                                "updatedAt": "2024-04-02T07:11:45.902Z",
                                "policyIds": ["66aade651799c8f777e26ec9"],
                                "deleted": false,
                                "permissions": {
                                  "company-actions": false,
                                  "company-update": false,
                                  "connection-create": false,
                                  "connection-delete": false,
                                  "connection-modify": false,
                                  "connection-read": false,
                                  "order-create": false,
                                  "order-delete": false,
                                  "order-modify": false,
                                  "order-query": false,
                                  "ports-edit": false,
                                  "ports-read": false,
                                  "user-moderation": false
                                },
                                "queryable": false,
                                "permissionIds": [],
                                "companyIds": [],
                                "readOnly": true,
                                "policies": [
                                  {
                                    "name": "Console  - Company Members Read",
                                    "description": "Feature - ZScalerOrder",
                                    "definition": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "feature:EnableZScalerOrder"
                                          ],
                                          "Resource": ["*"],
                                          "Effect": "Allow",
                                          "Sid": "enable-zscaler-order"
                                        }
                                      ]
                                    },
                                    "id": "66aade80e5efc037d719edce",
                                    "deletedAt": null
                                  }
                                ]
                              }
                            ],
                            "groups": {
                              "NETWORKCONTROL": {
                                "company-actions": false,
                                "company-update": false,
                                "connection-create": true,
                                "connection-delete": true,
                                "connection-modify": true,
                                "connection-read": true,
                                "order-create": true,
                                "order-delete": true,
                                "order-modify": true,
                                "order-query": true,
                                "ports-edit": true,
                                "ports-read": true,
                                "user-moderation": false
                              },
                              "USER": {
                                "company-actions": false,
                                "company-update": false,
                                "connection-create": false,
                                "connection-delete": false,
                                "connection-modify": false,
                                "connection-read": false,
                                "order-create": false,
                                "order-delete": false,
                                "order-modify": false,
                                "order-query": false,
                                "ports-edit": false,
                                "ports-read": false,
                                "user-moderation": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Your `userId`"
                    },
                    "companies": {
                      "type": "array",
                      "description": "Includes your companyId and companyName (click Drop-down in 'Example' and choose 'Get `companyId` (id) and `companyName` (username)')"
                    },
                    "linkUserCompany": {
                      "type": "object",
                      "description": "Linked company in your account. You can get your current account role/s in your linked company here. Can also see your `companyId` and `userId` here."
                    },
                    "capabilities": {
                      "type": "object"
                    },
                    "system": {
                      "type": "object"
                    },
                    "cloudProviderDetails": {
                      "type": "object"
                    },
                    "settings": {
                      "type": "object"
                    },
                    "stats": {
                      "type": "object"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatarId": {
                      "type": "string"
                    },
                    "background": {
                      "type": "string"
                    },
                    "overviewImage": {
                      "type": "string"
                    },
                    "headline": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "legalEntityId": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "passwordUpdatedAt": {
                      "type": "string"
                    },
                    "canInviteExternal": {
                      "type": "boolean"
                    },
                    "optIntoMarketingEmail": {
                      "type": "boolean"
                    },
                    "groups": {
                      "type": "array"
                    },
                    "following": {
                      "type": "array"
                    },
                    "phone": {
                      "type": "number"
                    },
                    "needsEmailVerification": {
                      "type": "boolean"
                    },
                    "newEmail": {
                      "type": "string"
                    },
                    "displayOrder": {
                      "type": "number"
                    },
                    "newEmailTokenCreatedAt": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array"
                    },
                    "categories": {
                      "type": "array"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "verifiedIdentity": {
                      "type": "boolean"
                    },
                    "deleted": {
                      "type": "boolean"
                    },
                    "deletedAt": {
                      "type": "string"
                    },
                    "businessRegistrationNumber": {
                      "type": "string"
                    },
                    "isCloudProvider": {
                      "type": "boolean"
                    },
                    "signedCompanyRefId": {
                      "type": "string"
                    },
                    "signedCompanyVerified": {
                      "type": "boolean"
                    },
                    "accountManagerEmail": {
                      "type": "string"
                    },
                    "accountManagerId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "lastLoggedIn": {
                      "type": "string"
                    },
                    "online": {
                      "type": "boolean"
                    },
                    "token": {
                      "type": "string"
                    },
                    "hasAcceptedConsoleTermsOfUse": {
                      "type": "boolean"
                    }
                  },
                  "title": "Auth token response schema",
                  "type": "object"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "No-Token-Provided": {
                    "summary": "No Token Provided",
                    "value": {
                      "message": "The user is not logged in",
                      "status": 401,
                      "statusCode": 401
                    }
                  },
                  "User-Logged-Out": {
                    "summary": "User logged out",
                    "value": {
                      "message": "The session token been deleted",
                      "status": 401,
                      "statusCode": 401
                    }
                  }
                }
              }
            },
            "description": "Unauthorized",
            "headers": {}
          }
        },
        "tags": ["Auth"],
        "description": "Retrieve account details for the authenticated user.",
        "operationId": "GetLoggedInUser",
        "summary": "Get current user"
      }
    },
    "/app-user/{companyId}/agreements": {
      "get": {
        "parameters": [
          {
            "description": "The ObjectId of your company.",
            "in": "path",
            "name": "companyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "id": "507f1f77bcf86cd799439011",
                        "version": "1.0,",
                        "date": "2022-08-24T05:10:59.418Z",
                        "type": "CONSOLE_PORT_SERVICE_TERMS",
                        "companyId": "507f191e810c19729de860ea"
                      }
                    ]
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Agreements"],
        "description": "Get the agreements your company has agreed to.",
        "summary": "Get Agreements",
        "operationId": "GetAgreements"
      }
    },
    "/api/search": {
      "get": {
        "parameters": [
          {
            "description": "The search string (username, name, location, bio, etc).",
            "example": "consoleconnect",
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One or more types of object to search for:\n* `everything`\n* `people`\n* `companies`\n* `dataCenterFacilities`\n* `directConnectPartner`\n\nMultiple `type` parameters may be provided to search for two or more object types.",
            "example": "everything",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page number to get.",
            "example": 1,
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The number of results per page to get.",
            "example": 12,
            "in": "query",
            "name": "count",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Sort Users, Companies, and DCFs by newest.",
            "example": true,
            "in": "query",
            "name": "newest",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "One or more userIds to search for Users, Companies, and DCFs by multiple `userId` parameters may be provided to search for two or more users.",
            "example": "235014958511023495968818",
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One or more tags to search for.",
            "example": "sales",
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Start time for filtering events.",
            "example": "2015-10-07T22:37:51.732Z",
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "End time for filtering events.",
            "example": "2015-10-07T22:37:51.732Z",
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "example": {
                  "results": [
                    {
                      "title": "Frederic Citizen",
                      "type": "user",
                      "description": "",
                      "isFollowing": false,
                      "isCompanyFollowing": {
                        "corl": false
                      },
                      "data": {
                        "id": "5552a04804972e1f16dcc0d6",
                        "type": "PERSON",
                        "name": "Stan Sample",
                        "avatar": null,
                        "headline": null,
                        "summary": null,
                        "location": null,
                        "username": "stan_sample",
                        "social": null,
                        "groups": null,
                        "updatedAt": "2015-06-22T06:02:42.075Z",
                        "createdAt": "2015-05-13T00:52:24.721Z"
                      }
                    }
                  ],
                  "items": {
                    "users": [
                      {
                        "id": "56159ebe6c11fef4510bfdc7",
                        "name": "Frederic Citizen",
                        "avatar": null,
                        "background": null,
                        "headline": "I <3 Networks",
                        "summary": "IP Engineer",
                        "location": "Mt Example, TX",
                        "username": "fredcit",
                        "social": null,
                        "tags": ["#baseball", "#football"],
                        "updatedAt": "2015-10-07T22:37:51.732Z",
                        "createdAt": "2015-10-07T22:37:50.543Z",
                        "companies": [
                          {
                            "id": "56159ebf6c11fef4510bfdcc",
                            "name": "ExCo LLC",
                            "avatar": null,
                            "background": null,
                            "headline": null,
                            "summary": null,
                            "location": null,
                            "username": "exco",
                            "followers": ["56159ebe6c11fef4510bfdc7"],
                            "following": null,
                            "tags": [],
                            "verified": true,
                            "company": {
                              "website": null,
                              "industry": null,
                              "businessType": null,
                              "companySize": null,
                              "dateFounded": null,
                              "markets": {},
                              "asns": null,
                              "regionalInternetRegistry": null,
                              "clientId": null,
                              "first": null,
                              "last": null,
                              "address": null,
                              "city": null,
                              "state": null,
                              "zip": null,
                              "addresses": null,
                              "phone": null,
                              "fax": null,
                              "email": null,
                              "country": null
                            },
                            "linkUserCompany": {}
                          }
                        ],
                        "linkUserCompany": {
                          "56159ebf6c11fef4510bfdcc": {
                            "id": "56159ebf6c11fef4510bfdcd",
                            "userId": "56159ebe6c11fef4510bfdc7",
                            "companyId": "56159ebf6c11fef4510bfdcc",
                            "state": "ACTIVE",
                            "roles": ["ADMIN"],
                            "updatedAt": "2015-10-07T22:37:51.225Z",
                            "createdAt": "2015-10-07T22:37:51.225Z",
                            "deleted": false,
                            "deletedAt": "1970-01-01T00:00:00.000Z",
                            "permissions": {
                              "groups": {
                                "ADMIN": {
                                  "user-moderation": true,
                                  "company-actions": true,
                                  "company-update": true,
                                  "ports-edit": true,
                                  "ports-read": true,
                                  "connection-create": true,
                                  "connection-modify": true,
                                  "connection-read": true,
                                  "connection-delete": true,
                                  "order-query": true,
                                  "order-create": true,
                                  "order-modify": true,
                                  "order-delete": true
                                }
                              }
                            }
                          }
                        },
                        "stats": {
                          "followers": 0,
                          "interconnections": 0,
                          "posts": 1,
                          "events": 1,
                          "following": 1
                        },
                        "isFollowing": false,
                        "isCompanyFollowing": {}
                      }
                    ],
                    "companies": [],
                    "dataCenterFacilities": []
                  }
                }
              }
            }
          }
        },
        "tags": ["Search"],
        "description": "> **This endpoint is deprecated. Please use specialized search endpoints outlined in other sections of the documentation.**\n\nAn api for searching multiple entities on our platform. While this particular endpoint is convenient for finding multiple types of entities, we highly recommend using more granular search apis listed in the Users, Companies, and DCF sections.",
        "operationId": "legacy-search",
        "summary": "Search Users, Companies, and DCFs"
      }
    },
    "/api/pricing/calculate": {
      "post": {
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ports": {
                    "description": "List of ports to get pricing for.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dcf": {
                          "type": "string",
                          "description": "The ID of the DCF the port will be located in.\n\nSee [List DCFs API](#tag/Data-Center-Facilities-(DCFs)/operation/getDcfs)"
                        },
                        "speed": {
                          "type": "number",
                          "description": "The required speed of the port in Mbps, e.g., 1000 = 1000Mbps or 1Gbps, 10000 = 10Gbps",
                          "example": 1000
                        },
                        "durationUnit": {
                          "type": "string",
                          "description": "Set to `m` if the Data Center accepts month-to-month port orders.",
                          "default": "y",
                          "enum": ["y", "m"]
                        }
                      },
                      "required": ["dcf", "speed"]
                    }
                  },
                  "connections": {
                    "description": "List of layer 2 connections to get pricing for.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bandwidth": {
                          "type": "number",
                          "description": "The required bandwidth of the connection in Mbps, e.g., 30 = 30Mbps, 100 = 100Mbps, 1000 = 1Gbps"
                        },
                        "classOfService": {
                          "type": "string",
                          "enum": ["GOLD", "SILVER", "BRONZE"],
                          "description": "The class of service."
                        },
                        "duration": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/Duration"
                            },
                            {
                              "description": "Specify duration information."
                            },
                            {
                              "required": ["value", "unit"]
                            }
                          ]
                        },
                        "srcDcf": {
                          "type": "string",
                          "description": "The ID of the source (A-end) Data Center Facility.\n\nSee [List DCFs API](#tag/Data-Center-Facilities-(DCFs)/operation/getDcfs)"
                        },
                        "srcRegion": {
                          "type": "string",
                          "description": "The ID of the source (A-end) region. (Optional)"
                        },
                        "destDcf": {
                          "type": "string",
                          "description": "The ID of the destination/ (Z-end) Data Center Facility.\n\nSee [List DCFs API](#tag/Data-Center-Facilities-(DCFs)/operation/getDcfs)"
                        },
                        "destRegion": {
                          "type": "string",
                          "description": "The ID of the region of the destination (Z-end) region. (Optional)"
                        }
                      },
                      "required": [
                        "bandwidth",
                        "classOfService",
                        "duration",
                        "srcDcf",
                        "destDcf"
                      ]
                    }
                  },
                  "discountCode": {
                    "type": "string",
                    "description": "Apply promotion or partner code."
                  },
                  "includeCrossConnect": {
                    "type": "boolean",
                    "description": "Set to `true` to have the Cross Connect add-on with your port if your DCF supports this.\nOnly available in a 12 month contract."
                  }
                }
              },
              "examples": {
                "Single-Port": {
                  "summary": "Single Port with 1,000 Mbps for 12 months",
                  "value": {
                    "ports": [
                      {
                        "dcf": "5a8ba9118195000012e9f141",
                        "speed": 1000,
                        "durationUnit": "y"
                      }
                    ]
                  }
                },
                "Single-Port-with-Cross-Connect": {
                  "summary": "Single Port with 1,000 Mbps and Cross Connect Add-on for 12 months",
                  "value": {
                    "ports": [
                      {
                        "dcf": "5a8ba9118195000012e9f141",
                        "speed": 1000,
                        "durationUnit": "y"
                      }
                    ],
                    "includeCrossConnect": true
                  }
                },
                "Single-Port-with-Discount": {
                  "summary": "Single Port with 1,000 Mbps and Discount for 12 months",
                  "value": {
                    "ports": [
                      {
                        "dcf": "5a8ba9118195000012e9f141",
                        "speed": 1000,
                        "durationUnit": "y"
                      }
                    ],
                    "discountCode": "DISCOUNTDEMO"
                  }
                },
                "Multiple-Ports": {
                  "summary": "Multiple Ports",
                  "value": {
                    "ports": [
                      {
                        "dcf": "5a8ba9118195000012e9f141",
                        "speed": 10000,
                        "durationUnit": "y"
                      },
                      {
                        "dcf": "a91112e9f1ba91181950ba91",
                        "speed": 1000,
                        "durationUnit": "m"
                      }
                    ]
                  }
                },
                "Single-Connection": {
                  "summary": "Single Connection with 20 Mbps bandwidth for 1 month",
                  "value": {
                    "connections": [
                      {
                        "bandwidth": 20,
                        "classOfService": "SILVER",
                        "duration": {
                          "value": 1,
                          "unit": "m"
                        },
                        "srcDcf": "5a8a4838af6c690012871666",
                        "destDcf": "5a9739ccfae7ba00134d378b"
                      }
                    ]
                  }
                },
                "Single-Connection-with-Discount": {
                  "summary": "Single Connection with 50 Mbps bandwidth and Discount for 12 months",
                  "value": {
                    "connections": [
                      {
                        "bandwidth": 50,
                        "classOfService": "GOLD",
                        "duration": {
                          "value": 12,
                          "unit": "m"
                        },
                        "srcDcf": "5a8a4838af6c690012871666",
                        "destDcf": "5a9739ccfae7ba00134d378b"
                      }
                    ],
                    "discountCode": "DISCOUNTDEMO"
                  }
                },
                "Multiple-Connections": {
                  "summary": "Multiple Connections",
                  "value": {
                    "connections": [
                      {
                        "bandwidth": 20,
                        "classOfService": "SILVER",
                        "duration": {
                          "value": 1,
                          "unit": "w"
                        },
                        "srcDcf": "5a8a4838af6c690012871666",
                        "destDcf": "5a9739ccfae7ba00134d378b"
                      },
                      {
                        "bandwidth": 20,
                        "classOfService": "SILVER",
                        "duration": {
                          "value": 1,
                          "unit": "m"
                        },
                        "srcDcf": "5a8a4838af6c690012871666",
                        "destDcf": "5a9739ccfae7ba00134d378b"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortsConnectionsResponse"
                },
                "examples": {
                  "Single-Port": {
                    "summary": "Single Port with 1,000 Mbps for 12 months",
                    "value": {
                      "results": [
                        {
                          "type": "PORT",
                          "entity": {
                            "dcf": {
                              "id": "5a8ba9118195000012e9f141",
                              "name": "Company A",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "speed": 1000,
                            "discountId": "",
                            "durationUnit": "y"
                          },
                          "price": 300,
                          "preAuthAmount": 300,
                          "amountSaved": null,
                          "amountSavedTotal": null,
                          "basicTotalAmount": null,
                          "basicMonthlyAmount": null,
                          "priceCalculatorAttributes": {
                            "discountIds": [],
                            "discounts": []
                          }
                        }
                      ]
                    }
                  },
                  "Single-Port-with-Cross-Connect": {
                    "summary": "Single Port with 1,000 Mbps and Cross Connect Add-on for 12 months",
                    "value": {
                      "results": [
                        {
                          "type": "PORT",
                          "entity": {
                            "dcf": {
                              "id": "5a8ba9118195000012e9f141",
                              "name": "Company A",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "speed": 1000,
                            "discountId": "",
                            "durationUnit": "y"
                          },
                          "price": 300,
                          "preAuthAmount": 300,
                          "amountSaved": null,
                          "amountSavedTotal": null,
                          "basicTotalAmount": null,
                          "basicMonthlyAmount": null,
                          "priceCalculatorAttributes": {
                            "discountIds": [],
                            "discounts": []
                          },
                          "crossConnectAmount": 65
                        }
                      ]
                    }
                  },
                  "Single-Port-with-Discount": {
                    "summary": "Single Port with 1,000 Mbps and Discount for 12 months",
                    "value": {
                      "results": [
                        {
                          "type": "PORT",
                          "entity": {
                            "dcf": {
                              "id": "5a8ba9118195000012e9f141",
                              "name": "Company A",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "speed": 1000,
                            "discountId": "66c2a7ec914c31947866412b",
                            "durationUnit": "y"
                          },
                          "price": 90,
                          "preAuthAmount": 90,
                          "amountSaved": 210,
                          "amountSavedTotal": null,
                          "basicTotalAmount": null,
                          "basicMonthlyAmount": null,
                          "priceCalculatorAttributes": {
                            "discountIds": [],
                            "discounts": []
                          },
                          "discount": {
                            "discountType": "percentage",
                            "marketingCode": "DISCOUNTDEMO",
                            "duration": "recurring",
                            "applicableProducts": [],
                            "applicableDcfs": [],
                            "applicableMetros": [],
                            "purchasingCompanies": [],
                            "destinationCompanies": [],
                            "value": 70,
                            "tierType": "none",
                            "tiers": [],
                            "id": "66c2a7ec914c31947866412b",
                            "deletedAt": null,
                            "createdAt": "2024-08-19T02:03:24.851Z",
                            "updatedAt": "2024-08-20T00:05:43.690Z",
                            "name": "Get 70% off",
                            "description": "70% Discount",
                            "tags": []
                          }
                        }
                      ]
                    }
                  },
                  "Multiple-Ports": {
                    "summary": "Multiple Ports",
                    "value": {
                      "results": [
                        {
                          "type": "PORT",
                          "entity": {
                            "dcf": {
                              "id": "5a8ba9118195000012e9f141",
                              "name": "Company A",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "speed": 10000,
                            "discountId": "",
                            "durationUnit": "y"
                          },
                          "price": 400,
                          "preAuthAmount": 400,
                          "amountSaved": null,
                          "amountSavedTotal": null,
                          "basicTotalAmount": null,
                          "basicMonthlyAmount": null,
                          "priceCalculatorAttributes": {
                            "discountIds": [],
                            "discounts": []
                          }
                        },
                        {
                          "type": "PORT",
                          "entity": {
                            "dcf": {
                              "id": "a91112e9f1ba91181950ba91",
                              "name": "Company B",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "speed": 1000,
                            "discountId": "",
                            "durationUnit": "m"
                          },
                          "price": 450,
                          "preAuthAmount": 450,
                          "amountSaved": null,
                          "amountSavedTotal": null,
                          "basicTotalAmount": null,
                          "basicMonthlyAmount": null
                        }
                      ]
                    }
                  },
                  "Single-Connection": {
                    "summary": "Single Connection with 20 Mbps bandwidth for 1 month",
                    "value": {
                      "results": [
                        {
                          "type": "CONNECTION",
                          "entity": {
                            "srcDcf": {
                              "id": "5a8a4838af6c690012871666",
                              "name": "Company A",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "destDcf": {
                              "id": "5a9739ccfae7ba00134d378b",
                              "name": "Company B",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "duration": {
                              "from": null,
                              "to": null,
                              "unit": "m",
                              "value": 1
                            },
                            "bandwidth": 20,
                            "classOfService": "SILVER",
                            "discountId": ""
                          },
                          "price": 80,
                          "preAuthAmount": 80,
                          "amountSaved": null,
                          "amountSavedTotal": null,
                          "basicTotalAmount": 80,
                          "basicMonthlyAmount": 80,
                          "formula": "(bandwidthCost*multiplier)*duration/(1-margin)+portFee",
                          "factors": [
                            {
                              "name": "margin",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "portFee",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "nniFee",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "bandwidthCost",
                              "number": 80,
                              "ref": {
                                "from": {
                                  "id": "5ce379fc628923000a4fbe3b",
                                  "name": "EUROPE/UK",
                                  "regionIds": ["5a370b288f220300127f834d"]
                                },
                                "to": {
                                  "id": "5ce379fc628923000a4fbe3b",
                                  "name": "EUROPE/UK",
                                  "regionIds": ["5a370b288f220300127f834d"]
                                },
                                "price": {
                                  "price": 1.75,
                                  "bandwidth": {
                                    "from": 1,
                                    "to": 100
                                  },
                                  "cos": "SILVER"
                                }
                              }
                            },
                            {
                              "name": "multiplier",
                              "number": 1,
                              "ref": null
                            },
                            {
                              "name": "duration",
                              "number": 1,
                              "ref": null
                            }
                          ],
                          "priceCalculatorAttributes": {
                            "discountIds": [],
                            "discounts": []
                          }
                        }
                      ]
                    }
                  },
                  "Single-Connection-with-Discount": {
                    "summary": "Single Connection with 50 Mbps bandwidth and Discount for 12 months",
                    "value": {
                      "results": [
                        {
                          "type": "CONNECTION",
                          "entity": {
                            "srcDcf": {
                              "id": "5a8a4838af6c690012871666",
                              "name": "Company A",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "destDcf": {
                              "id": "5a9739ccfae7ba00134d378b",
                              "name": "Company B",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "duration": {
                              "from": null,
                              "to": null,
                              "unit": "m",
                              "value": 12
                            },
                            "bandwidth": 50,
                            "classOfService": "GOLD",
                            "discountId": "66c2a7ec914c31947866412b"
                          },
                          "price": 279.36,
                          "preAuthAmount": 23.28,
                          "amountSaved": 54.32,
                          "amountSavedTotal": 651.84,
                          "basicTotalAmount": 279.36,
                          "basicMonthlyAmount": 23.28,
                          "formula": "(bandwidthCost*multiplier)*duration/(1-margin)+portFee",
                          "factors": [
                            {
                              "name": "margin",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "portFee",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "nniFee",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "bandwidthCost",
                              "number": 80,
                              "ref": {
                                "from": {
                                  "id": "5ce379fc628923000a4fbe3b",
                                  "name": "EUROPE/UK",
                                  "regionIds": ["5a370b288f220300127f834d"]
                                },
                                "to": {
                                  "id": "5ce379fc628923000a4fbe3b",
                                  "name": "EUROPE/UK",
                                  "regionIds": ["5a370b288f220300127f834d"]
                                },
                                "price": {
                                  "price": 3.23,
                                  "bandwidth": {
                                    "from": 1,
                                    "to": 100
                                  },
                                  "cos": "GOLD"
                                }
                              }
                            },
                            {
                              "name": "multiplier",
                              "number": 0.97,
                              "ref": null
                            },
                            {
                              "name": "duration",
                              "number": 12,
                              "ref": null
                            }
                          ],
                          "priceCalculatorAttributes": {
                            "discountIds": [],
                            "discounts": []
                          },
                          "discount": {
                            "discountType": "percentage",
                            "marketingCode": "DISCOUNTDEMO",
                            "duration": "recurring",
                            "applicableProducts": [],
                            "applicableDcfs": [],
                            "applicableMetros": [],
                            "purchasingCompanies": [],
                            "destinationCompanies": [],
                            "value": 70,
                            "tierType": "none",
                            "tiers": [],
                            "id": "66c2a7ec914c31947866412b",
                            "deletedAt": null,
                            "createdAt": "2024-08-19T02:03:24.851Z",
                            "updatedAt": "2024-08-20T00:05:43.690Z",
                            "name": "Get 70% off",
                            "description": "70% Discount",
                            "tags": []
                          }
                        }
                      ]
                    }
                  },
                  "Multiple-Connections": {
                    "summary": "Multiple Connections",
                    "value": {
                      "results": [
                        {
                          "type": "CONNECTION",
                          "entity": {
                            "srcDcf": {
                              "id": "5a8a4838af6c690012871666",
                              "name": "Company A",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "destDcf": {
                              "id": "5a9739ccfae7ba00134d378b",
                              "name": "Company B",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "duration": {
                              "from": null,
                              "to": null,
                              "unit": "w",
                              "value": 1
                            },
                            "bandwidth": 20,
                            "classOfService": "SILVER",
                            "discountId": ""
                          },
                          "price": 28.8,
                          "preAuthAmount": 28.8,
                          "amountSaved": null,
                          "amountSavedTotal": null,
                          "basicTotalAmount": 28.8,
                          "basicMonthlyAmount": 28.8,
                          "formula": "(bandwidthCost*multiplier)*duration/(1-margin)+portFee",
                          "factors": [
                            {
                              "name": "margin",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "portFee",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "nniFee",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "bandwidthCost",
                              "number": 80,
                              "ref": {
                                "from": {
                                  "id": "5ce379fc628923000a4fbe3b",
                                  "name": "EUROPE/UK",
                                  "regionIds": ["5a370b288f220300127f834d"]
                                },
                                "to": {
                                  "id": "5ce379fc628923000a4fbe3b",
                                  "name": "EUROPE/UK",
                                  "regionIds": ["5a370b288f220300127f834d"]
                                },
                                "price": {
                                  "price": 1.75,
                                  "bandwidth": {
                                    "from": 1,
                                    "to": 100
                                  },
                                  "cos": "SILVER"
                                }
                              }
                            },
                            {
                              "name": "multiplier",
                              "number": 0.36,
                              "ref": null
                            },
                            {
                              "name": "duration",
                              "number": 1,
                              "ref": null
                            }
                          ],
                          "priceCalculatorAttributes": {
                            "discountIds": [],
                            "discounts": []
                          }
                        },
                        {
                          "type": "CONNECTION",
                          "entity": {
                            "srcDcf": {
                              "id": "5a8a4838af6c690012871666",
                              "name": "Company A",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "destDcf": {
                              "id": "5a9739ccfae7ba00134d378b",
                              "name": "Company B",
                              "popId": null,
                              "regionIds": null,
                              "metroIds": null,
                              "tags": null
                            },
                            "duration": {
                              "from": null,
                              "to": null,
                              "unit": "m",
                              "value": 1
                            },
                            "bandwidth": 20,
                            "classOfService": "SILVER",
                            "discountId": ""
                          },
                          "price": 80,
                          "preAuthAmount": 80,
                          "amountSaved": null,
                          "amountSavedTotal": null,
                          "basicTotalAmount": 80,
                          "basicMonthlyAmount": 80,
                          "formula": "(bandwidthCost*multiplier)*duration/(1-margin)+portFee",
                          "factors": [
                            {
                              "name": "margin",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "portFee",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "nniFee",
                              "number": 0,
                              "ref": null
                            },
                            {
                              "name": "bandwidthCost",
                              "number": 80,
                              "ref": {
                                "from": {
                                  "id": "5ce379fc628923000a4fbe3b",
                                  "name": "EUROPE/UK",
                                  "regionIds": ["5a370b288f220300127f834d"]
                                },
                                "to": {
                                  "id": "5ce379fc628923000a4fbe3b",
                                  "name": "EUROPE/UK",
                                  "regionIds": ["5a370b288f220300127f834d"]
                                },
                                "price": {
                                  "price": 1.75,
                                  "bandwidth": {
                                    "from": 1,
                                    "to": 100
                                  },
                                  "cos": "SILVER"
                                }
                              }
                            },
                            {
                              "name": "multiplier",
                              "number": 1,
                              "ref": null
                            },
                            {
                              "name": "duration",
                              "number": 1,
                              "ref": null
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No price was found for this combination.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "response": {
                    "value": {
                      "code": 204,
                      "message": "No Content"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "invalid-dcf": {
                    "summary": "invalid dcf",
                    "value": {
                      "code": 400,
                      "message": "Invalid dcf property. This value should be the dcf ID."
                    }
                  },
                  "invalid-srcDcf": {
                    "summary": "invalid srcDcf",
                    "value": {
                      "code": 400,
                      "message": "Invalid srcDcf property. This value should be the srcDcf ID."
                    }
                  },
                  "invalid-discount-code": {
                    "summary": "invalid discount code",
                    "value": {
                      "code": 400,
                      "message": "INVALID CODE"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Pricing"],
        "description": "Calculate pricing for Ports and Layer 2 Connections",
        "operationId": "calculate-price-for-ports-and-connections",
        "summary": "Ports and Connections"
      }
    },
    "/api/company/{username}/pricing/calculate/flex": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "The username of the company.",
            "example": "company_co",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connectionId": {
                    "type": "string",
                    "description": "The connection ID of the connection you want to get flex pricing for."
                  },
                  "flexBandwidth": {
                    "type": "string",
                    "description": "The additional bandwidth to be added to the connection."
                  },
                  "discountCode": {
                    "type": "string",
                    "description": "Any discount code you may have been provided."
                  }
                },
                "required": ["connectionId", "flexBandwidth"]
              },
              "examples": {
                "Without-Discount": {
                  "summary": "Without Discount",
                  "value": {
                    "connectionId": "95908593icTTl895393135Y7K",
                    "flexBandwidth": "100"
                  }
                },
                "With-Discount-Code": {
                  "summary": "With Discount Code",
                  "value": {
                    "connectionId": "95908593icTTl895393135Y7K",
                    "flexBandwidth": "100",
                    "discountCode": "FIRSTCONNECTION"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connectionId": {
                      "type": "string",
                      "description": "The connection ID of the connection you want to get flex pricing for."
                    },
                    "flexBandwidth": {
                      "type": "number",
                      "description": ""
                    },
                    "flexCharge": {
                      "type": "number",
                      "description": "The additional charge for flexing the connection by the stated amount."
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "connectionId": "95908593icTTl895393135Y7K",
                      "flexBandwidth": 100,
                      "flexCharge": 97
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "204": {
            "description": "No price was found for this combination."
          },
          "400": {
            "description": "error",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "missing-parameter": {
                    "summary": "missing parameter",
                    "value": {
                      "code": 400,
                      "message": "flex price calculate payload must have a connectionId"
                    }
                  },
                  "invalid-discount-code": {
                    "summary": "invalid discount code",
                    "value": {
                      "code": 400,
                      "message": "Invalid Code"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Pricing"],
        "description": "Retrieve flex pricing for a connection.",
        "operationId": "connection-flex-price-calculate",
        "summary": "Connections - Flex pricing"
      }
    },
    "/v2/pricing/gia/byCompanyAndPort": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the Company.",
            "example": "507f1f77bcf86cd799439011",
            "in": "query",
            "name": "companyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Port.",
            "example": "507f191e810c19729de860ea",
            "in": "query",
            "name": "portId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The desired bandwidth for the GIA service in Mbps.",
            "example": "10",
            "in": "query",
            "name": "bandwidth",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The duration the service was ordered for.",
            "example": "12",
            "in": "query",
            "name": "durationValue",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unit of time such as days, weeks, months, and years. Value can be one of: d, w, m, y.",
            "example": "m",
            "in": "query",
            "name": "durationUnit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "Optional discount code.",
            "name": "discountCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GiaPricing-Recurring"
                    },
                    {
                      "$ref": "#/components/schemas/GiaPricing-OneOff"
                    },
                    {
                      "$ref": "#/components/schemas/GiaPricing-NoPrice"
                    }
                  ]
                },
                "examples": {
                  "prices-with-duration-greater-than-one-month": {
                    "summary": "prices with a duration greater than one month",
                    "value": {
                      "contractTotals": {
                        "giaCost": 3420,
                        "ipCosts": {
                          "ipv426Cost": 1596,
                          "ipv427Cost": 1140,
                          "ipv428Cost": 0,
                          "ipv429Cost": null,
                          "ipv430Cost": null
                        }
                      },
                      "unitCosts": {
                        "giaCost": 142.5,
                        "ipCosts": {
                          "ipv426Cost": 66.5,
                          "ipv427Cost": 47.5,
                          "ipv428Cost": 0,
                          "ipv429Cost": null,
                          "ipv430Cost": null
                        }
                      },
                      "contractTotalsAmountSaved": null,
                      "unitCostsAmountSaved": null,
                      "burstRate": 0.04681165489,
                      "duration": {
                        "unit": "m",
                        "value": 24
                      }
                    }
                  },
                  "prices-with-duration-less-than-one-month": {
                    "summary": "prices with duration less than one month",
                    "value": {
                      "onceOff": {
                        "giaCost": 73.97,
                        "ipCosts": {
                          "ipv426Cost": 34.52,
                          "ipv427Cost": 24.66,
                          "ipv428Cost": 0,
                          "ipv429Cost": null,
                          "ipv430Cost": null
                        }
                      },
                      "burstRate": 0.004050035038912062,
                      "duration": {
                        "unit": "d",
                        "value": 6
                      }
                    }
                  },
                  "no-price": {
                    "summary": "no price",
                    "value": {
                      "message": "No prices are available for GIA in the specified Port's Metro"
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "company-required": {
                    "summary": "company required",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "companyId is a required argument"
                      }
                    }
                  },
                  "invalid-bandwidth": {
                    "summary": "invalid bandwidth",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Value is not a number."
                      }
                    }
                  },
                  "bandwidth-must-be-a-positive-number": {
                    "summary": "bandwidth must be a positive number",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Port bandwidth must be a positive integer in Mbps."
                      }
                    }
                  },
                  "duration-must-be-valid": {
                    "summary": "duration must be valid",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Value is not a number."
                      }
                    }
                  },
                  "duration-must-be-a-positive-number": {
                    "summary": "duration must be a positive number",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "2.1 is not a positive integer. Duration quantity must be a positive integer"
                      }
                    }
                  },
                  "durationUnit-must-be-valid-unit": {
                    "summary": "durationUnit must be a valid unit",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "x is not a valid duration unit. Valid units are: \"d\", \"w\", \"m\", \"y\""
                      }
                    }
                  },
                  "bandwidth-too-large": {
                    "summary": "bandwidth too large",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "The requested bandwidth exceeds the available capacity for the Port. Max is: 10"
                      }
                    }
                  },
                  "unsupported-port": {
                    "summary": "unsupported port",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Internet on demand is not available on port with ID 507f191e810c19729de860ea .  Please select another port or contact support@consoleconnect.com if you want Internet on demand at this location."
                      }
                    }
                  },
                  "invalid-request": {
                    "summary": "invalid request",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Invalid request for GIA pricing"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "company-not-found": {
                    "summary": "company not found",
                    "value": {
                      "error": {
                        "code": 404,
                        "message": "A company can not be found with the given id"
                      }
                    }
                  },
                  "port-not-found": {
                    "summary": "port not found",
                    "value": {
                      "error": {
                        "code": 404,
                        "message": "A port can not be found with the given id"
                      }
                    }
                  },
                  "unavailable": {
                    "summary": "unavailable",
                    "value": {
                      "error": {
                        "code": 404,
                        "message": "Gia service is turned off now."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Pricing"],
        "description": "Get Internet On-Demand pricing by company and port.\n* **GIA Pricing Recurring** - Applicable charges for IO-D with service duration of *more* than a month.\n* **GIA Pricing OneOff** - Applicable charges for IO-D with service duration of *less* than a month.",
        "operationId": "iod-pricing-by-company-and-port",
        "summary": "Internet On-Demand - Company and Port"
      }
    },
    "/v2/pricing/gia/byDcf": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the Data Center Facility.",
            "example": "507f191e810c19729de860ea",
            "in": "query",
            "name": "dcfId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The desired bandwidth for the GIA Service in Mbps.",
            "example": "10",
            "in": "query",
            "name": "bandwidth",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The duration the service was ordered for.",
            "example": "12",
            "in": "query",
            "name": "durationValue",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unit of time such as days, weeks, months, and years. Value can be one of: d, w, m, y.",
            "example": "m",
            "in": "query",
            "name": "durationUnit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "Optional discount code.",
            "name": "discountCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "The ID of the Company.",
            "example": "507f1f77bcf86cd799439011",
            "name": "companyId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GiaPricing-OneOff"
                    },
                    {
                      "$ref": "#/components/schemas/GiaPricing-Recurring"
                    },
                    {
                      "$ref": "#/components/schemas/GiaPricing-NoPrice"
                    }
                  ]
                },
                "examples": {
                  "prices-with-duration-greater-than-one-month": {
                    "summary": "prices with a duration greater than one month",
                    "value": {
                      "contractTotals": {
                        "giaCost": 3420,
                        "ipCosts": {
                          "ipv426Cost": 1596,
                          "ipv427Cost": 1140,
                          "ipv428Cost": 0,
                          "ipv429Cost": null,
                          "ipv430Cost": null
                        }
                      },
                      "unitCosts": {
                        "giaCost": 142.5,
                        "ipCosts": {
                          "ipv426Cost": 66.5,
                          "ipv427Cost": 47.5,
                          "ipv428Cost": 0,
                          "ipv429Cost": null,
                          "ipv430Cost": null
                        }
                      },
                      "contractTotalsAmountSaved": null,
                      "unitCostsAmountSaved": null,
                      "burstRate": 0.04681165489,
                      "duration": {
                        "unit": "m",
                        "value": 24
                      }
                    }
                  },
                  "prices-with-duration-less-than-one-month": {
                    "summary": "prices with duration less than one month",
                    "value": {
                      "onceOff": {
                        "giaCost": 73.97,
                        "ipCosts": {
                          "ipv426Cost": 34.52,
                          "ipv427Cost": 24.66,
                          "ipv428Cost": 0,
                          "ipv429Cost": null,
                          "ipv430Cost": null
                        }
                      },
                      "burstRate": 0.004050035038912062,
                      "duration": {
                        "unit": "d",
                        "value": 6
                      }
                    }
                  },
                  "no-prices": {
                    "summary": "no prices",
                    "value": {
                      "message": "No prices are available for GIA in the specified Port's Metro"
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "company-required": {
                    "summary": "company required",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "dcfId is a required argument"
                      }
                    }
                  },
                  "invalid-bandwidth": {
                    "summary": "invalid bandwidth",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Value is not a number."
                      }
                    }
                  },
                  "bandwidth-must-be-a-positive-number": {
                    "summary": "bandwidth must be a positive number",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Port bandwidth must be a positive integer in Mbps."
                      }
                    }
                  },
                  "duration-must-be-valid": {
                    "summary": "duration must be valid",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Value is not a number."
                      }
                    }
                  },
                  "duration-must-be-a-positive-number": {
                    "summary": "duration must be a positive number",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "2.1 is not a positive integer. Duration quantity must be a positive integer"
                      }
                    }
                  },
                  "durationUnit-must-be-valid-unit": {
                    "summary": "durationUnit must be a valid unit",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "x is not a valid duration unit. Valid units are: \"d\", \"w\", \"m\", \"y\""
                      }
                    }
                  },
                  "invalid-request": {
                    "summary": "invalid request",
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Invalid request for GIA pricing"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "company-not-found": {
                    "summary": "company not found",
                    "value": {
                      "error": {
                        "code": 404,
                        "message": "A company can not be found with the given id"
                      }
                    }
                  },
                  "dcf-not-found": {
                    "summary": "dcf not found",
                    "value": {
                      "error": {
                        "code": 404,
                        "message": "A data centre facility can not be found with the given id"
                      }
                    }
                  },
                  "unavailable": {
                    "summary": "unavailable",
                    "value": {
                      "error": {
                        "code": 404,
                        "message": "Gia Service is turned off now."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Pricing"],
        "description": "Get Internet On-Demand price for a specific DCF\n* **GIA Pricing Recurring** - Applicable charges for IO-D with service duration of *more* than a month.\n* **GIA Pricing OneOff** - Applicable charges for IO-D with service duration of *less* than a month.\n> **Note:** An error will be returned if there was no pricing found for a service with the desired bandwidth. Please contact your BDM or Support if this happens.",
        "operationId": "iod-pricing-by-DCF",
        "summary": "Internet on Demand - DCF"
      }
    },
    "/v2/pricing/gia/bulkByDcf": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the Data Center Facility.",
            "example": "507f191e810c19729de860ea",
            "in": "query",
            "name": "dcfId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "priceRequests",
            "description": "An array of objects with the price request details as a JSON serialised string.",
            "required": true,
            "example": [
              {
                "bandwidth": 10,
                "durationValue": 2,
                "durationUnit": "y"
              },
              {
                "bandwidth": 10,
                "durationValue": 1,
                "durationUnit": "y"
              }
            ],
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bandwidth": {
                        "type": "number",
                        "description": ""
                      },
                      "durationValue": {
                        "type": "number",
                        "description": ""
                      },
                      "durationUnit": {
                        "type": "string",
                        "description": ""
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/GiaPricing-Recurring"
                      },
                      {
                        "$ref": "#/components/schemas/GiaPricing-OneOff"
                      },
                      {
                        "$ref": "#/components/schemas/GiaPricing-NoPrice"
                      }
                    ]
                  }
                },
                "examples": {
                  "mixed-response": {
                    "summary": "mixed response",
                    "value": [
                      {
                        "contractTotals": {
                          "giaCost": 3420,
                          "ipCosts": {
                            "ipv426Cost": 1596,
                            "ipv427Cost": 1140,
                            "ipv428Cost": 0,
                            "ipv429Cost": null,
                            "ipv430Cost": null
                          }
                        },
                        "unitCosts": {
                          "giaCost": 142.5,
                          "ipCosts": {
                            "ipv426Cost": 66.5,
                            "ipv427Cost": 47.5,
                            "ipv428Cost": 0,
                            "ipv429Cost": null,
                            "ipv430Cost": null
                          }
                        },
                        "contractTotalsAmountSaved": null,
                        "unitCostsAmountSaved": null,
                        "burstRate": 0.04681165489,
                        "duration": {
                          "unit": "m",
                          "value": 24
                        }
                      },
                      {
                        "onceOff": {
                          "giaCost": 73.97,
                          "ipCosts": {
                            "ipv426Cost": 34.52,
                            "ipv427Cost": 24.66,
                            "ipv428Cost": 0,
                            "ipv429Cost": null,
                            "ipv430Cost": null
                          }
                        },
                        "burstRate": 0.004050035038912062,
                        "duration": {
                          "unit": "d",
                          "value": 6
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "company-not-found": {
                    "summary": "company not found",
                    "value": {
                      "error": {
                        "code": 404,
                        "message": "A company can not be found with the given id"
                      }
                    }
                  },
                  "unavailable": {
                    "summary": "unavailable",
                    "value": {
                      "error": {
                        "code": 404,
                        "message": "Gia Service is turned off now."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Pricing"],
        "description": "Get Internet On-Demand prices for multiple DCFs in a single call.\n* **GIA Pricing Recurring** - Applicable charges for IO-D with service duration of *more* than a month.\n* **GIA Pricing OneOff** - Applicable charges for IO-D with service duration of *less* than a month.",
        "operationId": "iod-pricing-by-DCF-bulk",
        "summary": "Internet On-Demand - DCF (bulk)"
      }
    },
    "/v2/pricing/flex-iod/{giaServiceId}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the IoD service to flex.",
            "example": "ae913a22-d9ae-4022-9016-edb58575e39b",
            "in": "path",
            "name": "giaServiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The desired bandwidth to flex the service to.",
            "example": "10",
            "in": "query",
            "name": "bandwidth",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional discount code.",
            "example": "20PERCENT",
            "in": "query",
            "name": "discountCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "flexCharge": {
                      "type": "number",
                      "description": ""
                    },
                    "amountSaved": {
                      "type": "number"
                    }
                  },
                  "example": {
                    "flexCharge": 42.4,
                    "amountSaved": 0
                  }
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "code": 422,
                        "message": "GiaService not found: ae913a22-d9ae-4022-9016-edb58575e39b"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "code": 422,
                        "message": "Flex price is not available for the requested bandwidth for this service"
                      }
                    }
                  }
                }
              }
            },
            "description": "Unprocessable Entity\n\nNo Pricing is available for the service's metro.\n\nAn error will be returned if there was no pricing found for a flex to the desired bandwidth in this service's metro. If this happens, please contact your BDM or Support.",
            "headers": {}
          }
        },
        "tags": ["Pricing"],
        "description": "Retrieve flex pricing for Internet On-Demand services.",
        "operationId": "iod-flex-pricing",
        "summary": "Internet On-Demand - Flex"
      }
    },
    "/v2/pricing/l3vpn": {
      "post": {
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "companyId": "66eb1831e49462a7c87e097e",
                "bandwidth": "500MB",
                "duration": {
                  "unit": "m",
                  "value": 6
                },
                "sites": [
                  {
                    "priceRefId": "1",
                    "dcfId": "66eb183694742642e25edb64",
                    "rateLimit": {
                      "unit": "mbps",
                      "value": 100
                    },
                    "classOfService": [
                      {
                        "name": "BRONZE",
                        "value": 100
                      }
                    ],
                    "discountId": ""
                  }
                ],
                "discountCode": ""
              },
              "schema": {
                "type": "object",
                "properties": {
                  "companyId": {
                    "type": "string",
                    "description": "The ID of the company. You can check your companyId in your account on ***[Console Connect](https://www.consoleconnect.com/)*** website or you can query in ***[Auth](#tag/Auth/operation/GetLoggedInUser)*** API\n"
                  },
                  "bandwidth": {
                    "type": "string",
                    "description": "The desired bandwidth for the CloudRouter",
                    "enum": ["500MB", "1GB", "2.5GB", "5GB", "10GB", ">10GB"]
                  },
                  "duration": {
                    "$ref": "#/components/schemas/Duration"
                  },
                  "sites": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/CloudRouterPriceCalcSiteStandard"
                      },
                      {
                        "$ref": "#/components/schemas/CloudRouterPriceCalcSiteSIMPool"
                      }
                    ]
                  },
                  "discountCode": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": ["companyId", "bandwidth", "duration", "sites"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "baseL3vpnCost": {
                      "type": "number",
                      "description": ""
                    },
                    "totalContractCost": {
                      "type": "number",
                      "description": ""
                    },
                    "duration": {
                      "$ref": "#/components/schemas/Duration"
                    },
                    "sites": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "hourlyCost": {
                            "type": "number"
                          },
                          "dailyCost": {
                            "type": "number"
                          },
                          "monthlyCost": {
                            "type": "number"
                          },
                          "site": {
                            "$ref": "#/components/schemas/CloudRouterPriceCalcSiteStandard"
                          }
                        }
                      }
                    },
                    "baseL3vpnCostAmountSaved": {
                      "type": "number",
                      "description": ""
                    },
                    "totalContractCostAmountSaved": {
                      "type": "number",
                      "description": ""
                    },
                    "discount": {
                      "$ref": "#/components/schemas/Discount"
                    }
                  }
                },
                "examples": {
                  "price-on-application": {
                    "summary": "price on application",
                    "value": {
                      "totalContractCost": 1200,
                      "baseL3vpnCost": 200,
                      "duration": {
                        "from": null,
                        "to": null,
                        "unit": "m",
                        "value": 6
                      },
                      "sites": [
                        {
                          "site": {
                            "portId": "66eb1a9d2778c42f179cdd7d",
                            "dcfId": "66eb183694742642e25edb64",
                            "discountId": "",
                            "rateLimit": {
                              "unit": "MBPS",
                              "value": 100
                            },
                            "providerInfo": {
                              "dcfName": "sampleDcfName",
                              "dcfId": "66eb183694742642e25edb64",
                              "metroId": "66eb19f1007415be57b333d1",
                              "city": "Tokyo",
                              "country": "JP",
                              "countryDisplayName": "Japan"
                            }
                          },
                          "priceRefId": "1",
                          "prices": {
                            "BRONZE": {
                              "hourlyCost": 0,
                              "hourlyCostAmountSaved": null,
                              "dailyCost": 0,
                              "monthlyCost": 0
                            },
                            "SILVER": {
                              "hourlyCost": 0,
                              "hourlyCostAmountSaved": null,
                              "dailyCost": 0,
                              "monthlyCost": 0
                            },
                            "GOLD": {
                              "hourlyCost": 0,
                              "hourlyCostAmountSaved": null,
                              "dailyCost": 0,
                              "monthlyCost": 0
                            }
                          }
                        }
                      ],
                      "baseL3vpnCostAmountSaved": null,
                      "totalContractCostAmountSaved": null,
                      "totalHourlySiteCostAmountSaved": 0,
                      "bandwidth": "500MB"
                    }
                  },
                  "with-sites": {
                    "summary": "with sites",
                    "value": {
                      "baseL3vpnCost": 100,
                      "totalContractCost": 200,
                      "duration": {
                        "1": "m"
                      },
                      "sites": [
                        {
                          "site": null,
                          "dcfId": "63241b384a42ce7e676819eb",
                          "rateLimit": {
                            "unit": "mbps",
                            "value": 100
                          },
                          "providerInfo": {
                            "dcfName": "brisbaneDcf",
                            "dcfId": "63241b384a42ce7e676819eb",
                            "metroId": "63241b384a42ce7e676819e2",
                            "city": "Brisbane",
                            "country": "AUS"
                          },
                          "priceRefId": 1,
                          "prices": {
                            "BRONZE": {
                              "hourlyCost": 0,
                              "dailyCost": 0,
                              "monthlyCost": 0
                            },
                            "SILVER": {
                              "hourlyCost": 0,
                              "dailyCost": 0,
                              "monthlyCost": 0
                            },
                            "GOLD": {
                              "hourlyCost": 0,
                              "dailyCost": 0,
                              "monthlyCost": 0
                            }
                          }
                        }
                      ],
                      "bandwidth": "500MB"
                    }
                  },
                  "with-sites-and-discount": {
                    "value": {
                      "summary": "with sites and discounts",
                      "baseL3vpnCost": 100,
                      "totalContractCost": 200,
                      "duration": {
                        "1": "m"
                      },
                      "sites": [
                        {
                          "site": null,
                          "dcfId": "63241b384a42ce7e676819eb",
                          "rateLimit": {
                            "unit": "mbps",
                            "value": 100
                          },
                          "providerInfo": {
                            "dcfName": "brisbaneDcf",
                            "dcfId": "63241b384a42ce7e676819eb",
                            "metroId": "63241b384a42ce7e676819e2",
                            "city": "Brisbane",
                            "country": "AUS"
                          },
                          "priceRefId": 1,
                          "prices": {
                            "BRONZE": {
                              "hourlyCost": 0,
                              "dailyCost": 0,
                              "monthlyCost": 0
                            },
                            "SILVER": {
                              "hourlyCost": 0,
                              "dailyCost": 0,
                              "monthlyCost": 0
                            },
                            "GOLD": {
                              "hourlyCost": 0,
                              "dailyCost": 0,
                              "monthlyCost": 0
                            }
                          }
                        }
                      ],
                      "bandwidth": "500MB",
                      "baseL3vpnCostAmountSaved": 20,
                      "totalContractCostAmountSaved": 120,
                      "discount": {
                        "discountType": "percentage",
                        "marketingCode": "L3VPNDISCOUNT",
                        "duration": "recurring",
                        "applicableProducts": ["L3VPN"],
                        "redemptions": 10,
                        "value": 10,
                        "tierType": "none",
                        "id": "6327e43d773e329b467f1ee4",
                        "deletedAt": null,
                        "createdAt": "2022-09-19T03:38:37.812Z",
                        "updatedAt": "2022-09-19T03:38:37.813Z"
                      }
                    }
                  },
                  "without-sites": {
                    "summary": "without sites",
                    "value": {
                      "totalContractCost": null,
                      "baseL3vpnCost": null,
                      "duration": {
                        "unit": "m",
                        "value": 6
                      },
                      "sites": [],
                      "bandwidth": "500MB"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "validations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "bandwidth-required": {
                    "summary": "bandwidth required",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "bandwidth is a required argument"
                      }
                    }
                  },
                  "bandwidth-invalid": {
                    "summary": "bandwidth invalid",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Bandwidth must be one of (500MB,1GB,2.5GB,5GB,10GB,>10GB)"
                      }
                    }
                  },
                  "duration-required": {
                    "summary": "duration required",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "duration is a required argument"
                      }
                    }
                  },
                  "duration-invalid": {
                    "summary": "duration invalid",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Duration should be in the format { unit: String, value: Number } where unit is one of \\\"m\\\" | \\\"y\\\" and value is a number greater than 0"
                      }
                    }
                  },
                  "duration-unit-invalid": {
                    "summary": "duration unit invalid",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "d is not a valid duration unit. Valid units are: \\\"m\\\", \\\"y\\\""
                      }
                    }
                  },
                  "duration-value-must-be-positive": {
                    "summary": "duration value must be positive",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "-6 is not a positive integer. Duration value must be a positive integer"
                      }
                    }
                  },
                  "duration-value-invalid": {
                    "summary": "duration value invalid",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "100 is not a valid quantity for duration unit: m. The maximum quantity for this unit is 36"
                      }
                    }
                  },
                  "dcfId-required": {
                    "summary": "dcfId required",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "dcfId is a required site field"
                      }
                    }
                  },
                  "rate-limit-not-valid": {
                    "summary": "rate limit not valid",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Requested rateLimit is not valid. Please provide rateLimit in this format: {\\\"unit\\\": \\\"Mbps\\\", \\\"value\\\": 200}"
                      }
                    }
                  },
                  "rate-limit-must-be-a-positive-integer": {
                    "summary": "rate limit must be a positive integer",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Requested rateLimit.value must be a number greater than 0"
                      }
                    }
                  },
                  "price-ref-id-must-a-string": {
                    "summary": "price ref id must be a string",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "priceRefId must be a valid string"
                      }
                    }
                  },
                  "price-ref-id-must-be-unique": {
                    "summary": "price ref id must be unique",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "priceRefId for each site must be unique"
                      }
                    }
                  },
                  "discount-code-invalid": {
                    "summary": "discount code invalid",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Invalid code."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "bandwidth-required": {
                    "summary": "bandwidth required",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "You are not authorized to do that."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "datacenter-facilities": {
                    "summary": "datacenter facilities",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "One or more requested datacenter facilities could not be found."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Pricing"],
        "description": "CloudRouter Base Charge\n* Customer can change site configuration on demand.\n* Site charges are billed based on time in arrears.\n* Hourly Price is displayed to the customer (customer will only be billed to fraction of a second)\n* No charge for one site. Site charge will be calculated when the second site is added.\n* The customer will be shown an hourly price for the all the sites combined.\n* If a site is added or removed the hourly price for all sites will be updated.\n* Each eligible Console Connect Data Centre record will be allocated a CR pricing Zone\n* If all the sites are within the same metro location a flat charge will be applied.\n* Metro flat rate exceptions can be added for specific locations where metro costs are too expensive, these will receive a per mbps price.\n* Pricing will be determined based on the locations of all the sites using the per mbps price for the pricing zone.\n* The maximum bandwidth allowed on a site can be restricted based on the costbook location mapped to each sites DCF.\n* Bandwidth Limit = Maximum Rate Limit",
        "operationId": "cloudrouter-pricing",
        "summary": "CloudRouter"
      }
    },
    "/v2/pricing/l3vpn/{l3vpnId}/add-site": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "l3vpnId",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CloudRouterPricingAddSiteStandard"
                  },
                  {
                    "$ref": "#/components/schemas/CloudRouterPricingAddSiteSIMPool"
                  }
                ]
              },
              "examples": {
                "Get-Price-Using-Metro": {
                  "summary": "Get the price of adding a new site to my existing L3vpn using metro flat price",
                  "value": {
                    "site": {
                      "simPool": false,
                      "portId": "66f2a3055027af9152a0a8c3",
                      "rateLimit": {
                        "unit": "mbps",
                        "value": 100
                      },
                      "classOfService": [
                        {
                          "name": "BRONZE",
                          "value": 100
                        }
                      ]
                    }
                  }
                },
                "Get-Price-All-Sim-Pool-Sites": {
                  "summary": "Get free pricing when all sites are sim pool sites",
                  "value": {
                    "site": {
                      "simPoolId": "SAMPLE_SIM_POOL_ID"
                    }
                  }
                },
                "Get-Price-Adding-Sim-Pool-Using-Zone-Pricing": {
                  "summary": "Get the price of adding a new SIMPool site to existing L3vpn using zone pricing",
                  "value": {
                    "site": {
                      "simPoolId": "SAMPLE_SIM_POOL_ID"
                    }
                  }
                },
                "Get-Price-Adding-Sim-Pool-Using-Metro-Flat-Price": {
                  "summary": "Get the price of adding a new SIMPool site to existing L3vpn using metro flat price",
                  "value": {
                    "site": {
                      "simPoolId": "SAMPLE_SIM_POOL_ID"
                    }
                  }
                },
                "Get-Price-Using-Global-Pricing": {
                  "summary": "Get the price of adding a new site to existing L3vpn using GLOBAL pricing",
                  "value": {
                    "site": {
                      "portId": "66f2d8f3134d70f7a077d302",
                      "rateLimit": {
                        "unit": "mbps",
                        "value": 80
                      },
                      "classOfService": [
                        {
                          "name": "BRONZE",
                          "value": 100
                        }
                      ],
                      "simPool": false
                    }
                  }
                },
                "Get-Price-Using-Same-Zone-Pricing": {
                  "summary": "Get the price of adding a new site to existing L3vpn using SAME-ZONE pricing",
                  "value": {
                    "site": {
                      "portId": "66f2df77c1088d46580d02ac",
                      "rateLimit": {
                        "unit": "mbps",
                        "value": 80
                      },
                      "classOfService": [
                        {
                          "name": "BRONZE",
                          "value": 100
                        }
                      ],
                      "simPool": false
                    }
                  }
                },
                "Get-Price-Using-Cloud-Port": {
                  "summary": "Get the price of adding a new site to existing L3vpn using a cloud port",
                  "value": {
                    "site": {
                      "portId": "66f2e597e8abe96039eeceb9",
                      "rateLimit": {
                        "unit": "mbps",
                        "value": 100
                      },
                      "classOfService": [
                        {
                          "name": "BRONZE",
                          "value": 100
                        }
                      ],
                      "simPool": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudRouterSitePricing"
                },
                "examples": {
                  "Get-Price-Using-Metro": {
                    "summary": "Get the price of adding a new site to existing L3vpn using metro flat price",
                    "value": {
                      "l3vpnId": "66f2a3dbb2ee7c6a60420863",
                      "baseL3vpnCost": 500,
                      "totalContractCost": 500,
                      "totalHourlySiteCost": 20,
                      "totalMonthlySiteCost": 14600,
                      "sites": [
                        {
                          "site": {
                            "id": "3e67a984-9eb2-4837-842d-6ae405400cf7",
                            "companyId": "66f2a394a7a51d430f33bdcb",
                            "l3vpnId": "66f2a3dbb2ee7c6a60420863",
                            "name": "Sample l3vpn site",
                            "type": "COMPANY",
                            "portId": "66f2a3c87ee81a5fef8daea9",
                            "slVlanId": null,
                            "rateLimit": {
                              "rate": 10,
                              "unit": "Mbps",
                              "value": 10
                            },
                            "mtu": null,
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "redundancySiteType": "primary",
                            "redundancyLinkedSiteId": null,
                            "status": "ACTIVE",
                            "simPoolId": null,
                            "company_id": "66f2a394a7a51d430f33bdcb",
                            "l3vpn_id": "66f2a3dbb2ee7c6a60420863",
                            "sim_pool_id": null,
                            "deleted_at": null,
                            "created_at": "2024-09-23T06:20:49.897Z",
                            "updated_at": "2024-09-23T06:20:49.897Z",
                            "port_id": "66f2a3c87ee81a5fef8daea9",
                            "discountId": null,
                            "priceRefId": "3e67a984-9eb2-4837-842d-6ae405400cf7",
                            "providerInfo": {
                              "portName": "samplePort",
                              "portId": "66f2a3c87ee81a5fef8daea9",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": [],
                                "vlanId": null,
                                "partnerPort": null
                              },
                              "companyId": "66f2a394a7a51d430f33bdcb",
                              "dcfName": "sampleDcf",
                              "dcfId": "66f2a3fe751203ee1020e6f0",
                              "metroId": "66f2a40a627b4d86b4883b11",
                              "city": "Brisbane",
                              "country": "AUS"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        },
                        {
                          "site": {
                            "portId": "66f2a428f0d298684fbddf2e",
                            "rateLimit": {
                              "unit": "mbps",
                              "value": 100
                            },
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "providerInfo": {
                              "portName": "samplePort2",
                              "portId": "66f2a428f0d298684fbddf2e",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": [],
                                "vlanId": null,
                                "partnerPort": null
                              },
                              "companyId": "66f2a394a7a51d430f33bdcb",
                              "dcfName": "sampleDcf",
                              "dcfId": "66f2a450116bb784aa0aa749",
                              "metroId": "66f2a458e5444065df184b97",
                              "city": "Brisbane",
                              "country": "AUS"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        }
                      ],
                      "discount": null
                    }
                  },
                  "Get-Price-All-Sim-Pool-Sites": {
                    "summary": "Get free pricing when all sites are sim pool sites",
                    "value": {
                      "l3vpnId": "66f2c68122af4be3f22dd3f2",
                      "totalHourlySiteCost": 0,
                      "totalMonthlySiteCost": 0,
                      "sites": [
                        {
                          "hourlyCost": 0,
                          "dailyCost": 0,
                          "monthlyCost": 0,
                          "site": {
                            "id": "e78b7295-73a0-4f26-a52f-bd3cebc1e8f9",
                            "companyId": "66f2c6ad913cc4a8fb10ba6b",
                            "l3vpnId": "66f2c68122af4be3f22dd3f2",
                            "name": "sample sim pool site",
                            "type": "COMPANY",
                            "portId": "66f2c6c1e0767a98e1fcee34",
                            "slVlanId": null,
                            "rateLimit": {
                              "rate": 10,
                              "unit": "Mbps"
                            },
                            "mtu": null,
                            "classOfService": null,
                            "redundancySiteType": "primary",
                            "redundancyLinkedSiteId": null,
                            "status": "ACTIVE",
                            "simPoolId": "0a7c21cc-7781-46d2-a88f-a35dcf459bb7",
                            "company_id": "66f2c6ad913cc4a8fb10ba6b",
                            "l3vpn_id": "66f2c68122af4be3f22dd3f2",
                            "sim_pool_id": "0a7c21cc-7781-46d2-a88f-a35dcf459bb7",
                            "deleted_at": null,
                            "created_at": "2024-09-23T11:10:27.969Z",
                            "updated_at": "2024-09-23T11:10:27.974Z",
                            "port_id": "66f2c6c1e0767a98e1fcee34",
                            "discountId": null
                          }
                        },
                        {
                          "hourlyCost": 0,
                          "dailyCost": 0,
                          "monthlyCost": 0,
                          "site": {
                            "simPoolId": "SAMPLE_SIM_POOL_ID",
                            "simPool": true,
                            "discountId": null,
                            "portId": "66f2c6cae101d105040243ab"
                          }
                        }
                      ]
                    }
                  },
                  "Get-Price-Adding-Sim-Pool-Using-Zone-Pricing": {
                    "summary": "Get the price of adding a new SIMPool site to existing L3vpn using zone pricing",
                    "value": {
                      "l3vpnId": "66f2cc9c55d56826c4d20065",
                      "baseL3vpnCost": 500,
                      "totalContractCost": 500,
                      "totalHourlySiteCost": 20,
                      "totalMonthlySiteCost": 14600,
                      "sites": [
                        {
                          "site": {
                            "id": "65bdd441-bde5-4e60-98e9-dca7fa296fde",
                            "companyId": "66f2ccc173925f8b55a1b972",
                            "l3vpnId": "66f2cc9c55d56826c4d20065",
                            "name": "Sample l3vpn site",
                            "type": "COMPANY",
                            "portId": "66f2ccd1acc13990ef6323ef",
                            "slVlanId": null,
                            "rateLimit": {
                              "rate": 10,
                              "unit": "Mbps",
                              "value": 10
                            },
                            "mtu": null,
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "redundancySiteType": "primary",
                            "redundancyLinkedSiteId": null,
                            "status": "ACTIVE",
                            "simPoolId": null,
                            "company_id": "66f2ccc173925f8b55a1b972",
                            "l3vpn_id": "66f2cc9c55d56826c4d20065",
                            "sim_pool_id": null,
                            "deleted_at": null,
                            "created_at": "2024-09-23T11:10:27.948Z",
                            "updated_at": "2024-09-23T11:10:27.948Z",
                            "port_id": "66f2ccd1acc13990ef6323ef",
                            "discountId": null,
                            "priceRefId": "65bdd441-bde5-4e60-98e9-dca7fa296fde",
                            "providerInfo": {
                              "portName": "samplePort",
                              "portId": "66f2ccd1acc13990ef6323ef",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": [],
                                "vlanId": null,
                                "partnerPort": null
                              },
                              "companyId": "66f2ccc173925f8b55a1b972",
                              "dcfName": "sampleDcf",
                              "dcfId": "66f2cd1f99dd778ec0ccba12",
                              "metroId": "66f2cd2ef3ee84fba9ec2e0f",
                              "city": "Brisbane",
                              "country": "AUS"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        },
                        {
                          "site": {
                            "rateLimit": {},
                            "providerInfo": null
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        }
                      ],
                      "discount": null
                    }
                  },
                  "Get-Price-Adding-Sim-Pool-Using-Metro-Flat-Price": {
                    "summary": "Get the price of adding a new SIMPool site to existing L3vpn using metro flat price",
                    "value": {
                      "l3vpnId": "66f2d47089fe1ccc62985a4f",
                      "baseL3vpnCost": 500,
                      "totalContractCost": 500,
                      "totalHourlySiteCost": 20,
                      "totalMonthlySiteCost": 14600,
                      "sites": [
                        {
                          "site": {
                            "id": "bcbc3b3a-0b89-4302-8cca-08cf55623e98",
                            "companyId": "66f2d4994024fc358e2e9b04",
                            "l3vpnId": "66f2d47089fe1ccc62985a4f",
                            "name": "Sample l3vpn site",
                            "type": "COMPANY",
                            "portId": "66f2d4b6c2966967a8b3da6e",
                            "slVlanId": null,
                            "rateLimit": {
                              "rate": 10,
                              "unit": "Mbps",
                              "value": 10
                            },
                            "mtu": null,
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "redundancySiteType": "primary",
                            "redundancyLinkedSiteId": null,
                            "status": "ACTIVE",
                            "simPoolId": null,
                            "company_id": "66f2d4994024fc358e2e9b04",
                            "l3vpn_id": "66f2d47089fe1ccc62985a4f",
                            "sim_pool_id": null,
                            "deleted_at": null,
                            "created_at": "2024-09-23T11:10:27.948Z",
                            "updated_at": "2024-09-23T11:10:27.948Z",
                            "port_id": "66f2d4b6c2966967a8b3da6e",
                            "discountId": null,
                            "priceRefId": "bcbc3b3a-0b89-4302-8cca-08cf55623e98",
                            "providerInfo": {
                              "portName": "samplePort",
                              "portId": "66f2d4b6c2966967a8b3da6e",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": [],
                                "vlanId": null,
                                "partnerPort": null
                              },
                              "companyId": "66f2d4994024fc358e2e9b04",
                              "dcfName": "sampleDcf",
                              "dcfId": "66f2d50ee67e10d742a375fa",
                              "metroId": "66f2d5144991313b95b503a9",
                              "city": "Brisbane",
                              "country": "AUS"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        },
                        {
                          "site": {
                            "rateLimit": {},
                            "providerInfo": null
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        }
                      ],
                      "discount": null
                    }
                  },
                  "Get-Price-Using-Global-Pricing": {
                    "summary": "Get the price of adding a new site to existing L3vpn using GLOBAL pricing",
                    "value": {
                      "l3vpnId": "66f2d8756645596fd6ffc7b5",
                      "baseL3vpnCost": 500,
                      "totalContractCost": 500,
                      "totalHourlySiteCost": 20,
                      "totalMonthlySiteCost": 14600,
                      "sites": [
                        {
                          "site": {
                            "id": "3fc98a37-a94e-4cd4-9da9-06a5b1308c08",
                            "companyId": "66f2d8923a56f13b7847dcca",
                            "l3vpnId": "66f2d8756645596fd6ffc7b5",
                            "name": "Sample l3vpn site",
                            "type": "COMPANY",
                            "portId": "66f2d8a4be4d1951127f5e65",
                            "slVlanId": null,
                            "rateLimit": {
                              "rate": 10,
                              "unit": "Mbps",
                              "value": 10
                            },
                            "mtu": null,
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "redundancySiteType": "primary",
                            "redundancyLinkedSiteId": null,
                            "status": "ACTIVE",
                            "simPoolId": null,
                            "company_id": "66f2d8923a56f13b7847dcca",
                            "l3vpn_id": "66f2d8756645596fd6ffc7b5",
                            "sim_pool_id": null,
                            "deleted_at": null,
                            "created_at": "2024-09-23T11:10:27.948Z",
                            "updated_at": "2024-09-23T11:10:27.948Z",
                            "port_id": "66f2d8a4be4d1951127f5e65",
                            "discountId": null,
                            "priceRefId": "3fc98a37-a94e-4cd4-9da9-06a5b1308c08",
                            "providerInfo": {
                              "portName": "samplePort",
                              "portId": "66f2d8a4be4d1951127f5e65",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": [],
                                "vlanId": null,
                                "partnerPort": null
                              },
                              "companyId": "66f2d8923a56f13b7847dcca",
                              "dcfName": "sampleDcf",
                              "dcfId": "66f2d8c66675bff21a1c119f",
                              "metroId": "66f2d8e126c5847f321a6635",
                              "city": "Brisbane",
                              "country": "AUS"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        },
                        {
                          "site": {
                            "portId": "66f2d8f3134d70f7a077d302",
                            "rateLimit": {
                              "unit": "mbps",
                              "value": 80
                            },
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "providerInfo": {
                              "portName": "sampleLondonPort",
                              "portId": "66f2d8f3134d70f7a077d302",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": [],
                                "vlanId": null,
                                "partnerPort": null
                              },
                              "companyId": "66f2d8923a56f13b7847dcca",
                              "dcfName": "samplelondonDcf",
                              "dcfId": "66f2dafa8366cb98a476886c",
                              "metroId": "66f2db017d6e3fa60ebb817f"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        }
                      ],
                      "discount": null
                    }
                  },
                  "Get-Price-Using-Same-Zone-Pricing": {
                    "summary": "Get the price of adding a new site to existing L3vpn using SAME-ZONE pricing",
                    "value": {
                      "l3vpnId": "66f2df89ba67c9c87452f97c",
                      "baseL3vpnCost": 500,
                      "totalContractCost": 500,
                      "totalHourlySiteCost": 20,
                      "totalMonthlySiteCost": 14600,
                      "sites": [
                        {
                          "site": {
                            "id": "a7d1dcef-6334-42f6-a0f2-a66d3ccd58ee",
                            "companyId": "66f2df99eb3479bcd57b3718",
                            "l3vpnId": "66f2df89ba67c9c87452f97c",
                            "name": "Sample l3vpn site",
                            "type": "COMPANY",
                            "portId": "66f2dfe1f4940c7d947f1ba0",
                            "slVlanId": null,
                            "rateLimit": {
                              "rate": 10,
                              "unit": "Mbps",
                              "value": 10
                            },
                            "mtu": null,
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "redundancySiteType": "primary",
                            "redundancyLinkedSiteId": null,
                            "status": "ACTIVE",
                            "simPoolId": null,
                            "company_id": "66f2df99eb3479bcd57b3718",
                            "l3vpn_id": "66f2df89ba67c9c87452f97c",
                            "sim_pool_id": null,
                            "deleted_at": null,
                            "created_at": "2024-09-23T11:10:27.948Z",
                            "updated_at": "2024-09-23T11:10:27.948Z",
                            "port_id": "66f2dfe1f4940c7d947f1ba0",
                            "discountId": null,
                            "priceRefId": "a7d1dcef-6334-42f6-a0f2-a66d3ccd58ee",
                            "providerInfo": {
                              "portName": "samplePort",
                              "portId": "66f2dfe1f4940c7d947f1ba0",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": [],
                                "vlanId": null,
                                "partnerPort": null
                              },
                              "companyId": "66f2df99eb3479bcd57b3718",
                              "dcfName": "sampleDcf",
                              "dcfId": "66f2e0611fa99e1540ed1578",
                              "metroId": "66f2e06beb23cff56b0e896b",
                              "city": "Brisbane",
                              "country": "AUS"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        },
                        {
                          "site": {
                            "portId": "66f2df77c1088d46580d02ac",
                            "rateLimit": {
                              "unit": "mbps",
                              "value": 80
                            },
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "providerInfo": {
                              "portName": "sampleGoldCoastPort",
                              "portId": "66f2df77c1088d46580d02ac",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": [],
                                "vlanId": null,
                                "partnerPort": null
                              },
                              "companyId": "66f2df99eb3479bcd57b3718",
                              "dcfName": "sampleGoldCoastDcf",
                              "dcfId": "66f2e0975b29e157d322ca46",
                              "metroId": "66f2e09d19b88a1a2ceb6526"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        }
                      ],
                      "discount": null
                    }
                  },
                  "Get-Price-Using-Cloud-Port": {
                    "summary": "Get the price of adding a new site to existing L3vpn using a cloud port",
                    "value": {
                      "l3vpnId": "66f2e5a3f00841a680b7aaa8",
                      "baseL3vpnCost": 500,
                      "totalContractCost": 500,
                      "totalHourlySiteCost": 20,
                      "totalMonthlySiteCost": 14600,
                      "sites": [
                        {
                          "site": {
                            "id": "3b53c7b4-264e-4ea3-ae4b-4045254d6a44",
                            "companyId": "66f2e5e06f26be6115f87580",
                            "l3vpnId": "66f2e5a3f00841a680b7aaa8",
                            "name": "Donut l3vpn site",
                            "type": "COMPANY",
                            "portId": "66f2e5f4de222cca8f452a54",
                            "slVlanId": null,
                            "rateLimit": {
                              "rate": 10,
                              "unit": "Mbps",
                              "value": 10
                            },
                            "mtu": null,
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "redundancySiteType": "primary",
                            "redundancyLinkedSiteId": null,
                            "status": "ACTIVE",
                            "simPoolId": null,
                            "company_id": "66f2e5e06f26be6115f87580",
                            "l3vpn_id": "66f2e5a3f00841a680b7aaa8",
                            "sim_pool_id": null,
                            "deleted_at": null,
                            "created_at": "2024-09-23T11:10:27.948Z",
                            "updated_at": "2024-09-23T11:10:27.948Z",
                            "port_id": "66f2e5f4de222cca8f452a54",
                            "discountId": null,
                            "priceRefId": "3b53c7b4-264e-4ea3-ae4b-4045254d6a44",
                            "providerInfo": {
                              "portName": "samplePort",
                              "portId": "66f2e5f4de222cca8f452a54",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": [],
                                "vlanId": null,
                                "partnerPort": null
                              },
                              "companyId": "66f2e5e06f26be6115f87580",
                              "dcfName": "sampleDcf",
                              "dcfId": "66f2e61e8a42c0aaeefd149a",
                              "metroId": "66f2e62c483a6aca15d68309",
                              "city": "Brisbane",
                              "country": "AUS"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        },
                        {
                          "site": {
                            "portId": "66f2e597e8abe96039eeceb9",
                            "rateLimit": {
                              "unit": "mbps",
                              "value": 100
                            },
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "providerInfo": {
                              "portName": "sampleCloudPort",
                              "portId": "66f2e597e8abe96039eeceb9",
                              "portPartner": {
                                "type": "AWS",
                                "regionName": null,
                                "connectionSpeeds": [
                                  {
                                    "value": 50,
                                    "type": "AUTOMATIC"
                                  },
                                  {
                                    "value": 100,
                                    "type": "AUTOMATIC"
                                  }
                                ],
                                "vlanId": null,
                                "partnerPort": "smp-prtnrprt",
                                "regionNames": ["ap-southeast-1"],
                                "zone": null
                              },
                              "companyId": "66f29e236bd7c1c8ea49d42c",
                              "dcfName": "sampleDcf",
                              "dcfId": "66f2e61e8a42c0aaeefd149a",
                              "metroId": "66f2e62c483a6aca15d68309",
                              "city": "Brisbane",
                              "country": "AUS"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        }
                      ],
                      "discount": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "validations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "site-required": {
                    "summary": "site required",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "site is a required argument"
                    }
                  },
                  "portId-required": {
                    "summary": "portId required",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "portId is a required site field"
                    }
                  },
                  "port-not-owned": {
                    "summary": "port not owned",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "Port with id: 6328f276bb71e4e4ae01e9dd does not belong to the company"
                    }
                  },
                  "rate-limit-required": {
                    "summary": "rate limit required",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "rateLimit is required"
                    }
                  },
                  "rate-limit-invalid": {
                    "summary": "rate limit invalid",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "Requested rateLimit is not valid. Please provide rateLimit in this format: {\\\"unit\\\": \\\"Mbps\\\", \\\"value\\\": 200}"
                    }
                  },
                  "rate-limit-value-invalid": {
                    "summary": "rate limit value invalid",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "Requested rateLimit.value must be a number greater than 0"
                    }
                  },
                  "invalid-class-of-service": {
                    "summary": "invalid class of service",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "Site has an invalid Class of Service."
                    }
                  },
                  "invalid-class-of-service-name": {
                    "summary": "invalid class of service name",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "In Site there is an invalid Class of Service name."
                    }
                  },
                  "class-of-service-names-should-only-be-used-once": {
                    "summary": "class of service names should only be used once",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "In Site the Class of Service names cannot be repeated."
                    }
                  },
                  "class-of-service-percentage": {
                    "summary": "class of service percentage",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "In Site the Class of Service percentages must sum to 100%."
                    }
                  },
                  "site-bandwidth-sum": {
                    "summary": "site bandwidth sum",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "The combined bandwidth of all sites is greater than the allowed CloudRouter bandwidth of 1GB. Please contact support@consoleconnect.com to increase your CloudRouter bandwidth."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "port": {
                    "summary": "port",
                    "value": {
                      "error": {
                        "statusCode": 404,
                        "name": "Error",
                        "message": "A port can not be found with the given id"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Pricing"],
        "description": "Find pricing for adding a site to a CloudRouter.",
        "operationId": "cloudrouter-pricing-add-site",
        "summary": "CloudRouter - Add site"
      }
    },
    "/v2/pricing/l3vpn/{l3vpnId}/delete-site": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "l3vpnId",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": ""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "siteId": {
                    "type": "string",
                    "description": ""
                  }
                }
              },
              "example": {
                "siteId": "6fcac435-ce01-4fef-b316-bcf80537970f"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudRouterSitePricing"
                },
                "examples": {
                  "success": {
                    "value": {
                      "l3vpnId": "6328f276bb71e4e4ae01e9e9",
                      "baseL3vpnCost": 500,
                      "totalContractCost": 500,
                      "totalHourlySiteCost": 20,
                      "totalMonthlySiteCost": 14600,
                      "sites": [
                        {
                          "site": {
                            "id": "8def56cf-fe19-4b25-b6b6-f61cee449c21",
                            "companyId": "5ea242323962644b52fc4348",
                            "l3vpnId": "6328f276bb71e4e4ae01e9e9",
                            "name": "Donut l3vpn site",
                            "type": "COMPANY",
                            "portId": "6328f276bb71e4e4ae01e9e1",
                            "slVlanId": null,
                            "rateLimit": {
                              "rate": 10,
                              "unit": "Mbps",
                              "value": 10
                            },
                            "mtu": null,
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "redundancySiteType": "primary",
                            "redundancyLinkedSiteId": null,
                            "status": "ACTIVE",
                            "simPoolId": null,
                            "company_id": "5ea242323962644b52fc4348",
                            "l3vpn_id": "6328f276bb71e4e4ae01e9e9",
                            "deleted_at": null,
                            "created_at": "2022-09-19T22:51:34.972Z",
                            "updated_at": "2022-09-19T22:51:34.972Z",
                            "discountId": null,
                            "priceRefId": "8def56cf-fe19-4b25-b6b6-f61cee449c21",
                            "providerInfo": {
                              "portName": "donutBrisbanePort",
                              "portId": "6328f276bb71e4e4ae01e9e1",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": [
                                  {
                                    "vlanId": null,
                                    "partnerPort": null
                                  }
                                ]
                              },
                              "companyId": "5ea242323962644b52fc4348",
                              "dcfName": "brisbaneDcf",
                              "dcfId": "6328f276bb71e4e4ae01e9d8",
                              "metroId": "6328f276bb71e4e4ae01e9d0",
                              "city": "Brisbane",
                              "country": "AUS"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        },
                        {
                          "site": {
                            "portId": "6328f276bb71e4e4ae01e9e1",
                            "rateLimit": {
                              "unit": "mbps",
                              "value": 100
                            },
                            "classOfService": [
                              {
                                "name": "BRONZE",
                                "value": 100
                              }
                            ],
                            "providerInfo": {
                              "portName": "donutBrisbanePort",
                              "portId": "6328f276bb71e4e4ae01e9e1",
                              "portPartner": {
                                "type": "NONE",
                                "regionName": null,
                                "regionNames": null,
                                "zone": null,
                                "connectionSpeeds": null,
                                "vlanId": null,
                                "partnerPort": null
                              },
                              "companyId": "5ea242323962644b52fc4348",
                              "dcfName": "brisbaneDcf",
                              "dcfId": "6328f276bb71e4e4ae01e9d8",
                              "metroId": "6328f276bb71e4e4ae01e9d0",
                              "city": "Brisbane",
                              "country": "AUS"
                            }
                          },
                          "hourlyCost": 10,
                          "dailyCost": 240,
                          "monthlyCost": 7200
                        }
                      ],
                      "discount": null
                    }
                  },
                  "poa": {
                    "value": {
                      "baseL3vpnCost": null,
                      "totalContractCost": null,
                      "totalHourlySiteCost": null,
                      "sites": [
                        {
                          "portId": "6328f276bb71e4e4ae01e9e8",
                          "rateLimit": {
                            "unit": "mbps",
                            "value": 50
                          },
                          "classOfService": [
                            {
                              "name": "BRONZE",
                              "value": 100
                            }
                          ],
                          "discountId": null,
                          "dailyCost": null,
                          "hourlyCost": null,
                          "monthlyCost": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "validations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "site-required": {
                    "summary": "site required",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "site is a required argument"
                    }
                  },
                  "portId-required": {
                    "summary": "portId required",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "portId is a required site field"
                    }
                  },
                  "port-not-owned": {
                    "summary": "port not owned",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "Port with id: 6328f276bb71e4e4ae01e9dd does not belong to the company"
                    }
                  },
                  "rate-limit-required": {
                    "summary": "rate limit required",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "rateLimit is required"
                    }
                  },
                  "rate-limit-invalid": {
                    "summary": "rate limit invalid",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "Requested rateLimit is not valid. Please provide rateLimit in this format: {\\\"unit\\\": \\\"Mbps\\\", \\\"value\\\": 200}"
                    }
                  },
                  "rate-limit-value-invalid": {
                    "summary": "rate limit value invalid",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "Requested rateLimit.value must be a number greater than 0"
                    }
                  },
                  "invalid-class-of-service": {
                    "summary": "invalid class of service",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "Site has an invalid Class of Service."
                    }
                  },
                  "invalid-class-of-service-name": {
                    "summary": "invalid class of service name",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "In Site there is an invalid Class of Service name."
                    }
                  },
                  "class-of-service-names-should-only-be-used-once": {
                    "summary": "class of service names should only be used once",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "In Site the Class of Service names cannot be repeated."
                    }
                  },
                  "class-of-service-percentage": {
                    "summary": "class of service percentage",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "In Site the Class of Service percentages must sum to 100%."
                    }
                  },
                  "site-bandwidth-sum": {
                    "summary": "site bandwidth sum",
                    "value": {
                      "statusCode": 400,
                      "name": "Error",
                      "message": "The combined bandwidth of all sites is greater than the allowed CloudRouter bandwidth of 1GB. Please contact support@consoleconnect.com to increase your CloudRouter bandwidth."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                },
                "examples": {
                  "port": {
                    "summary": "port",
                    "value": {
                      "error": {
                        "statusCode": 404,
                        "name": "Error",
                        "message": "A port can not be found with the given id"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Pricing"],
        "description": "Find pricing for deleting a CloudRouter site.",
        "operationId": "cloudrouter-pricing-delete-site",
        "summary": "CloudRouter - Delete site"
      }
    },
    "/api/company/{username}/metro": {
      "get": {
        "parameters": [
          {
            "description": "The username of the company you are checking.",
            "in": "path",
            "example": "consoleconnect",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "When true, only shows Metros the specified company has Ports in.",
            "example": true,
            "in": "query",
            "name": "hasPort",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "results": [
                        {
                          "city": "London",
                          "count": 20,
                          "country": "UK",
                          "name": "London, UK"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Metros"],
        "description": "This endpoint is used to list the Metros a given Company is present at, usually with Ports.",
        "operationId": "metro-count-for-company",
        "summary": "List Metro Count for a Company"
      }
    },
    "/api/company/{username}/metro/capabilities": {
      "get": {
        "parameters": [
          {
            "description": "The username of the Company to query.",
            "in": "path",
            "example": "consoleconnect",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "results": [
                        {
                          "capabilities": {
                            "layer2": true,
                            "layer3": true
                          },
                          "code": "BNE",
                          "country": "AU",
                          "description": "Brisbane city metro.",
                          "id": "d466b388d3e9ee0a92177910",
                          "name": "Brisbane",
                          "ready": true,
                          "regionIds": ["236107000000000000000001"],
                          "createdAt": "2016-02-12T09:01:00.000Z",
                          "updatedAt": "2016-02-12T09:01:00.000Z",
                          "firstDataCenterFacilityId": "5af90d4548ba7200120a194b"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Metros"],
        "description": "Returns a list of Metros a given Company has a presence at. This is typically in the form of Port.",
        "operationId": "get-company-metros",
        "summary": "List Metros for a Company"
      }
    },
    "/api/metro/{metroId}": {
      "get": {
        "parameters": [
          {
            "description": "Metro ObjectId",
            "in": "path",
            "example": "235014958511023495968818",
            "name": "metroId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "results": [],
                      "controllers": [],
                      "metro": {
                        "id": "77d9f1fbbcaa906f3cddb6d1",
                        "name": "Brisbane",
                        "code": "BNE",
                        "description": "Brisbane metro area.",
                        "ready": true,
                        "country": "AU",
                        "rir": "APNIC",
                        "regionIds": ["5b7f5dd15acc27000a7acdf9"],
                        "updatedAt": "2020-08-18T04:08:43.554Z",
                        "createdAt": "2017-12-18T00:45:44.120Z",
                        "deleted": false,
                        "deletedAt": null
                      },
                      "ports": {},
                      "asns": {}
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "statusCode": 404,
                        "status": 404,
                        "message": "The metro with that ID does not exist"
                      }
                    }
                  }
                }
              }
            },
            "description": "Not Found",
            "headers": {}
          }
        },
        "tags": ["Metros"],
        "description": "Returns the basic information for a Metro.",
        "operationId": "get-metro",
        "summary": "Get Metro by ID"
      }
    },
    "/v2/data-center-facility/locations": {
      "get": {
        "summary": "Get DCF locations",
        "tags": ["Data Center Facilities (DCFs)"],
        "description": "Before diving directly into finding DCFs, it is helpful to know which locations are available to order Ports from. This endpoint returns a list of country and city pairs that can be used in search.\n\nThe criteria of the list is based on the following:\n* A DCF is ready for ordering Ports from: `dataCenterFacility.ready`",
        "operationId": "GetDCFLocations",
        "responses": {
          "200": {
            "description": "Returns a list of locations with available DCFs",
            "content": {
              "application/json": {
                "examples": {
                  "list": {
                    "value": [
                      {
                        "country": "AU,",
                        "city": "Brisbane"
                      },
                      {
                        "country": "US,",
                        "city": "New York"
                      },
                      {
                        "country": "JP,",
                        "city": "Tokyo"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/data-center-facility/cloud-locations": {
      "get": {
        "summary": "Get Cloud DCF locations",
        "tags": ["Data Center Facilities (DCFs)"],
        "description": "This endpoint is much like finding general DCF locations, only it narrows down the criteria even further by returning only the locations that our Cloud partners have available ports in. This endpoint is useful when you want to find DCFs to create a Layer 2 Connection to a Cloud provider (e.g. AWS).",
        "operationId": "GetCloudDCFLocations",
        "responses": {
          "200": {
            "description": "Returns a list of DCFs available from Clouds.",
            "content": {
              "application/json": {
                "examples": {
                  "list": {
                    "value": [
                      {
                        "country": "AU,",
                        "city": "Brisbane"
                      },
                      {
                        "country": "US,",
                        "city": "New York"
                      },
                      {
                        "country": "JP,",
                        "city": "Tokyo"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/data-center-facility": {
      "get": {
        "summary": "Search DCFs",
        "operationId": "getDcfs",
        "tags": ["Data Center Facilities (DCFs)"],
        "description": "Search for available DCFs on and off the network.\n\nTo ensure a DCF is ready for physical port orders, ensure the property `dataCenterFacility.ready: true` is set when searching for DCFs. \nTo find a DCF that supports Hybrid NNI Ports, search for `dataCenterFacility.nniReady: true`.\n\nSee the Query Parameters section below for search examples.",
        "parameters": [
          {
            "description": "Criteria for searching DCFs.",
            "in": "query",
            "name": "filter",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LoopBackFilter"
            },
            "examples": {
              "searchBySpeeds": {
                "summary": "Search DCFs by Speed. Value in Mbps.",
                "value": "{\n  \"where\": {\n    \"dataCenterFacility.speeds.value\": 10000,\n    \"dataCenterFacility.ready\": true\n  },\n  \"skip\": 0,\n  \"limit\": 10\n}"
              },
              "searchByLocation": {
                "summary": "Search DCFs by Location.",
                "value": "{\n  \"where\": {\n    \"company.addresses.country\": \"AU\",\n    \"company.addresses.city\": \"Sydney\"\n    \"dataCenterFacility.speeds.value\": 10000,\n    \"dataCenterFacility.ready\": true\n  },\n  \"skip\": 0,\n  \"limit\": 10\n}"
              },
              "searchByName": {
                "summary": "Search DCFs by Name.",
                "value": "{\n  \"where\": {\n    \"name\": {\"like\": \"DCF Name\", \"options\": \"i\"},\n    \"dataCenterFacility.ready\": true\n  },\n  \"skip\": 0,\n  \"limit\": 10\n}"
              },
              "searchByCrossConnectAddOn": {
                "summary": "Search DCFs by CrossConnect Add On.",
                "value": "{\n  \"where\": {\n    \"dataCenterFacility.canBundleCrossConnect\": true,\n    \"dataCenterFacility.ready\": true\n  },\n  \"skip\": 0,\n  \"limit\": 10\n}"
              },
              "searchByFreeCrossConnect": {
                "summary": "Search DCFs by Free CrossConnect.",
                "value": "{\n  \"where\": {\n    \"tags\": {\"in\": [\"free-cross-connect\"]},\n    \"dataCenterFacility.ready\": true\n  },\n  \"skip\": 0,\n  \"limit\": 10\n}"
              },
              "searchByOffNet": {
                "summary": "Search DCFs by Extended (Off-Net).",
                "value": "{\n  \"where\": {\n    \"tags\": {\"in\": \"offnet\"},\n    \"dataCenterFacility.ready\": true\n  },\n  \"skip\": 0,\n  \"limit\": 10\n}"
              },
              "searchByOnNet": {
                "summary": "Search DCFs by On-Net.",
                "value": "{\n  \"where\": {\n    \"tags\": {\"nin\": \"offnet\"},\n    \"dataCenterFacility.ready\": true\n  },\n  \"skip\": 0,\n  \"limit\": 10\n}"
              },
              "searchByMonthlyPorts": {
                "summary": "Search DCFs that accept month-to-month port orders.",
                "value": "{\n  \"where\": {\n    \"tags\": {\"in\": \"monthly-ports\"},\n    \"dataCenterFacility.ready\": true\n  },\n  \"skip\": 0,\n  \"limit\": 10\n}"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns a list of DCFs or an empty array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataCenterFacility"
                  }
                },
                "examples": {
                  "results": {
                    "value": [
                      {
                        "id": "507f1f77bcf86cd799439011",
                        "name": "Console Connect - Hermes House",
                        "username": "pccwg-hermes-house",
                        "company": {
                          "addresses": [
                            {
                              "street": "5/F, Hermes House,10 Middle Road,Tsim Sha Tsui",
                              "city": "Hong Kong",
                              "country": "CN"
                            }
                          ]
                        },
                        "dataCenterFacility": {
                          "metroId": "507f1f77bcf86cd799439011",
                          "ready": true,
                          "nniReady": true,
                          "speeds": [
                            {
                              "name": "10000 Mbps",
                              "value": 10000
                            }
                          ],
                          "canBundleCrossConnect": false
                        }
                      }
                    ]
                  },
                  "empty": {
                    "value": []
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/data-center-facility/{id}": {
      "get": {
        "summary": "Get DCF by ID",
        "tags": ["Data Center Facilities (DCFs)"],
        "description": "Get a single DCF by its ID.",
        "operationId": "GetDCFById",
        "parameters": [
          {
            "description": "The ObjectId of the DCF.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "507f1f77bcf86cd799439011"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single DCF.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCenterFacility"
                },
                "example": {
                  "id": "507f1f77bcf86cd799439011",
                  "name": "Console Connect - Hermes House",
                  "username": "pccwg-hermes-house",
                  "company": {
                    "addresses": [
                      {
                        "street": "5/F, Hermes House,10 Middle Road,Tsim Sha Tsui",
                        "city": "Hong Kong",
                        "country": "CN"
                      }
                    ]
                  },
                  "dataCenterFacility": {
                    "metroId": "507f1f77bcf86cd799439011",
                    "ready": true,
                    "nniReady": true,
                    "speeds": [
                      {
                        "name": "10000 Mbps",
                        "value": 10000
                      }
                    ],
                    "canBundleCrossConnect": true
                  },
                  "bundleCrossConnectChargeId": "65eff1e96d38598ce3cf6247"
                }
              }
            }
          },
          "404": {
            "description": "Throws an error for an invalid DCF.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "404,",
                    "name": "Error",
                    "message": "There is no method to handle GET /v2/data-center-facilit/invalid"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponseSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{username}": {
      "get": {
        "parameters": [
          {
            "name": "username",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "stan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "example": {
                  "id": "58980a25a77b4d7bf459d100",
                  "username": "stella",
                  "name": "Stella",
                  "email": "stella@example.com"
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "description": "Retrieve user account details.",
        "operationId": "GetUser",
        "summary": "Get User"
      },
      "post": {
        "parameters": [
          {
            "name": "username",
            "description": "",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "stan"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "tags": "",
                  "avatar": "",
                  "background": "",
                  "company.address": "",
                  "company.businessType": "",
                  "company.city": "",
                  "company.clientId": "",
                  "company.companySize": "",
                  "company.dateFounded": "",
                  "company.email": "",
                  "company.fax": "",
                  "company.first": "",
                  "company.industry": "",
                  "company.last": "",
                  "company.markets": "",
                  "company.phone": "",
                  "company.privacy.community.blackListIds": [],
                  "company.privacy.community.whiteListIds": [],
                  "company.privacy.network.blackListIds": [],
                  "company.privacy.network.whiteListIds": [],
                  "company.regionalInternetRegistry": "",
                  "company.state": "",
                  "company.website": "",
                  "company.zip": "",
                  "headline": "",
                  "location": "",
                  "name": "",
                  "optIntoMarketingEmail": false,
                  "phone": "",
                  "role": "",
                  "settings": {},
                  "summary": ""
                },
                "properties": {
                  "tags": {
                    "type": "string"
                  },
                  "avatar": {
                    "description": "An avatar URL for this user. This _must_ be the same URL as provided by a [File Upload][].",
                    "type": "string"
                  },
                  "background": {
                    "type": "string"
                  },
                  "company.address": {
                    "type": "string"
                  },
                  "company.businessType": {
                    "type": "string"
                  },
                  "company.city": {
                    "type": "string"
                  },
                  "company.clientId": {
                    "type": "string"
                  },
                  "company.companySize": {
                    "type": "string"
                  },
                  "company.dateFounded": {
                    "type": "string"
                  },
                  "company.email": {
                    "type": "string"
                  },
                  "company.fax": {
                    "type": "string"
                  },
                  "company.first": {
                    "type": "string"
                  },
                  "company.industry": {
                    "type": "string"
                  },
                  "company.last": {
                    "type": "string"
                  },
                  "company.markets": {
                    "type": "string"
                  },
                  "company.phone": {
                    "type": "string"
                  },
                  "company.privacy.community.blackListIds": {
                    "description": "list of company ids"
                  },
                  "company.privacy.community.whiteListIds": {
                    "description": "list of company ids"
                  },
                  "company.privacy.network.blackListIds": {
                    "description": "list of company ids"
                  },
                  "company.privacy.network.whiteListIds": {
                    "description": "list of company ids"
                  },
                  "company.regionalInternetRegistry": {
                    "type": "string"
                  },
                  "company.state": {
                    "type": "string"
                  },
                  "company.website": {
                    "type": "string"
                  },
                  "company.zip": {
                    "type": "string"
                  },
                  "headline": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "description": "The new name for this user account",
                    "type": "string"
                  },
                  "optIntoMarketingEmail": {
                    "type": "boolean"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "settings": {
                    "description": "Settings object, corresponding with the settings retrieved from the GET method.",
                    "properties": {},
                    "type": "object"
                  },
                  "summary": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "example": {
                  "id": "58980a25a77b4d7bf459d100",
                  "username": "stella",
                  "name": "Stella",
                  "email": "stella@example.com"
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "description": "Update user account details.",
        "operationId": "UpdateUser",
        "summary": "Update user"
      }
    },
    "/api/company": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "summary": "Create a company",
        "operationId": "Create-a-company",
        "description": "",
        "tags": ["Companies"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyModel"
              }
            }
          }
        }
      }
    },
    "/api/company/{username}/memberships/{targetUsername}/roles/{roleName}": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "summary": "Remove role from user",
        "operationId": "Remove-role-from-user",
        "description": "Remove a role from a user within a given company.",
        "tags": ["Companies"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username of the company to join.",
            "required": true,
            "example": "acmeinc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetUsername",
            "in": "path",
            "description": "The username of the user to respond to.",
            "required": true,
            "example": "meg",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The role to apply to or remove from the user.",
            "required": true,
            "example": "ADMIN",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "summary": "Add role to user",
        "operationId": "Add-role-to-user",
        "description": "Add a role to a user within a given company.",
        "tags": ["Companies"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username of the company to join.",
            "required": true,
            "example": "acmeinc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetUsername",
            "in": "path",
            "description": "The username of the user to respond to.",
            "required": true,
            "example": "meg",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The role to apply to or remove from the user.",
            "required": true,
            "example": "ADMIN",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/company/{username}/memberships/{targetUsername}": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "summary": "Update user role state",
        "operationId": "Update-user-role-state",
        "description": "Company membership requests can be in one of the following states:\n- INACTIVE - Request made by either company or user.\n- ACTIVE - Request accepted and they are a member of the company.\n- DENIED - Request denied by the company.\n- CANCELLED - Request cancelled by either company or user.",
        "tags": ["Companies"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username of the company.",
            "required": true,
            "example": "acmeinc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetUsername",
            "in": "path",
            "description": "The username of the user to modify.",
            "required": true,
            "example": "meg",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "state": "ACTIVE"
              },
              "schema": {
                "type": "object",
                "properties": {
                  "state": {
                    "type": "string",
                    "description": "The new state for this user; `INACTIVE`, `ACTIVE`, `DENIED`, or `CANCELLED`."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "example": {}
              }
            }
          }
        },
        "summary": "Remove a user from a company",
        "operationId": "Remove-a-user-from-a-company",
        "description": "",
        "tags": ["Companies"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username of the company.",
            "required": true,
            "example": "acmeinc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetUsername",
            "in": "path",
            "description": "The username of the user to modify.",
            "required": true,
            "example": "meg",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/company/{username}/memberships": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "summary": "Leave a Company",
        "operationId": "Leave-a-Company",
        "description": "Removes the authenticated user from the company.",
        "tags": ["Companies"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username of the company to leave.",
            "required": true,
            "example": "acmeinc",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/company/{companyName}/ports/orders": {
      "put": {
        "parameters": [
          {
            "description": "Username of the data center facility.",
            "in": "path",
            "example": "supernetpa4",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "speed",
                  "portName",
                  "paymentType",
                  "dataCenterFacility",
                  "durationUnit"
                ],
                "properties": {
                  "paymentType": {
                    "type": "string",
                    "enum": ["plan", "creditcard", "invoice"],
                    "description": "The payment method used."
                  },
                  "billingId": {
                    "type": "string",
                    "description": "The ID of the plan subscription. Only required when paymentType is 'plan'."
                  },
                  "paymentTransactionId": {
                    "type": "string",
                    "description": "The ID of the payment transaction. Only required when paymentType is 'creditcard'."
                  },
                  "dataCenterFacility": {
                    "type": "string",
                    "description": "The username of the data center facility."
                  },
                  "speed": {
                    "type": "string",
                    "description": "The port speed in Mbps, e.g., 1000 = 1Gbps. 10000 = 10Gbps. Must be >= 100."
                  },
                  "portName": {
                    "type": "string",
                    "description": "The name of the port"
                  },
                  "durationUnit": {
                    "type": "string",
                    "default": "y",
                    "enum": ["m", "y"],
                    "description": "Set to `m` if the Data Center accepts month-to-month port orders."
                  },
                  "bundleCrossConnect": {
                    "type": "boolean",
                    "description": "Set to `true` to have the Cross Connect add-on with your port if your Data Center supports this.\nOnly available in a 12 month contract."
                  },
                  "discountCode": {
                    "type": "string",
                    "description": "Apply promotion or partner code."
                  }
                }
              },
              "examples": {
                "Port": {
                  "summary": "Port with 1Gbps for 1 year",
                  "value": {
                    "dataCenterFacility": "demodatacenter",
                    "speed": 1000,
                    "portName": "Demo Port",
                    "paymentType": "invoice",
                    "durationUnit": "y"
                  }
                },
                "Port-Monthly": {
                  "summary": "Port with 1Gbps for 1 month",
                  "description": "The month-to-month port offering is only available at On-Net Data Centers",
                  "value": {
                    "dataCenterFacility": "demodatacenter",
                    "speed": 1000,
                    "portName": "Demo Port",
                    "paymentType": "invoice",
                    "durationUnit": "m"
                  }
                },
                "Port-with-Cross-Connect": {
                  "summary": "Port with 1Gbps and CrossConnect Add-on for 1 year",
                  "description": "Only available in a 12 month contract and Data Centers that support this",
                  "value": {
                    "dataCenterFacility": "demodatacenter",
                    "speed": 1000,
                    "portName": "Demo Port",
                    "paymentType": "invoice",
                    "durationUnit": "y",
                    "bundleCrossConnect": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Port": {
                    "summary": "Port with 1Gbps for 1 year",
                    "value": {
                      "id": "66e28efa04a4727d5387da09",
                      "portName": "Demo Port",
                      "speed": {
                        "value": 1000,
                        "name": "1000 Mbps"
                      },
                      "paymentType": "invoice",
                      "discountId": null,
                      "billingId": "66e28efa04a4727d5387da06",
                      "externalId": null,
                      "salesRecordId": null,
                      "paymentTransactionId": null,
                      "payg": true,
                      "status": "created",
                      "loaStatus": "TODO",
                      "isEdgePort": false,
                      "cancelled": false,
                      "edgePayload": null,
                      "requestSource": "CONSOLE_API",
                      "createdBy": "",
                      "tags": [],
                      "type": "PHYSICAL",
                      "isManualCreate": false,
                      "dataCenterFacilityId": "5a94a7e2091e410012cdf0b4",
                      "metroId": "21ab4746f3ba6c3462def3e8",
                      "companyId": "5d4d056242fbd3000ab4c01d",
                      "crossConnectId": null,
                      "deleted": false,
                      "deletedAt": null,
                      "createdAt": "2024-09-12T06:49:30.052Z",
                      "updatedAt": "2024-09-12T06:49:30.354Z",
                      "durationUnit": "y",
                      "dataCenterFacility": {
                        "dataCenterFacility": {
                          "airportCodes": [],
                          "speeds": [
                            {
                              "name": "1000 Mbps",
                              "value": 1000
                            }
                          ],
                          "metroId": "21ab4746f3ba6c3462def3e8",
                          "ready": true,
                          "id": "05a75ed0-b35b-46bf-8019-22b0d2701913",
                          "nniReady": true,
                          "brandId": "5b4bda127abfb30014023a0b",
                          "canBundleCrossConnect": false
                        },
                        "overviewImage": null,
                        "businessRegistrationNumber": null,
                        "signedCompanyRefId": null,
                        "accountManagerEmail": null,
                        "accountManagerId": null,
                        "createdAt": "2018-02-27T00:35:46.210Z",
                        "updatedAt": "2024-08-30T01:32:52.940Z",
                        "username": "demodatacenter",
                        "deletedAt": null,
                        "deleted": false,
                        "verified": true,
                        "tags": [],
                        "status": "ACTIVE",
                        "displayOrder": -299,
                        "groups": [],
                        "location": null,
                        "summary": "gggg",
                        "headline": null,
                        "background": null,
                        "avatarId": "5bfcd34eeed214000a023674",
                        "name": "Demo Data Center",
                        "type": "DATA_CENTER_FACILITY",
                        "popIds": ["05a75ed0-b35b-46bf-8019-22b0d2701913"],
                        "provider": ["PCCWGLOBAL"],
                        "destinationPortOnly": false,
                        "categories": [],
                        "nnis": null,
                        "isCloudProvider": false,
                        "verifiedIdentity": false,
                        "selectiveQinQTunnelProvider": [],
                        "bundleCrossConnectChargeId": null,
                        "signedCompanyVerified": false,
                        "companies": [],
                        "id": "5a94a7e2091e410012cdf0b4",
                        "online": false
                      },
                      "metro": {
                        "name": "London",
                        "code": "LHR",
                        "country": "de",
                        "rir": "RIPE",
                        "regionIds": ["5a370b288f220300127f834d"],
                        "id": "21ab4746f3ba6c3462def3e8",
                        "deletedAt": null,
                        "createdAt": "2017-12-18T00:28:54.074Z",
                        "updatedAt": "2020-07-10T03:47:25.960Z",
                        "logo": null,
                        "description": "",
                        "ready": true,
                        "canCreateController": false,
                        "deleted": false,
                        "tags": []
                      },
                      "capabilities": {}
                    }
                  },
                  "Port-Monthly": {
                    "summary": "Port with 1Gbps for 1 month",
                    "value": {
                      "id": "66e2929204a4727d5387dd33",
                      "portName": "Demo Port",
                      "speed": {
                        "value": 1000,
                        "name": "1000 Mbps"
                      },
                      "paymentType": "invoice",
                      "discountId": null,
                      "billingId": "66e2929104a4727d5387dd30",
                      "externalId": null,
                      "salesRecordId": null,
                      "paymentTransactionId": null,
                      "payg": true,
                      "status": "created",
                      "loaStatus": "TODO",
                      "isEdgePort": false,
                      "cancelled": false,
                      "edgePayload": null,
                      "requestSource": "CONSOLE_API",
                      "createdBy": "",
                      "tags": [],
                      "type": "PHYSICAL",
                      "isManualCreate": false,
                      "dataCenterFacilityId": "5af90d4548ba7200120a194b",
                      "metroId": "5afa74accf15620012b981d6",
                      "companyId": "5d4d056242fbd3000ab4c01d",
                      "crossConnectId": null,
                      "deleted": false,
                      "deletedAt": null,
                      "createdAt": "2024-09-12T07:04:49.817Z",
                      "updatedAt": "2024-09-12T07:04:50.118Z",
                      "durationUnit": "m",
                      "dataCenterFacility": {
                        "dataCenterFacility": {
                          "nniReady": true,
                          "airportCodes": [],
                          "speeds": [
                            {
                              "name": "1000 Mbps",
                              "value": 1000
                            }
                          ],
                          "metroId": "5afa74accf15620012b981d6",
                          "ready": true,
                          "id": null,
                          "brandId": "603db6d3462e9c0014b9e430",
                          "canBundleCrossConnect": true
                        },
                        "overviewImage": null,
                        "businessRegistrationNumber": null,
                        "signedCompanyRefId": null,
                        "accountManagerEmail": null,
                        "accountManagerId": null,
                        "createdAt": "2018-05-14T04:15:01.311Z",
                        "updatedAt": "2024-08-30T04:04:28.092Z",
                        "username": "demodatacenter",
                        "popIds": [
                          "9424e0a3-3793-410b-8871-fb2a76bdc767",
                          "bd473460-8567-4dd4-9164-1a3e7648e760"
                        ],
                        "deletedAt": null,
                        "deleted": false,
                        "verified": false,
                        "tags": ["monthly-ports"],
                        "status": "ACTIVE",
                        "displayOrder": -299,
                        "groups": [],
                        "location": null,
                        "summary": "",
                        "headline": null,
                        "background": null,
                        "avatarId": "66cc25daa4b6ec32122f38f3",
                        "name": "Demo Data Center",
                        "type": "DATA_CENTER_FACILITY",
                        "verifiedIdentity": true,
                        "provider": ["PCCWGLOBAL"],
                        "destinationPortOnly": false,
                        "categories": [],
                        "nnis": null,
                        "isCloudProvider": false,
                        "bundleCrossConnectChargeId": "62df4e2d7ce573001546fdcc",
                        "signedCompanyVerified": false,
                        "selectiveQinQTunnelProvider": [],
                        "companies": [],
                        "id": "5af90d4548ba7200120a194b",
                        "online": false
                      },
                      "metro": {
                        "name": "Tokyo",
                        "code": "NRT",
                        "country": "jp",
                        "rir": "ARIN",
                        "regionIds": ["5a370b348f220300127f834e"],
                        "id": "5afa74accf15620012b981d6",
                        "deletedAt": null,
                        "createdAt": "2018-05-15T05:48:28.821Z",
                        "updatedAt": "2020-12-14T00:21:42.766Z",
                        "deleted": false,
                        "tags": [],
                        "canCreateController": false,
                        "ready": true
                      },
                      "capabilities": {}
                    }
                  },
                  "Port-with-Cross-Connect": {
                    "summary": "Port with 1Gbps and CrossConnect Add-on for 1 year",
                    "value": {
                      "id": "66e29a3e04a4727d5387e602",
                      "portName": "Demo Port",
                      "speed": {
                        "value": 1000,
                        "name": "1000 Mbps"
                      },
                      "paymentType": "invoice",
                      "discountId": null,
                      "billingId": "66e29a3e04a4727d5387e5ff",
                      "externalId": null,
                      "salesRecordId": null,
                      "paymentTransactionId": null,
                      "payg": true,
                      "status": "created",
                      "loaStatus": "TODO",
                      "isEdgePort": false,
                      "cancelled": false,
                      "edgePayload": null,
                      "requestSource": "CONSOLE_API",
                      "createdBy": "",
                      "tags": [],
                      "type": "PHYSICAL",
                      "isManualCreate": false,
                      "dataCenterFacilityId": "5af90d4548ba7200120a194b",
                      "metroId": "5afa74accf15620012b981d6",
                      "companyId": "5d4d056242fbd3000ab4c01d",
                      "crossConnectId": "34c9f4e5-7838-4372-abc4-6e04f6aac9a6",
                      "deleted": false,
                      "deletedAt": null,
                      "createdAt": "2024-09-12T07:37:34.478Z",
                      "updatedAt": "2024-09-12T07:37:34.798Z",
                      "durationUnit": "y",
                      "dataCenterFacility": {
                        "dataCenterFacility": {
                          "nniReady": true,
                          "airportCodes": [],
                          "speeds": [
                            {
                              "name": "1000 Mbps",
                              "value": 1000
                            }
                          ],
                          "metroId": "5afa74accf15620012b981d6",
                          "ready": true,
                          "id": null,
                          "brandId": "603db6d3462e9c0014b9e430",
                          "canBundleCrossConnect": true
                        },
                        "overviewImage": null,
                        "businessRegistrationNumber": null,
                        "signedCompanyRefId": null,
                        "accountManagerEmail": null,
                        "accountManagerId": null,
                        "createdAt": "2018-05-14T04:15:01.311Z",
                        "updatedAt": "2024-08-30T04:04:28.092Z",
                        "username": "demodatacenter",
                        "popIds": [
                          "9424e0a3-3793-410b-8871-fb2a76bdc767",
                          "bd473460-8567-4dd4-9164-1a3e7648e760"
                        ],
                        "deletedAt": null,
                        "deleted": false,
                        "verified": false,
                        "tags": ["monthly-ports"],
                        "status": "ACTIVE",
                        "displayOrder": -299,
                        "groups": [],
                        "location": null,
                        "summary": "",
                        "headline": null,
                        "background": null,
                        "avatarId": "66cc25daa4b6ec32122f38f3",
                        "name": "Demo Data Center",
                        "type": "DATA_CENTER_FACILITY",
                        "verifiedIdentity": true,
                        "provider": ["PCCWGLOBAL"],
                        "destinationPortOnly": false,
                        "categories": [],
                        "nnis": null,
                        "isCloudProvider": false,
                        "bundleCrossConnectChargeId": "62df4e2d7ce573001546fdcc",
                        "signedCompanyVerified": false,
                        "selectiveQinQTunnelProvider": [],
                        "companies": [],
                        "id": "5af90d4548ba7200120a194b",
                        "online": false
                      },
                      "metro": {
                        "name": "Tokyo",
                        "code": "NRT",
                        "country": "jp",
                        "rir": "ARIN",
                        "regionIds": ["5a370b348f220300127f834e"],
                        "id": "5afa74accf15620012b981d6",
                        "deletedAt": null,
                        "createdAt": "2018-05-15T05:48:28.821Z",
                        "updatedAt": "2020-12-14T00:21:42.766Z",
                        "deleted": false,
                        "tags": [],
                        "canCreateController": false,
                        "ready": true
                      },
                      "capabilities": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Port_orderModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "examples": {
                  "cannot-bundle-cross-connect": {
                    "summary": "cannot bundle CrossConnect",
                    "value": {
                      "code": 400,
                      "message": "Selected DCF does not support bundle cross connect"
                    }
                  },
                  "bundle-cross-connect-charge-required": {
                    "summary": "bundle CrossConnect charge required",
                    "value": {
                      "code": 400,
                      "message": "A bundleCrossConnectChargeId is required for a DCF which supports bundled cross connect"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            },
            "headers": {}
          }
        },
        "tags": ["Port Orders"],
        "description": "A port order is created in a 'dataCenterFacility'.\n\nPlease take note about the different LOA lead times for On-net & Extended (Off-net) data centers.\\\n\\\nOn-net: 24 hours.\\\nExtended: Around 4 to 6 weeks.\n\n### Port Order Status Flow\n\n1. ***created*** - The initial status when this operation is called.\n2. ***processing*** - Reserving a port / the system will select the next available port.\n3. ***allocated*** - The status once the port is successfully ordered, during this status the cross connect will be installed by the Data Centner.\n4. ***loa_sent*** - (Optional) The status once the LOA was uploaded to the port and the customer can install the Cross Connect.\n5. ***setup_xc*** - (Optional) Setup Cross Connect.\n6. ***done*** - The status once the order has been completed and the order is moved to a port.\n\n**Note:** The 'creditcard' payment type is only supported via the Console\nConnect web application. When using this payment type, you must also include 'paymentTransactionId'\nproperty in the request body.\n",
        "operationId": "CreatePortOrder",
        "summary": "Create a port order/reservation"
      },
      "get": {
        "parameters": [
          {
            "description": "The username of the company that the order is for. You can find your `companyName` by querying ***[Auth](#tag/Auth/operation/GetLoggedInUser)*** API under `companies` and look for `username`.\n",
            "in": "path",
            "example": "samplecompanyname",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "results": [
                        {
                          "id": "66ac8123309e43469579b637",
                          "portName": "Sample Port Name",
                          "message": null,
                          "dcpCompanyId": null,
                          "locationId": null,
                          "speed": {
                            "value": 1000,
                            "name": "1000 Mbps"
                          },
                          "requestedLocation": null,
                          "paymentType": "creditcard",
                          "createdPortId": "66ac8136f8ff98229a26f954",
                          "portId": null,
                          "popId": "199xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                          "billingId": "66ac818a69e3e647487502a7",
                          "externalId": null,
                          "salesRecordId": null,
                          "paymentTransactionId": null,
                          "payg": false,
                          "status": "done",
                          "isEdgePort": false,
                          "cancelled": false,
                          "cancelledAt": null,
                          "loaSentAt": null,
                          "edgePayload": null,
                          "statusDetail": "",
                          "updatedBy": "workflowengine",
                          "createdBy": "someone",
                          "deletedBy": null,
                          "type": "PHYSICAL",
                          "dataCenterFacilityId": "66ac81abba800b191bb7bfc1",
                          "metroId": "66ac80e45ead92352fa507f1",
                          "companyId": "66ac81f01513f510a25fb0f9",
                          "deleted": false,
                          "deletedAt": null,
                          "createdAt": "2019-10-24T12:25:30.926Z",
                          "updatedAt": "2019-10-29T15:09:05.579Z",
                          "cancelledBy": null,
                          "company": {
                            "officeAddress": null,
                            "system": {
                              "welcomeMessage": null
                            },
                            "company": {
                              "industry": null,
                              "partnerType": null,
                              "companySize": null,
                              "dateFounded": null,
                              "clientId": null,
                              "first": null,
                              "last": null,
                              "address": null,
                              "city": null,
                              "state": null,
                              "zip": null,
                              "phone": null,
                              "fax": null,
                              "website": "pccwglobal.com",
                              "businessType": "Internal",
                              "registeredName": "PCCW Global Limited",
                              "addresses": [
                                {
                                  "geo": {
                                    "type": "Point",
                                    "coordinates": []
                                  },
                                  "registered": true,
                                  "address": "123/F, Address street",
                                  "city": "City",
                                  "state": null,
                                  "zip": "123456",
                                  "country": "GB",
                                  "email": null,
                                  "phone": null
                                }
                              ],
                              "isIoTDemoCompany": false
                            },
                            "cloudProviderDetails": {
                              "asn": {
                                "range": []
                              },
                              "bgpAuthority": "PCCWGLOBAL",
                              "companyType": "DCP"
                            },
                            "stats": {
                              "members": 24,
                              "interconnections": 0,
                              "followers": 0,
                              "following": 0,
                              "privateArticles": 0,
                              "privateEvents": 0,
                              "privatePosts": 0,
                              "articles": 1,
                              "events": 0,
                              "posts": 0
                            },
                            "overviewImage": null,
                            "accountManagerEmail": null,
                            "accountManagerId": null,
                            "createdAt": "2019-10-16T09:24:25.171Z",
                            "updatedAt": "2024-07-31T13:49:54.777Z",
                            "username": "samplecompanyname",
                            "deletedAt": null,
                            "deleted": false,
                            "verified": true,
                            "tags": ["Analytics"],
                            "status": "ACTIVE",
                            "displayOrder": 0,
                            "groups": [],
                            "location": null,
                            "summary": "",
                            "headline": null,
                            "background": "667791fc324b084736294895",
                            "avatarId": "5f879e24ff0c370014a81528",
                            "name": "My Sample Company",
                            "type": "COMPANY",
                            "oldAvatarId": "66ac82ffd4d834545f0cdcf2",
                            "verifiedIdentity": true,
                            "portsActive": 4,
                            "categories": ["NaaS", "Enterprise"],
                            "isCloudProvider": false,
                            "signedCompanyRefId": 46,
                            "signedCompanyVerified": true,
                            "businessRegistrationNumber": "11111111-222-33-44-5",
                            "companies": [],
                            "id": "66ac81f01513f510a25fb0f9",
                            "online": false
                          },
                          "dataCenterFacility": {
                            "system": {
                              "welcomeMessage": null
                            },
                            "company": {
                              "privacy": {
                                "network": {
                                  "mode": "PUBLIC",
                                  "blackListIds": [],
                                  "whiteListIds": []
                                },
                                "community": {
                                  "mode": "PUBLIC",
                                  "blackListIds": [],
                                  "whiteListIds": []
                                }
                              },
                              "industry": null,
                              "partnerType": null,
                              "companySize": null,
                              "dateFounded": null,
                              "registeredName": null,
                              "businessRegistrationCertReference": null,
                              "businessRegistrationCertUploadedAt": null,
                              "businessRegistrationCertRejectedReason": null,
                              "clientId": null,
                              "first": null,
                              "last": null,
                              "address": null,
                              "city": null,
                              "state": null,
                              "zip": null,
                              "phone": null,
                              "fax": null,
                              "addresses": [
                                {
                                  "geo": {
                                    "type": "Point",
                                    "coordinates": []
                                  },
                                  "registered": false,
                                  "address": "456/G, Address street",
                                  "city": "London",
                                  "state": null,
                                  "zip": null,
                                  "country": "GB",
                                  "email": null,
                                  "phone": null
                                }
                              ],
                              "businessType": "Data Center",
                              "regionalInternetRegistry": [],
                              "businessRegistrationCertVerified": "UNVERIFIED",
                              "website": "www.website.com",
                              "emailDomains": [],
                              "businessDevelopmentManagerTypePreference": "UNSPECIFIED",
                              "isIoTDemoCompany": false
                            },
                            "dataCenterFacility": {
                              "airportCodes": ["LON"],
                              "speeds": [
                                {
                                  "name": "1000 Mbps",
                                  "value": 1000
                                },
                                {
                                  "name": "10000 Mbps",
                                  "value": 10000
                                },
                                {
                                  "name": "100000 Mbps",
                                  "value": 100000
                                }
                              ],
                              "metroId": "66ac80e45ead92352fa507f1",
                              "ready": true,
                              "id": null,
                              "nniReady": true,
                              "brandId": "66ac83bf966e5c355cc41000",
                              "canBundleCrossConnect": true
                            },
                            "cloudProviderDetails": {
                              "asn": {
                                "range": []
                              },
                              "bgpAuthority": "PCCWGLOBAL",
                              "companyType": "DCP"
                            },
                            "stats": {
                              "members": 0,
                              "interconnections": 0,
                              "followers": 7,
                              "following": 0,
                              "privateArticles": 0,
                              "privateEvents": 0,
                              "privatePosts": 0,
                              "articles": 0,
                              "events": 0,
                              "posts": 0
                            },
                            "overviewImage": null,
                            "businessRegistrationNumber": null,
                            "signedCompanyRefId": null,
                            "accountManagerEmail": null,
                            "accountManagerId": null,
                            "createdAt": "2018-02-28T23:22:52.293Z",
                            "updatedAt": "2024-06-05T23:24:35.392Z",
                            "username": "sampledcf-username",
                            "deletedAt": null,
                            "deleted": false,
                            "verified": true,
                            "tags": ["monthly-ports"],
                            "status": "ACTIVE",
                            "displayOrder": -299,
                            "groups": [],
                            "location": null,
                            "summary": null,
                            "headline": "",
                            "background": null,
                            "avatarId": "66ac846e02981dacc5826ab1",
                            "name": "Sample DCF Name",
                            "type": "DATA_CENTER_FACILITY",
                            "popIds": [
                              "199xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                              "22cxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                            ],
                            "costbookLocationId": "66ac84b20f0a090dcaf087ed",
                            "provider": ["PCCWGLOBAL"],
                            "verifiedIdentity": false,
                            "categories": [],
                            "isCloudProvider": false,
                            "l3CostbookLocationId": "66ac84bed964dba373e3df1f",
                            "nnis": [],
                            "bundleCrossConnectChargeId": "66ac84cb55ab153cec8787cd",
                            "signedCompanyVerified": false,
                            "companies": [],
                            "id": "66ac81abba800b191bb7bfc1",
                            "online": false
                          },
                          "metro": {
                            "name": "London",
                            "code": "LHR",
                            "country": "gb",
                            "regionIds": ["66ac85577fee5d6f5c492340"],
                            "id": "66ac80e45ead92352fa507f1",
                            "deletedAt": null,
                            "createdAt": "2018-02-14T00:34:10.227Z",
                            "updatedAt": "2018-02-14T00:34:20.774Z",
                            "logo": null,
                            "description": "London",
                            "ready": true,
                            "canCreateController": false,
                            "deleted": false
                          },
                          "capabilities": {}
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Port_ordersModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Port Orders"],
        "description": "Get all port orders of a company\n\nImportant Notes:\n  * This is where you can find all the port orders you have created.\n  * You can also find the `createdPortId` here which you can use to query for a port by its order ID. See ***[Read port details](#tag/Ports/operation/GetPort)*** API and use the `createdPortId` in **{portId}** path parameter\n",
        "operationId": "GetAllPortOrderDetails",
        "summary": "Get all order details"
      }
    },
    "/api/company/{companyName}/ports/orders/{orderId}": {
      "get": {
        "parameters": [
          {
            "description": "The username of the company that the order is for.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the order.",
            "in": "path",
            "example": "56d691309a90128d55831db1",
            "name": "orderId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "billingId": "56d691309a90128d55831db2",
                      "cancelled": false,
                      "isEdgePort": false,
                      "edgePayload": {},
                      "cancelledAt": "1970-01-01T00:00:00.000Z",
                      "cancelledBy": null,
                      "company": {
                        "tags": [],
                        "__v": 0,
                        "avatar": null,
                        "avatarId": null,
                        "background": null,
                        "capabilities": {
                          "layer2": false,
                          "layer2Metros": [],
                          "layer2Regions": [],
                          "layer3": false,
                          "layer3Metros": [],
                          "layer3Regions": []
                        },
                        "companies": [],
                        "company": {
                          "address": null,
                          "addresses": [],
                          "businessDevelopmentManagerTypePreference": "UNSPECIFIED",
                          "businessRegistrationCertReference": null,
                          "businessRegistrationCertRejectedReason": null,
                          "businessRegistrationCertUploadedAt": null,
                          "businessRegistrationCertVerified": "UNVERIFIED",
                          "businessType": null,
                          "city": null,
                          "clientId": null,
                          "companySize": null,
                          "dateFounded": null,
                          "emailDomains": ["example.com"],
                          "fax": null,
                          "first": null,
                          "industry": null,
                          "isSDWAN": false,
                          "last": null,
                          "parentIds": [],
                          "phone": null,
                          "privacy": {
                            "community": {
                              "blackListIds": [],
                              "mode": "PUBLIC",
                              "whiteListIds": []
                            },
                            "network": {
                              "blackListIds": [],
                              "mode": "PUBLIC",
                              "whiteListIds": []
                            }
                          },
                          "regionalInternetRegistry": [],
                          "registeredName": null,
                          "state": null,
                          "website": null,
                          "zip": null
                        },
                        "createdAt": "2017-02-06T23:20:46.291Z",
                        "defaultPaymentType": null,
                        "deleted": false,
                        "deletedAt": null,
                        "displayOrder": -299,
                        "groups": [],
                        "headline": null,
                        "id": "58980a25a77b4d7bf459d200",
                        "isSupport": false,
                        "legalEntityId": null,
                        "linkUserCompany": {},
                        "location": null,
                        "name": "Company 1",
                        "online": false,
                        "optIntoMarketingEmail": false,
                        "overviewImage": null,
                        "phone": null,
                        "popIds": [],
                        "stats": {
                          "articles": 0,
                          "events": 0,
                          "followers": 0,
                          "following": 0,
                          "interconnections": 0,
                          "members": 1,
                          "posts": 0,
                          "privateArticles": 0,
                          "privateEvents": 0,
                          "privatePosts": 0
                        },
                        "status": "ACTIVE",
                        "summary": null,
                        "system": {
                          "welcomeMessage": null
                        },
                        "type": "COMPANY",
                        "updatedAt": "2017-02-06T23:20:46.291Z",
                        "username": "company1",
                        "verified": true,
                        "verifiedIdentity": true
                      },
                      "controller": {
                        "asn": null,
                        "cerAsn": null,
                        "cerIp": {
                          "ipv4": null,
                          "ipv6": null
                        },
                        "id": null,
                        "ip": {
                          "ipv4": null,
                          "ipv6": null
                        },
                        "serviceLayerId": null,
                        "vlan": null
                      },
                      "createdAt": "2016-03-02T07:07:28.195Z",
                      "createdBy": "stan",
                      "deleted": false,
                      "deletedAt": "1970-01-01T00:00:00.000Z",
                      "deletedBy": null,
                      "id": "56d691309a90128d55831db1",
                      "locationId": null,
                      "crossConnectId": null,
                      "message": null,
                      "metro": {
                        "country": "USA",
                        "createdAt": "2016-02-12T09:01:33.840Z",
                        "deleted": false,
                        "deletedAt": null,
                        "id": "1232413986c08c061dd8c45f",
                        "name": "SJC",
                        "updatedAt": "2016-02-12T09:01:33.840Z"
                      },
                      "port": {
                        "activeChangedAt": "2016-03-02T07:07:27.147Z",
                        "createdAt": "2016-03-02T07:07:27.148Z",
                        "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                        "deleted": false,
                        "deletedAt": "1970-01-01T00:00:00.000Z",
                        "id": "56d6912f9a90128d55831da8",
                        "ip": {
                          "ipv4": null,
                          "ipv6": null
                        },
                        "locationId": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                        "metroId": "1232413986c08c061dd8c45f",
                        "name": "PORT_1",
                        "portId": null,
                        "speed": 1000,
                        "status": "UNKNOWN",
                        "type": "PHYSICAL_NSP",
                        "updatedAt": "2016-03-02T07:07:27.148Z",
                        "vlan": null
                      },
                      "portName": "PORT_1",
                      "speed": {
                        "name": "1000 Mbps",
                        "value": 1000
                      },
                      "status": "created",
                      "updatedAt": "2016-03-02T07:07:28.195Z",
                      "updatedBy": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Port_orderModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Port Orders"],
        "description": "Get the details of a companies port order",
        "operationId": "GetPortOrderDetail",
        "summary": "Get order details by ID"
      }
    },
    "/api/company/{companyName}/ports/orders/{orderId}/{action}(sendloa|loasent)": {
      "post": {
        "parameters": [
          {
            "name": "companyName",
            "in": "path",
            "description": "The username of the company to take the port order action for.",
            "example": "Acme",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The port order id you wish to take the LOA action for.",
            "example": "56d691301a1a128d55831db2",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "path",
            "description": "The LOA action to implement on the port order.",
            "examples": {
              "sendloa-action": {
                "summary": "Resends the LOA to the user",
                "value": "sendloa"
              },
              "loasent-action": {
                "summary": "Updates port order status to 'loa_sent'",
                "value": "loasent"
              }
            },
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "billingId": "56d691309a90128d55831db2",
                      "cancelled": false,
                      "cancelledAt": "1970-01-01T00:00:00.000Z",
                      "cancelledBy": null,
                      "company": {
                        "tags": [],
                        "__v": 0,
                        "avatar": null,
                        "avatarId": null,
                        "background": null,
                        "capabilities": {
                          "layer2": false,
                          "layer2Metros": [],
                          "layer2Regions": [],
                          "layer3": false,
                          "layer3Metros": [],
                          "layer3Regions": []
                        },
                        "companies": [],
                        "company": {
                          "address": null,
                          "addresses": [],
                          "businessDevelopmentManagerTypePreference": "UNSPECIFIED",
                          "businessRegistrationCertReference": null,
                          "businessRegistrationCertRejectedReason": null,
                          "businessRegistrationCertUploadedAt": null,
                          "businessRegistrationCertVerified": "UNVERIFIED",
                          "businessType": null,
                          "city": null,
                          "clientId": null,
                          "companySize": null,
                          "dateFounded": null,
                          "emailDomains": ["example.org"],
                          "fax": null,
                          "first": null,
                          "industry": null,
                          "isSDWAN": false,
                          "last": null,
                          "parentIds": [],
                          "phone": null,
                          "privacy": {
                            "community": {
                              "blackListIds": [],
                              "mode": "PUBLIC",
                              "whiteListIds": []
                            },
                            "network": {
                              "blackListIds": [],
                              "mode": "PUBLIC",
                              "whiteListIds": []
                            }
                          },
                          "regionalInternetRegistry": [],
                          "registeredName": null,
                          "state": null,
                          "website": null,
                          "zip": null
                        },
                        "createdAt": "2017-02-06T23:20:46.291Z",
                        "defaultPaymentType": null,
                        "deleted": false,
                        "deletedAt": null,
                        "displayOrder": -299,
                        "groups": [],
                        "headline": null,
                        "id": "58980a25a77b4d7bf459d200",
                        "isSupport": false,
                        "legalEntityId": null,
                        "linkUserCompany": {},
                        "location": null,
                        "name": "Company 1",
                        "online": false,
                        "optIntoMarketingEmail": false,
                        "overviewImage": null,
                        "phone": null,
                        "popIds": [],
                        "stats": {
                          "articles": 0,
                          "events": 0,
                          "followers": 0,
                          "following": 0,
                          "interconnections": 0,
                          "members": 1,
                          "posts": 0,
                          "privateArticles": 0,
                          "privateEvents": 0,
                          "privatePosts": 0
                        },
                        "status": "ACTIVE",
                        "summary": null,
                        "system": {
                          "welcomeMessage": null
                        },
                        "type": "COMPANY",
                        "updatedAt": "2017-02-06T23:20:46.291Z",
                        "username": "company1",
                        "verified": true,
                        "verifiedIdentity": true
                      },
                      "controller": {
                        "asn": null,
                        "cerAsn": null,
                        "cerIp": {
                          "ipv4": null,
                          "ipv6": null
                        },
                        "id": null,
                        "ip": {
                          "ipv4": null,
                          "ipv6": null
                        },
                        "serviceLayerId": null,
                        "vlan": null
                      },
                      "createdAt": "2016-03-02T07:07:28.195Z",
                      "createdBy": "stan",
                      "deleted": false,
                      "deletedAt": "1970-01-01T00:00:00.000Z",
                      "deletedBy": null,
                      "id": "56d691309a90128d55831db1",
                      "locationId": null,
                      "crossConnectId": null,
                      "message": null,
                      "metro": {
                        "country": "USA",
                        "createdAt": "2016-02-12T09:01:33.840Z",
                        "deleted": false,
                        "deletedAt": null,
                        "id": "1232413986c08c061dd8c45f",
                        "name": "SJC",
                        "updatedAt": "2016-02-12T09:01:33.840Z"
                      },
                      "port": {
                        "activeChangedAt": "2016-03-02T07:07:27.147Z",
                        "createdAt": "2016-03-02T07:07:27.148Z",
                        "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                        "deleted": false,
                        "deletedAt": "1970-01-01T00:00:00.000Z",
                        "id": "56d6912f9a90128d55831da8",
                        "ip": {
                          "ipv4": null,
                          "ipv6": null
                        },
                        "locationId": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                        "metroId": "1232413986c08c061dd8c45f",
                        "name": "PORT_1",
                        "portId": null,
                        "speed": 1000,
                        "status": "UNKNOWN",
                        "type": "PHYSICAL_NSP",
                        "updatedAt": "2016-03-02T07:07:27.148Z",
                        "vlan": null
                      },
                      "portName": "PORT_1",
                      "speed": {
                        "name": "1000 Mbps",
                        "value": 1000
                      },
                      "status": "created",
                      "updatedAt": "2016-03-02T07:07:28.195Z",
                      "updatedBy": null
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/Port_orderModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Port Orders"],
        "description": "A Letter of Authorisation is required as part of the process to connect to a [port](https://www.consoleconnect.com/help/access-ports/#ports).\n* **sendloa**: Resends the LOA to the user.\n* **loasent**: Updates port order status to 'loa_sent'.\n  * **Note**: **loasent** will fail with 409 unless port order status is 'ALLOCATED'.\n",
        "operationId": "UpdatePortOrderAction",
        "summary": "Perform LOA action on a port order"
      }
    },
    "/api/company/{companyName}/ports": {
      "get": {
        "parameters": [
          {
            "description": "The username of the company to check the port for.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "deleted",
            "description": "Set to `false` to exclude ports with `DELETED` status",
            "example": "false",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "results": [
                        {
                          "activeChangedAt": "2016-06-16T06:20:10.640Z",
                          "asn": {
                            "asn": "176251",
                            "createdAt": "2016-06-16T06:20:11.053Z",
                            "deleted": false,
                            "deletedAt": null,
                            "status": "VERIFIED",
                            "type": "ALLOCATED",
                            "updatedAt": "2016-06-16T06:20:11.053Z"
                          },
                          "capacity": {
                            "remaining": 900,
                            "total": 1000,
                            "utilised": 100
                          },
                          "company": {
                            "tags": [],
                            "avatar": null,
                            "avatarId": null,
                            "background": null,
                            "companies": null,
                            "company": {
                              "address": null,
                              "addresses": [],
                              "businessType": null,
                              "city": null,
                              "clientId": null,
                              "companySize": null,
                              "country": null,
                              "dateFounded": null,
                              "email": null,
                              "emailDomains": [],
                              "fax": null,
                              "first": null,
                              "industry": null,
                              "last": null,
                              "markets": {},
                              "phone": null,
                              "regionalInternetRegistry": null,
                              "state": null,
                              "website": null,
                              "zip": null
                            },
                            "createdAt": "2016-06-16T06:20:09.604Z",
                            "deleted": false,
                            "deletedAt": null,
                            "groups": null,
                            "headline": null,
                            "id": "5762451982894b9b1b1a5dbc",
                            "isSupport": false,
                            "isSynced": null,
                            "location": null,
                            "name": "corp",
                            "online": false,
                            "phone": null,
                            "social": null,
                            "stats": {
                              "articles": 0,
                              "events": 0,
                              "followers": 0,
                              "following": 0,
                              "interconnections": 0,
                              "members": 1,
                              "posts": 0,
                              "privateArticles": 0,
                              "privateEvents": 0,
                              "privatePosts": 0
                            },
                            "status": "ACTIVE",
                            "summary": null,
                            "type": "COMPANY",
                            "updatedAt": "2016-06-16T06:20:09.604Z",
                            "username": "corp",
                            "verified": false
                          },
                          "companyId": "5762451982894b9b1b1a5dbc",
                          "connections": [
                            {
                              "id": "5762451d82894b9b1b1a5dd2",
                              "name": "Sierra",
                              "status": "ACTIVE"
                            }
                          ],
                          "controllers": [
                            {
                              "activeChangedAt": "2016-06-16T06:20:11.458Z",
                              "asn": {
                                "asn": "54321",
                                "createdAt": "2016-06-16T06:20:11.460Z",
                                "deleted": false,
                                "deletedAt": null,
                                "status": "VERIFIED",
                                "type": "SYSTEM",
                                "updatedAt": "2016-06-16T06:20:11.460Z"
                              },
                              "createdAt": "2016-06-16T06:20:11.114Z",
                              "deleted": false,
                              "deletedAt": null,
                              "id": "5762451b82894b9b1b1a5dc6",
                              "ip": {
                                "ipv4": "198.51.100.1",
                                "ipv6": "2001:DB8::1111:1111:1111:1111"
                              },
                              "metro": {
                                "code": null,
                                "country": "USA",
                                "createdAt": "2016-02-12T09:01:33.840Z",
                                "deleted": false,
                                "deletedAt": null,
                                "description": null,
                                "id": "1232413986c08c061dd8c45f",
                                "logo": null,
                                "name": "SJC",
                                "ready": true,
                                "regionIds": [],
                                "updatedAt": "2016-02-12T09:01:33.840Z"
                              },
                              "metroId": "1232413986c08c061dd8c45f",
                              "name": "corp - Skyla",
                              "password": "",
                              "portIds": ["5762451a82894b9b1b1a5dc2"],
                              "status": "ACTIVE",
                              "type": "USER",
                              "updatedAt": "2016-06-16T06:20:11.462Z",
                              "vlan": 200
                            }
                          ],
                          "createdAt": "2016-06-16T06:20:10.029Z",
                          "dataCenterFacility": {
                            "tags": [],
                            "avatar": null,
                            "avatarId": null,
                            "background": null,
                            "companies": null,
                            "company": {
                              "address": null,
                              "addresses": [
                                {
                                  "address": "11 Great Oaks Boulevard",
                                  "city": "San Jose",
                                  "country": "USA",
                                  "email": "",
                                  "geo": {
                                    "coordinates": [-121.78322, 37.24162],
                                    "type": "Point"
                                  },
                                  "phone": "",
                                  "primary": true,
                                  "state": "California",
                                  "zip": "95119-1242"
                                }
                              ],
                              "businessType": null,
                              "city": null,
                              "clientId": null,
                              "companySize": null,
                              "country": null,
                              "dateFounded": null,
                              "email": null,
                              "emailDomains": [],
                              "fax": null,
                              "first": null,
                              "industry": null,
                              "last": null,
                              "markets": {},
                              "phone": null,
                              "regionalInternetRegistry": null,
                              "state": null,
                              "website": null,
                              "zip": null
                            },
                            "createdAt": "2015-11-04T06:07:12.785Z",
                            "dataCenterFacility": {
                              "id": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                              "metroId": "1232413986c08c061dd8c45f",
                              "ready": true,
                              "speeds": [],
                              "canBundleCrossConnect": true
                            },
                            "deleted": false,
                            "deletedAt": "1970-01-01T00:00:00.000Z",
                            "groups": null,
                            "headline": null,
                            "id": "5126c9f1111e15a24a066130",
                            "isSupport": false,
                            "isSynced": null,
                            "location": null,
                            "name": "Equinix - SV1",
                            "online": false,
                            "phone": null,
                            "social": null,
                            "stats": {
                              "articles": 0,
                              "events": 0,
                              "followers": 0,
                              "following": 0,
                              "interconnections": 0,
                              "members": 0,
                              "posts": 0,
                              "privateArticles": 0,
                              "privateEvents": 0,
                              "privatePosts": 0
                            },
                            "status": "ACTIVE",
                            "summary": null,
                            "type": "DATA_CENTER_FACILITY",
                            "updatedAt": "2015-11-04T06:07:13.430Z",
                            "username": "equinix-sv1",
                            "verified": true
                          },
                          "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                          "deleted": false,
                          "deletedAt": "1970-01-01T00:00:00.000Z",
                          "id": "5762451a82894b9b1b1a5dc2",
                          "ip": {
                            "ipv4": null,
                            "ipv6": null
                          },
                          "locationId": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                          "crossConnectId": "68696464-b2f7-4c90-a342-293f7385469a",
                          "metro": {
                            "code": null,
                            "country": "USA",
                            "createdAt": "2016-02-12T09:01:33.840Z",
                            "deleted": false,
                            "deletedAt": null,
                            "description": null,
                            "id": "1232413986c08c061dd8c45f",
                            "logo": null,
                            "name": "SJC",
                            "ready": true,
                            "regionIds": [],
                            "updatedAt": "2016-02-12T09:01:33.840Z"
                          },
                          "metroId": "1232413986c08c061dd8c45f",
                          "name": "Vicente",
                          "networkServiceProviderId": null,
                          "partner": {
                            "regionNames": [],
                            "type": "NONE"
                          },
                          "portId": null,
                          "speed": {
                            "name": "1000 Mbps",
                            "value": 1000
                          },
                          "status": "ACTIVE",
                          "type": "PHYSICAL",
                          "updatedAt": "2016-06-16T06:20:11.116Z",
                          "vlanRanges": [
                            {
                              "end": 3699,
                              "start": 3600
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PortModel"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "Note: Reading a company’s ports is publicly visible.\n\nA port can be in one of the following states:\n<table>\n  <thead>\n  <tr>\n  <th>Status</th>\n  <th>Description</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  <td>ACTIVATING</td>\n  <td>In the process of being activated</td>\n  </tr>\n  <tr>\n  <td>READY</td>\n  <td>Allocated but awaiting a physical network connection</td>\n  </tr>\n  <tr>\n  <td>ACTIVE</td>\n  <td>Port is active</td>\n  </tr>\n  <tr>\n  <td>DISABLING</td>\n  <td>In the process of being disabled</td>\n  </tr>\n  <tr>\n  <td>DISABLED</td>\n  <td>The port is disabled</td>\n  </tr>\n  <tr>\n  <td>DELETING</td>\n  <td>In the process of being deleted</td>\n  </tr>\n  <tr>\n  <td>DELETED</td>\n  <td>The Port is deleted</td>\n  </tr>\n  <tr>\n  <td>UNKNOWN</td>\n  <td>The status of the port cannot be determined</td>\n  </tr>\n  <tr>\n  <td>ONBOARDING</td>\n  <td>The port is currently being on-boarded</td>\n  </tr>\n  </tbody>\n</table>\n\nIn addition to these states, a port also has the `singleService` flag which indicates that the port is dedicated to a single untagged connection, so no further connections can be created on the port.\n",
        "operationId": "GetPortList",
        "summary": "List ports"
      }
    },
    "/api/company/{companyName}/ports/{portId}": {
      "delete": {
        "parameters": [
          {
            "description": "The username of the company to check the port for.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The port id",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "portId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "Note: a port must be disabled using Port Actions before it can be deleted.",
        "operationId": "DeletePort",
        "summary": "Delete port"
      },
      "get": {
        "parameters": [
          {
            "description": "The username of the company to check the port for.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The port id",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "portId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "activeChangedAt": "2016-06-16T06:20:10.640Z",
                      "asn": {
                        "asn": "176251",
                        "createdAt": "2016-06-16T06:20:11.053Z",
                        "deleted": false,
                        "deletedAt": null,
                        "status": "VERIFIED",
                        "type": "ALLOCATED",
                        "updatedAt": "2016-06-16T06:20:11.053Z"
                      },
                      "capacity": {
                        "remaining": 900,
                        "total": 1000,
                        "utilised": 100
                      },
                      "company": {
                        "tags": [],
                        "avatar": null,
                        "avatarId": null,
                        "background": null,
                        "companies": null,
                        "company": {
                          "address": null,
                          "addresses": [],
                          "businessType": null,
                          "city": null,
                          "clientId": null,
                          "companySize": null,
                          "country": null,
                          "dateFounded": null,
                          "email": null,
                          "emailDomains": [],
                          "fax": null,
                          "first": null,
                          "industry": null,
                          "last": null,
                          "markets": {},
                          "phone": null,
                          "regionalInternetRegistry": null,
                          "state": null,
                          "website": null,
                          "zip": null
                        },
                        "createdAt": "2016-06-16T06:20:09.604Z",
                        "deleted": false,
                        "deletedAt": null,
                        "groups": null,
                        "headline": null,
                        "id": "5762451982894b9b1b1a5dbc",
                        "isSupport": false,
                        "isSynced": null,
                        "location": null,
                        "name": "corp",
                        "online": false,
                        "phone": null,
                        "social": null,
                        "stats": {
                          "articles": 0,
                          "events": 0,
                          "followers": 0,
                          "following": 0,
                          "interconnections": 0,
                          "members": 1,
                          "posts": 0,
                          "privateArticles": 0,
                          "privateEvents": 0,
                          "privatePosts": 0
                        },
                        "status": "ACTIVE",
                        "summary": null,
                        "type": "COMPANY",
                        "updatedAt": "2016-06-16T06:20:09.604Z",
                        "username": "corp",
                        "verified": false
                      },
                      "companyId": "5762451982894b9b1b1a5dbc",
                      "connections": [
                        {
                          "id": "5762451d82894b9b1b1a5dd2",
                          "name": "Sierra",
                          "status": "ACTIVE"
                        }
                      ],
                      "controllers": [
                        {
                          "activeChangedAt": "2016-06-16T06:20:11.458Z",
                          "asn": {
                            "asn": "54321",
                            "createdAt": "2016-06-16T06:20:11.460Z",
                            "deleted": false,
                            "deletedAt": null,
                            "status": "VERIFIED",
                            "type": "SYSTEM",
                            "updatedAt": "2016-06-16T06:20:11.460Z"
                          },
                          "createdAt": "2016-06-16T06:20:11.114Z",
                          "deleted": false,
                          "deletedAt": null,
                          "id": "5762451b82894b9b1b1a5dc6",
                          "ip": {
                            "ipv4": "198.51.100.1",
                            "ipv6": "2001:DB8::1111:1111:1111:1111"
                          },
                          "metro": {
                            "code": null,
                            "country": "USA",
                            "createdAt": "2016-02-12T09:01:33.840Z",
                            "deleted": false,
                            "deletedAt": null,
                            "description": null,
                            "id": "1232413986c08c061dd8c45f",
                            "logo": null,
                            "name": "SJC",
                            "ready": true,
                            "regionIds": [],
                            "updatedAt": "2016-02-12T09:01:33.840Z"
                          },
                          "metroId": "1232413986c08c061dd8c45f",
                          "name": "corp - Skyla",
                          "password": "",
                          "portIds": ["5762451a82894b9b1b1a5dc2"],
                          "status": "ACTIVE",
                          "type": "USER",
                          "updatedAt": "2016-06-16T06:20:11.462Z",
                          "vlan": 200
                        }
                      ],
                      "createdAt": "2016-06-16T06:20:10.029Z",
                      "dataCenterFacility": {
                        "tags": [],
                        "avatar": null,
                        "avatarId": null,
                        "background": null,
                        "companies": null,
                        "company": {
                          "address": null,
                          "addresses": [
                            {
                              "address": "11 Great Oaks Boulevard",
                              "city": "San Jose",
                              "country": "USA",
                              "email": "",
                              "geo": {
                                "coordinates": [-121.78322, 37.24162],
                                "type": "Point"
                              },
                              "phone": "",
                              "primary": true,
                              "state": "California",
                              "zip": "95119-1242"
                            }
                          ],
                          "businessType": null,
                          "city": null,
                          "clientId": null,
                          "companySize": null,
                          "country": null,
                          "dateFounded": null,
                          "email": null,
                          "emailDomains": [],
                          "fax": null,
                          "first": null,
                          "industry": null,
                          "last": null,
                          "markets": {},
                          "phone": null,
                          "regionalInternetRegistry": null,
                          "state": null,
                          "website": null,
                          "zip": null
                        },
                        "createdAt": "2015-11-04T06:07:12.785Z",
                        "dataCenterFacility": {
                          "id": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                          "metroId": "1232413986c08c061dd8c45f",
                          "ready": true,
                          "speeds": [],
                          "canBundleCrossConnect": true
                        },
                        "deleted": false,
                        "deletedAt": "1970-01-01T00:00:00.000Z",
                        "groups": null,
                        "headline": null,
                        "id": "5126c9f1111e15a24a066130",
                        "isSupport": false,
                        "isSynced": null,
                        "location": null,
                        "name": "Equinix - SV1",
                        "online": false,
                        "phone": null,
                        "social": null,
                        "stats": {
                          "articles": 0,
                          "events": 0,
                          "followers": 0,
                          "following": 0,
                          "interconnections": 0,
                          "members": 0,
                          "posts": 0,
                          "privateArticles": 0,
                          "privateEvents": 0,
                          "privatePosts": 0
                        },
                        "status": "ACTIVE",
                        "summary": null,
                        "type": "DATA_CENTER_FACILITY",
                        "updatedAt": "2015-11-04T06:07:13.430Z",
                        "username": "equinix-sv1",
                        "verified": true
                      },
                      "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                      "deleted": false,
                      "deletedAt": "1970-01-01T00:00:00.000Z",
                      "id": "5762451a82894b9b1b1a5dc2",
                      "ip": {
                        "ipv4": null,
                        "ipv6": null
                      },
                      "locationId": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                      "crossConnectId": "68696464-b2f7-4c90-a342-293f7385469a",
                      "metro": {
                        "code": null,
                        "country": "USA",
                        "createdAt": "2016-02-12T09:01:33.840Z",
                        "deleted": false,
                        "deletedAt": null,
                        "description": null,
                        "id": "1232413986c08c061dd8c45f",
                        "logo": null,
                        "name": "SJC",
                        "ready": true,
                        "regionIds": [],
                        "updatedAt": "2016-02-12T09:01:33.840Z"
                      },
                      "metroId": "1232413986c08c061dd8c45f",
                      "name": "Vicente",
                      "networkServiceProviderId": null,
                      "partner": {
                        "regionNames": [],
                        "type": "NONE"
                      },
                      "portId": null,
                      "singleService": false,
                      "speed": {
                        "name": "1000 Mbps",
                        "value": 1000
                      },
                      "status": "ACTIVE",
                      "type": "PHYSICAL",
                      "updatedAt": "2016-06-16T06:20:11.116Z",
                      "vlanRange": [
                        {
                          "from": 3600,
                          "to": 3699
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PortModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "Note: Reading a company's port details is publicly visible.",
        "operationId": "GetPort",
        "summary": "Read port details"
      },
      "post": {
        "parameters": [
          {
            "description": "The username of the company to check the port for.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The port id.",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "portId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "example": {
                  "asn": {
                    "asn": "176252"
                  },
                  "name": "VPort0"
                },
                "properties": {
                  "asn": {
                    "description": "The ASN to attach to this port.",
                    "type": "string"
                  },
                  "name": {
                    "description": "A friendly name for the port",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "activeChangedAt": "2016-06-16T06:20:10.640Z",
                      "asn": {
                        "asn": "176251",
                        "createdAt": "2016-06-16T06:20:11.053Z",
                        "deleted": false,
                        "deletedAt": null,
                        "status": "VERIFIED",
                        "type": "ALLOCATED",
                        "updatedAt": "2016-06-16T06:20:11.053Z"
                      },
                      "capacity": {
                        "remaining": 900,
                        "total": 1000,
                        "utilised": 100
                      },
                      "company": {
                        "tags": [],
                        "avatar": null,
                        "avatarId": null,
                        "background": null,
                        "companies": null,
                        "company": {
                          "address": null,
                          "addresses": [],
                          "businessType": null,
                          "city": null,
                          "clientId": null,
                          "companySize": null,
                          "country": null,
                          "dateFounded": null,
                          "email": null,
                          "emailDomains": [],
                          "fax": null,
                          "first": null,
                          "industry": null,
                          "last": null,
                          "markets": {},
                          "phone": null,
                          "regionalInternetRegistry": null,
                          "state": null,
                          "website": null,
                          "zip": null
                        },
                        "createdAt": "2016-06-16T06:20:09.604Z",
                        "deleted": false,
                        "deletedAt": null,
                        "groups": null,
                        "headline": null,
                        "id": "5762451982894b9b1b1a5dbc",
                        "isSupport": false,
                        "isSynced": null,
                        "location": null,
                        "name": "corp",
                        "online": false,
                        "phone": null,
                        "social": null,
                        "stats": {
                          "articles": 0,
                          "events": 0,
                          "followers": 0,
                          "following": 0,
                          "interconnections": 0,
                          "members": 1,
                          "posts": 0,
                          "privateArticles": 0,
                          "privateEvents": 0,
                          "privatePosts": 0
                        },
                        "status": "ACTIVE",
                        "summary": null,
                        "type": "COMPANY",
                        "updatedAt": "2016-06-16T06:20:09.604Z",
                        "username": "corp",
                        "verified": false
                      },
                      "companyId": "5762451982894b9b1b1a5dbc",
                      "connections": [
                        {
                          "id": "5762451d82894b9b1b1a5dd2",
                          "name": "Sierra",
                          "status": "ACTIVE"
                        }
                      ],
                      "controllers": [
                        {
                          "activeChangedAt": "2016-06-16T06:20:11.458Z",
                          "asn": {
                            "asn": "54321",
                            "createdAt": "2016-06-16T06:20:11.460Z",
                            "deleted": false,
                            "deletedAt": null,
                            "status": "VERIFIED",
                            "type": "SYSTEM",
                            "updatedAt": "2016-06-16T06:20:11.460Z"
                          },
                          "createdAt": "2016-06-16T06:20:11.114Z",
                          "deleted": false,
                          "deletedAt": null,
                          "id": "5762451b82894b9b1b1a5dc6",
                          "ip": {
                            "ipv4": "198.51.100.1",
                            "ipv6": "2001:DB8::1111:1111:1111:1111"
                          },
                          "metro": {
                            "code": null,
                            "country": "USA",
                            "createdAt": "2016-02-12T09:01:33.840Z",
                            "deleted": false,
                            "deletedAt": null,
                            "description": null,
                            "id": "1232413986c08c061dd8c45f",
                            "logo": null,
                            "name": "SJC",
                            "ready": true,
                            "regionIds": [],
                            "updatedAt": "2016-02-12T09:01:33.840Z"
                          },
                          "metroId": "1232413986c08c061dd8c45f",
                          "name": "corp - Skyla",
                          "password": "",
                          "portIds": ["5762451a82894b9b1b1a5dc2"],
                          "status": "ACTIVE",
                          "type": "USER",
                          "updatedAt": "2016-06-16T06:20:11.462Z",
                          "vlan": 200
                        }
                      ],
                      "createdAt": "2016-06-16T06:20:10.029Z",
                      "dataCenterFacility": {
                        "tags": [],
                        "avatar": null,
                        "avatarId": null,
                        "background": null,
                        "companies": null,
                        "company": {
                          "address": null,
                          "addresses": [
                            {
                              "address": "11 Great Oaks Boulevard",
                              "city": "San Jose",
                              "country": "USA",
                              "email": "",
                              "geo": {
                                "coordinates": [-121.78322, 37.24162],
                                "type": "Point"
                              },
                              "phone": "",
                              "primary": true,
                              "state": "California",
                              "zip": "95119-1242"
                            }
                          ],
                          "businessType": null,
                          "city": null,
                          "clientId": null,
                          "companySize": null,
                          "country": null,
                          "dateFounded": null,
                          "email": null,
                          "emailDomains": [],
                          "fax": null,
                          "first": null,
                          "industry": null,
                          "last": null,
                          "markets": {},
                          "phone": null,
                          "regionalInternetRegistry": null,
                          "state": null,
                          "website": null,
                          "zip": null
                        },
                        "createdAt": "2015-11-04T06:07:12.785Z",
                        "dataCenterFacility": {
                          "id": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                          "metroId": "1232413986c08c061dd8c45f",
                          "ready": true,
                          "speeds": [],
                          "canBundleCrossConnect": true
                        },
                        "deleted": false,
                        "deletedAt": "1970-01-01T00:00:00.000Z",
                        "groups": null,
                        "headline": null,
                        "id": "5126c9f1111e15a24a066130",
                        "isSupport": false,
                        "isSynced": null,
                        "location": null,
                        "name": "Equinix - SV1",
                        "online": false,
                        "phone": null,
                        "social": null,
                        "stats": {
                          "articles": 0,
                          "events": 0,
                          "followers": 0,
                          "following": 0,
                          "interconnections": 0,
                          "members": 0,
                          "posts": 0,
                          "privateArticles": 0,
                          "privateEvents": 0,
                          "privatePosts": 0
                        },
                        "status": "ACTIVE",
                        "summary": null,
                        "type": "DATA_CENTER_FACILITY",
                        "updatedAt": "2015-11-04T06:07:13.430Z",
                        "username": "equinix-sv1",
                        "verified": true
                      },
                      "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                      "deleted": false,
                      "deletedAt": "1970-01-01T00:00:00.000Z",
                      "id": "5762451a82894b9b1b1a5dc2",
                      "ip": {
                        "ipv4": null,
                        "ipv6": null
                      },
                      "locationId": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                      "crossConnectId": "68696464-b2f7-4c90-a342-293f7385469a",
                      "metro": {
                        "code": null,
                        "country": "USA",
                        "createdAt": "2016-02-12T09:01:33.840Z",
                        "deleted": false,
                        "deletedAt": null,
                        "description": null,
                        "id": "1232413986c08c061dd8c45f",
                        "logo": null,
                        "name": "SJC",
                        "ready": true,
                        "regionIds": [],
                        "updatedAt": "2016-02-12T09:01:33.840Z"
                      },
                      "metroId": "1232413986c08c061dd8c45f",
                      "name": "Vicente",
                      "networkServiceProviderId": null,
                      "partner": {
                        "regionNames": [],
                        "type": "NONE"
                      },
                      "portId": null,
                      "singleService": false,
                      "speed": {
                        "name": "1000 Mbps",
                        "value": 1000
                      },
                      "status": "ACTIVE",
                      "type": "PHYSICAL",
                      "updatedAt": "2016-06-16T06:20:11.116Z",
                      "vlanRange": [
                        {
                          "from": 3600,
                          "to": 3699
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PortModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "Update a port",
        "operationId": "UpdatePortDetails",
        "summary": "Update port details"
      }
    },
    "/api/company/{companyName}/ports/{portId}/access-circuit": {
      "get": {
        "parameters": [
          {
            "description": "The username of the company to check the port for.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The port id.",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "portId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "crossConnectConnectorType": "SC",
                      "crossConnectId": "19204",
                      "crossConnectMediaConvertor": true,
                      "crossConnectMediaType": "SMF",
                      "crossConnectProvider": "My cross connect provider",
                      "crossConnectSalesRecordId": "",
                      "id": "12345",
                      "localLoopPartnerLocalLineNo": "L93850",
                      "localLoopRemoteCarrierContactNo": "+61 3 2223 3344",
                      "localLoopRemoteLocalLineNo": "L843840384",
                      "localLoopRemoteLocalLinePartner": "Partner name",
                      "localLoopRemoteRefNo": "#980344933948",
                      "localLoopSpeed": "0",
                      "managedRouterServiceCeWanInterface": "",
                      "managedRouterServiceCeWanIpAddress": "",
                      "managedRouterServiceCpeOrder": "",
                      "managedRouterServiceDialupNo": "",
                      "managedRouterServiceManagementIp": "192.0.2.101",
                      "managedRouterServiceRemark": "",
                      "managedRouterServiceRouterName": "cds-e038kf-jhsnv",
                      "managedRouterServiceRouterOwner": "",
                      "managedRouterServiceRouterProvider": "",
                      "premiumColocationPanelNumber": "",
                      "premiumColocationRackId": "",
                      "premiumColocationSalesRecordId": ""
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "crossConnectConnectorType": {
                      "enum": ["SC", "FC", "LC", "BNC", "RJ48", "RJ45"],
                      "type": "string"
                    },
                    "crossConnectId": {
                      "type": "string"
                    },
                    "crossConnectMediaConvertor": {
                      "type": "boolean"
                    },
                    "crossConnectMediaType": {
                      "enum": ["SMF", "MMF", "COAXIAL", "COPPER"],
                      "type": "string"
                    },
                    "crossConnectProvider": {
                      "type": "string"
                    },
                    "crossConnectSalesRecordId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "localLoopPartnerLocalLineNo": {
                      "type": "string"
                    },
                    "localLoopRemoteCarrierContactNo": {
                      "type": "string"
                    },
                    "localLoopRemoteLocalLineNo": {
                      "type": "string"
                    },
                    "localLoopRemoteLocalLinePartner": {
                      "type": "string"
                    },
                    "localLoopRemoteRefNo": {
                      "type": "string"
                    },
                    "localLoopSpeed": {
                      "description": "The local loop speed.",
                      "type": "string"
                    },
                    "managedRouterServiceCeWanInterface": {
                      "type": "string"
                    },
                    "managedRouterServiceCeWanIpAddress": {
                      "type": "string"
                    },
                    "managedRouterServiceCpeOrder": {
                      "type": "string"
                    },
                    "managedRouterServiceDialupNo": {
                      "type": "string"
                    },
                    "managedRouterServiceManagementIp": {
                      "type": "string"
                    },
                    "managedRouterServiceRemark": {
                      "type": "string"
                    },
                    "managedRouterServiceRouterName": {
                      "type": "string"
                    },
                    "managedRouterServiceRouterOwner": {
                      "type": "string"
                    },
                    "managedRouterServiceRouterProvider": {
                      "type": "string"
                    },
                    "premiumColocationPanelNumber": {
                      "type": "string"
                    },
                    "premiumColocationRackId": {
                      "type": "string"
                    },
                    "premiumColocationSalesRecordId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "accessRequests": [
                          {
                            "action": "network:ReadPort",
                            "resource": "cc-api:network::1234567890:Port/*"
                          }
                        ],
                        "message": "Access denied",
                        "principalId": {
                          "id": "1234567890"
                        },
                        "stack": "Error: Access denied\n    at Object.module.exports [as error] ",
                        "status": 401,
                        "statusCode": 401
                      }
                    }
                  }
                }
              }
            },
            "description": "Unauthorized",
            "headers": {}
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "message": "No access-circuit information was found for the given port",
                        "status": 404,
                        "statusCode": 404
                      }
                    }
                  }
                }
              }
            },
            "description": "Not Found",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "",
        "operationId": "GetPortCircuitDetails",
        "summary": "Read port access circuit details"
      }
    },
    "/api/company/{companyName}/ports/{portId}/{action}(active|disable)": {
      "post": {
        "parameters": [
          {
            "description": "The username of the company to check the port for.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The port id.",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "portId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The action to take.",
            "in": "path",
            "example": "action(sendloa)",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "activeChangedAt": "2016-06-16T06:20:10.640Z",
                      "asn": {
                        "asn": "176251",
                        "createdAt": "2016-06-16T06:20:11.053Z",
                        "deleted": false,
                        "deletedAt": null,
                        "status": "VERIFIED",
                        "type": "ALLOCATED",
                        "updatedAt": "2016-06-16T06:20:11.053Z"
                      },
                      "capacity": {
                        "remaining": 900,
                        "total": 1000,
                        "utilised": 100
                      },
                      "company": {
                        "tags": [],
                        "avatar": null,
                        "avatarId": null,
                        "background": null,
                        "companies": null,
                        "company": {
                          "address": null,
                          "addresses": [],
                          "businessType": null,
                          "city": null,
                          "clientId": null,
                          "companySize": null,
                          "country": null,
                          "dateFounded": null,
                          "email": null,
                          "emailDomains": [],
                          "fax": null,
                          "first": null,
                          "industry": null,
                          "last": null,
                          "markets": {},
                          "phone": null,
                          "regionalInternetRegistry": null,
                          "state": null,
                          "website": null,
                          "zip": null
                        },
                        "createdAt": "2016-06-16T06:20:09.604Z",
                        "deleted": false,
                        "deletedAt": null,
                        "groups": null,
                        "headline": null,
                        "id": "5762451982894b9b1b1a5dbc",
                        "isSupport": false,
                        "isSynced": null,
                        "location": null,
                        "name": "corp",
                        "online": false,
                        "phone": null,
                        "social": null,
                        "stats": {
                          "articles": 0,
                          "events": 0,
                          "followers": 0,
                          "following": 0,
                          "interconnections": 0,
                          "members": 1,
                          "posts": 0,
                          "privateArticles": 0,
                          "privateEvents": 0,
                          "privatePosts": 0
                        },
                        "status": "ACTIVE",
                        "summary": null,
                        "type": "COMPANY",
                        "updatedAt": "2016-06-16T06:20:09.604Z",
                        "username": "corp",
                        "verified": false
                      },
                      "companyId": "5762451982894b9b1b1a5dbc",
                      "connections": [
                        {
                          "id": "5762451d82894b9b1b1a5dd2",
                          "name": "Sierra",
                          "status": "ACTIVE"
                        }
                      ],
                      "controllers": [
                        {
                          "activeChangedAt": "2016-06-16T06:20:11.458Z",
                          "asn": {
                            "asn": "54321",
                            "createdAt": "2016-06-16T06:20:11.460Z",
                            "deleted": false,
                            "deletedAt": null,
                            "status": "VERIFIED",
                            "type": "SYSTEM",
                            "updatedAt": "2016-06-16T06:20:11.460Z"
                          },
                          "createdAt": "2016-06-16T06:20:11.114Z",
                          "deleted": false,
                          "deletedAt": null,
                          "id": "5762451b82894b9b1b1a5dc6",
                          "ip": {
                            "ipv4": "198.51.100.1",
                            "ipv6": "2001:DB8::1111:1111:1111:1111"
                          },
                          "metro": {
                            "code": null,
                            "country": "USA",
                            "createdAt": "2016-02-12T09:01:33.840Z",
                            "deleted": false,
                            "deletedAt": null,
                            "description": null,
                            "id": "1232413986c08c061dd8c45f",
                            "logo": null,
                            "name": "SJC",
                            "ready": true,
                            "regionIds": [],
                            "updatedAt": "2016-02-12T09:01:33.840Z"
                          },
                          "metroId": "1232413986c08c061dd8c45f",
                          "name": "corp - Skyla",
                          "password": "",
                          "portIds": ["5762451a82894b9b1b1a5dc2"],
                          "status": "ACTIVE",
                          "type": "USER",
                          "updatedAt": "2016-06-16T06:20:11.462Z",
                          "vlan": 200
                        }
                      ],
                      "createdAt": "2016-06-16T06:20:10.029Z",
                      "dataCenterFacility": {
                        "tags": [],
                        "avatar": null,
                        "avatarId": null,
                        "background": null,
                        "companies": null,
                        "company": {
                          "address": null,
                          "addresses": [
                            {
                              "address": "11 Great Oaks Boulevard",
                              "city": "San Jose",
                              "country": "USA",
                              "email": "",
                              "geo": {
                                "coordinates": [-121.78322, 37.24162],
                                "type": "Point"
                              },
                              "phone": "",
                              "primary": true,
                              "state": "California",
                              "zip": "95119-1242"
                            }
                          ],
                          "businessType": null,
                          "city": null,
                          "clientId": null,
                          "companySize": null,
                          "country": null,
                          "dateFounded": null,
                          "email": null,
                          "emailDomains": [],
                          "fax": null,
                          "first": null,
                          "industry": null,
                          "last": null,
                          "markets": {},
                          "phone": null,
                          "regionalInternetRegistry": null,
                          "state": null,
                          "website": null,
                          "zip": null
                        },
                        "createdAt": "2015-11-04T06:07:12.785Z",
                        "dataCenterFacility": {
                          "id": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                          "metroId": "1232413986c08c061dd8c45f",
                          "ready": true,
                          "speeds": [],
                          "canBundleCrossConnect": true
                        },
                        "deleted": false,
                        "deletedAt": "1970-01-01T00:00:00.000Z",
                        "groups": null,
                        "headline": null,
                        "id": "5126c9f1111e15a24a066130",
                        "isSupport": false,
                        "isSynced": null,
                        "location": null,
                        "name": "Equinix - SV1",
                        "online": false,
                        "phone": null,
                        "social": null,
                        "stats": {
                          "articles": 0,
                          "events": 0,
                          "followers": 0,
                          "following": 0,
                          "interconnections": 0,
                          "members": 0,
                          "posts": 0,
                          "privateArticles": 0,
                          "privateEvents": 0,
                          "privatePosts": 0
                        },
                        "status": "ACTIVE",
                        "summary": null,
                        "type": "DATA_CENTER_FACILITY",
                        "updatedAt": "2015-11-04T06:07:13.430Z",
                        "username": "equinix-sv1",
                        "verified": true
                      },
                      "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                      "deleted": false,
                      "deletedAt": "1970-01-01T00:00:00.000Z",
                      "id": "5762451a82894b9b1b1a5dc2",
                      "ip": {
                        "ipv4": null,
                        "ipv6": null
                      },
                      "locationId": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                      "crossConnectId": "68696464-b2f7-4c90-a342-293f7385469a",
                      "metro": {
                        "code": null,
                        "country": "USA",
                        "createdAt": "2016-02-12T09:01:33.840Z",
                        "deleted": false,
                        "deletedAt": null,
                        "description": null,
                        "id": "1232413986c08c061dd8c45f",
                        "logo": null,
                        "name": "SJC",
                        "ready": true,
                        "regionIds": [],
                        "updatedAt": "2016-02-12T09:01:33.840Z"
                      },
                      "metroId": "1232413986c08c061dd8c45f",
                      "name": "Vicente",
                      "networkServiceProviderId": null,
                      "partner": {
                        "regionNames": [],
                        "type": "NONE"
                      },
                      "portId": null,
                      "singleService": false,
                      "speed": {
                        "name": "1000 Mbps",
                        "value": 1000
                      },
                      "status": "ACTIVE",
                      "type": "PHYSICAL",
                      "updatedAt": "2016-06-16T06:20:11.116Z",
                      "vlanRange": [
                        {
                          "from": 3600,
                          "to": 3699
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PortModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "",
        "operationId": "UpdatePortAction",
        "summary": "Perform a action on a port"
      }
    },
    "/api/company/{companyName}/ports/{portId}/utilization": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "description": "The username of the company to check the port for.",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "description": "The port id.",
            "example": "55767b5652a693344a015744",
            "name": "portId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "Unix timestamp for beginning of time window.",
            "example": "1459376516",
            "name": "start",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "Unix timestamp for end of time window.",
            "example": "1459376516",
            "name": "end",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "Set the resolution of response ('day' | 'hour' | 'minute'). Resolution defaults to minute if not passed.\nNote: As minute is the smallest resolution, it will not have `min/max` fields in the response.",
            "example": "day",
            "name": "resolution",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "portId": 120391239323,
                      "results": [
                        {
                          "rxAverage": 1,
                          "rxMax": 2,
                          "rxMin": 0.005,
                          "time": 49303945838,
                          "txAverage": 1,
                          "txMax": 2,
                          "txMin": 0.005
                        }
                      ],
                      "unit": "Mbps"
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "Obtain utilization information about a specific port using a specific time period and preferred resolution.\n\nUtilization is based on connections attached to a port. Incoming connections (connections initiated by someone else that you accepted) are not included in utilization, but outgoing connections (connections you initiated) are included. You may not create an outgoing connection request that exceeds your port utilization.",
        "operationId": "GetPortUtilization",
        "summary": "Get port utilization data"
      }
    },
    "/api/company/{companyName}/ports/{portId}/vlan": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "description": "The username of the company to check the port for.",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "description": "The port id.",
            "example": "55767b5652a693344a015744",
            "name": "portId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "Retrieve available VLANs? Default: true.",
            "example": true,
            "name": "detailed",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "The service type to retrieve the available VLANs for. Accepted values are ‘connection’ and ‘gia’. Default: ‘connection’.",
            "example": "connection",
            "name": "service",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "id": 120391239323,
                      "available": [100, 200, 300, 400],
                      "ranges": [
                        {
                          "start": 100
                        },
                        {
                          "end": 1000
                        }
                      ],
                      "unit": "Mbps"
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "Return the vlan information around the given port",
        "operationId": "GetPortVlanInfo",
        "summary": "Get port VLAN info"
      }
    },
    "/api/directConnectPartner/{username}/regions": {
      "get": {
        "parameters": [
          {
            "description": "The username of the Direct Connect Partner (DCP) for which to retrieve the ports/regionIds.",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string",
              "example": "amazon"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "results": [
                        {
                          "id": "579ec72fa21a602e46f32c30",
                          "companyId": "579ec72da21a602e46f32c29",
                          "deviceId": "e8d1ab56-74ff-401a-8379-760a018178c1",
                          "portId": null,
                          "name": null,
                          "speed": 1000,
                          "locationId": "b3f5ac21-fec1-4418-9e1a-709d48da59fa",
                          "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                          "networkServiceProviderId": null,
                          "metroId": "d466b388d3e9ee0a92177910",
                          "status": "ACTIVE",
                          "type": "DCP",
                          "partner": {
                            "type": "AWS",
                            "regionName": "us-west-1",
                            "connectionSpeeds": [
                              {
                                "value": 50,
                                "type": "AUTOMATIC"
                              },
                              {
                                "value": 100,
                                "type": "AUTOMATIC"
                              },
                              {
                                "value": 200,
                                "type": "AUTOMATIC"
                              },
                              {
                                "value": 300,
                                "type": "AUTOMATIC"
                              },
                              {
                                "value": 400,
                                "type": "AUTOMATIC"
                              },
                              {
                                "value": 500,
                                "type": "AUTOMATIC"
                              },
                              {
                                "value": 1000,
                                "type": "MANUAL"
                              },
                              {
                                "value": 10000,
                                "type": "MANUAL"
                              }
                            ]
                          },
                          "asnId": null,
                          "ip": {
                            "ipv4": null,
                            "ipv6": null
                          },
                          "activeChangedAt": null,
                          "updatedAt": "2016-08-01T03:51:11.554Z",
                          "createdAt": "2016-08-01T03:51:11.554Z",
                          "deleted": false,
                          "deletedAt": "1970-01-01T00:00:00.000Z"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PortModel"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "DCP Partner | Username\n--:| ----\nAWS | amazon\nAZURE |  azure\nGCE | google_cloud\nTENCENT | tencent-cloud\nALICLOUD | alibaba_cloud",
        "operationId": "GetDCPPortsAndRegions",
        "summary": "Get all ports/regions for DCP"
      }
    },
    "/api/directConnectPartner/{username}/addons": {
      "get": {
        "parameters": [
          {
            "description": "The username of the Direct Connect Partner (DCP) for which to retrieve the add-ons.",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string",
              "example": "amazon"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "results": [
                        {
                          "createdAt": "2016-08-23T05:48:34.022Z",
                          "updatedAt": "2016-08-23T05:48:34.022Z",
                          "value": 1000,
                          "entitlementType": null,
                          "destCompanyId": "57bbe3b04ae42f987d9668de",
                          "destPortId": "57bbe3b04ae42f987d9668df",
                          "floorMonthly": 0,
                          "monthly": 0,
                          "currency": "USD",
                          "companyIds": [],
                          "visible": false,
                          "regionIds": [],
                          "tags": [],
                          "displayOrder": 0,
                          "displayTemplate": "Unnamed",
                          "name": "Global Connection",
                          "id": "57bbe3b20e4a257d986b2d74"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "",
        "operationId": "GetAllDCPAddons",
        "summary": "Get all DCP add-ons"
      }
    },
    "/api/company/{companyName}/ports/{portId}/connections": {
      "get": {
        "parameters": [
          {
            "description": "The username of the company to check the port for.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The port id.",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "portId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "",
        "operationId": "get-port-connections",
        "summary": "Get all connections for a specified port"
      }
    },
    "/v2/edge/countries": {
      "get": {
        "parameters": [
          {
            "description": "",
            "example": "1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "example": "20",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string"
                          },
                          "countryIso": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "string"
                    },
                    "size": {
                      "type": "string"
                    },
                    "total": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "country": "USA",
                      "countryIso": "USA",
                      "provider": "xyz"
                    }
                  ],
                  "page": 1,
                  "size": 1,
                  "total": 1
                }
              }
            }
          },
          "500": {
            "description": "External server unhandled error",
            "headers": {}
          }
        },
        "tags": ["Edge Console"],
        "description": "Get countries list supported by Edge. ",
        "summary": "Countries"
      }
    },
    "/v2/edge/bandwidth": {
      "get": {
        "parameters": [
          {
            "description": "",
            "example": "1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "example": "20",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "bandwidth": {
                            "type": "number"
                          },
                          "unit": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "string"
                    },
                    "size": {
                      "type": "string"
                    },
                    "total": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "12dexample444-41122-3",
                      "bandwidth": 1000,
                      "unit": "Mbps"
                    }
                  ],
                  "page": 1,
                  "size": 1,
                  "total": 1
                }
              }
            }
          },
          "500": {
            "description": "External server unhandled error",
            "headers": {}
          }
        },
        "tags": ["Edge Console"],
        "description": "Get bandwidth list supported by Edge. ",
        "summary": "Bandwidth"
      }
    },
    "/v2/edge/contract-term": {
      "get": {
        "parameters": [
          {
            "description": "",
            "example": "1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "example": "20",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "contractTerm": {
                            "type": "number"
                          },
                          "unit": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "string"
                    },
                    "size": {
                      "type": "string"
                    },
                    "total": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "contractTerm": 12,
                      "id": "643a2211-a88f-40ef-a22d-56ffbfd111d",
                      "unit": "month"
                    }
                  ],
                  "page": 1,
                  "size": 1,
                  "total": 1
                }
              }
            }
          },
          "500": {
            "description": "External server unhandled error",
            "headers": {}
          }
        },
        "tags": ["Edge Console"],
        "description": "Get contract term list supported by Edge. ",
        "summary": "Contract term"
      }
    },
    "/api/company/{companyName}/ports/edge-orders": {
      "post": {
        "parameters": [
          {
            "description": "Username of the company.",
            "in": "path",
            "example": "regis",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdgePayloadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdgeOrderResponse"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "examples": {
                  "quote-key": {
                    "summary": "invalid quote key",
                    "value": {
                      "code": 400,
                      "message": "Invalid quote key or quote details not found"
                    }
                  },
                  "edge-invalid-shield-port-id": {
                    "summary": "invalid shield port id",
                    "value": {
                      "code": 400,
                      "message": "Cannot find DCF for given port id"
                    }
                  },
                  "company-not-active": {
                    "summary": "company is not active or not found",
                    "value": {
                      "code": 400,
                      "message": "A company can not be found with the given id"
                    }
                  },
                  "user-not-verified": {
                    "summary": "user/company not verified",
                    "value": {
                      "code": 400,
                      "message": "Your company has not yet been verified to use %{payment} payment method, If you wish to order %{productType}, please get verified first."
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Error",
            "content": {
              "application/json": {
                "examples": {
                  "edge-feature-flag": {
                    "summary": "feature flag not enabled",
                    "value": {
                      "code": 404,
                      "message": "An edge order is not allowed"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            },
            "headers": {}
          }
        },
        "tags": ["Edge Console"],
        "description": "An Edge port order is created in a 'dataCenterFacility'.\n\nThe 'paymentType' field is required and needs to be 'invoice'.\n\nWhen the port is provisioned, the order will change to \"done\" status and a new port will be created and activated.\n\nYou can create an order from Draft, you need to then pass draftOrderId in edgePayload in order to delete the draft automatically after creating the order.",
        "operationId": "CreateEdgePortOrder",
        "summary": "Order an Edge port"
      },
      "get": {
        "parameters": [
          {
            "description": "Username of the company.",
            "in": "path",
            "example": "regis",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EdgeOrderResponse"
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Edge Console"],
        "description": "V1 of the Edge port / orders listing. It can be replaced by `[Orders / Ports / Drafts] /v2/edge-ports/orders`",
        "operationId": "GetEdgePortOrders",
        "summary": "Edge port / orders"
      }
    },
    "/v2/edge/price": {
      "post": {
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdgeOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdgePriceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - please check if env vars like SEEKER_X_API_KEY | SEEKER_JWT_TOKEN | SEEKER_BASE_URL are set",
            "headers": {}
          },
          "404": {
            "description": "Seeker server (external provider) quote not found",
            "headers": {}
          },
          "500": {
            "description": "Seeker server (external provider) unhandled error",
            "headers": {}
          }
        },
        "tags": ["Edge Console"],
        "description": "Find pricing for Edge Order. ",
        "summary": "Pricing"
      }
    },
    "/v2/edge-ports/locations": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dcfId": {
                        "type": "string"
                      },
                      "dcfUsername": {
                        "type": "string"
                      },
                      "metroId": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "countryDisplayName": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "dcfId": "6621d8364062f311f901",
                    "dcfUsername": "nigeria_name",
                    "metroId": "66215c347611155fa0c2c",
                    "city": "ABC",
                    "country": "NG",
                    "countryDisplayName": "Nigeria"
                  },
                  {
                    "dcfId": "63ce2d3d3333310015fa50ff",
                    "dcfUsername": "dcf_name",
                    "metroId": "77d9f1fbbc111113cddb6d1",
                    "city": "Hong Kong",
                    "country": "HK",
                    "countryDisplayName": "Display name"
                  }
                ]
              }
            }
          }
        },
        "tags": ["Edge Console"],
        "description": "Gets the list of available locations (city and country) for Edge used in pricing calculator.",
        "summary": "Locations"
      }
    },
    "/v2/edge-ports/orders": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "portName": {
                        "type": "string"
                      },
                      "speed": {
                        "type": "number"
                      },
                      "companyId": {
                        "type": "string"
                      },
                      "edgePayload": {
                        "type": "object",
                        "description": "See in examples, it's different depending on objectType"
                      },
                      "deleted": {
                        "type": "boolean"
                      },
                      "deletedAt": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "draft",
                          "reserved",
                          "created",
                          "processing",
                          "pending",
                          "allocated",
                          "loa_sent",
                          "setup_xc",
                          "done",
                          "cancelling",
                          "cancelled",
                          "error"
                        ]
                      },
                      "objectType": {
                        "type": "string",
                        "enum": ["PORT", "ORDER", "DRAFT"]
                      },
                      "daysUntilDelete": {
                        "type": "number"
                      }
                    }
                  }
                },
                "examples": {
                  "draft": {
                    "summary": "Draft model",
                    "value": {
                      "id": "66111622acb43722f8f58a8f",
                      "speed": 500,
                      "edgePayload": {
                        "addressResult": {
                          "city": "Mount Gravatt",
                          "country": {
                            "iso": "AU,",
                            "name": "Australia"
                          },
                          "formattedAddress": "Example address, Australia",
                          "latitude": -27.5369265,
                          "longitude": 153.0786493
                        },
                        "data": [
                          {
                            "bandwidth": 500,
                            "bandwidthUnit": "Mbps",
                            "contractTerm": 12,
                            "contractTermUnit": "month",
                            "interval": "14 weeks",
                            "lastMileProvider": "Not Provided",
                            "lastMileProviderKey": "NOT_PROVIDED",
                            "mrc": 1000.84,
                            "mrcCurrency": "USD",
                            "nrc": 3765.33,
                            "nrcCurrency": "USD",
                            "quoteKey": "d40d80222-833b-4093-9217-74a68b751114",
                            "shieldPortId": "63d8b0aa2222f50015a80d6c",
                            "tcv": 15775.21,
                            "tcvCurrency": "USD",
                            "trc": 12010.08,
                            "trcCurrency": "USD",
                            "vendorName": "Telstra",
                            "metro": {
                              "id": "77d9f11bcaa222f3cddb6d1",
                              "name": "Hong Kong",
                              "country": "hk"
                            }
                          }
                        ],
                        "uuid": "e4a84c7c-2291-4b29-9f63-a250293332cb,",
                        "selectedSolutionQuoteKey": "d40d222-833b-4333-9217-74a611175a6c4,",
                        "message": "Draft order 2024-05-08,",
                        "country": {
                          "iso": "AU,",
                          "name": "Australia"
                        },
                        "formattedAddress": "Example address, Australia,",
                        "latitude": "-27.5369265,",
                        "longitude": "153.0786493,",
                        "bandwidth": "500,",
                        "bandwidthUnit": "Mbps,",
                        "contractTerm": "12,",
                        "contractTermUnit": "month,",
                        "interval": "14 weeks,",
                        "lastMileProvider": "Not Provided,",
                        "lastMileProviderKey": "NOT_PROVIDED,",
                        "mrc": "1000.84,",
                        "mrcCurrency": "USD,",
                        "nrc": "3765.33,",
                        "nrcCurrency": "USD,",
                        "quoteKey": "d42280c8-223b-4093-9217-74a68111a6c4,",
                        "shieldPortId": "63d8b22222bf50015a11d6c,",
                        "tcv": "15775.21,",
                        "tcvCurrency": "USD,",
                        "trc": "12010.08,",
                        "trcCurrency": "USD,",
                        "vendorName": "Telstra,",
                        "metro": {
                          "id": "77d1111bcaa90622cddb6d1,",
                          "name": "Hong Kong,",
                          "country": "hk"
                        },
                        "siteContacts": {
                          "primarySiteContactName": "1412",
                          "primarySiteContactPhone": "1412",
                          "primarySiteContactEmail": "1412",
                          "primarySitePhonePrefix": "+61,",
                          "secondarySiteContactName": "1412",
                          "secondarySiteContactPhone": "1412",
                          "secondarySiteContactEmail": "1412",
                          "secondarySitePhonePrefix": "1412",
                          "demarcationPoint": "1412",
                          "siteAccess": "1412",
                          "interfaceType": null
                        }
                      },
                      "companyId": "612f11859195c70015229bc",
                      "createdAt": "2024-05-08T09:30:10.947Z",
                      "updatedAt": "2024-05-08T09:30:10.947Z",
                      "portName": "Draft order 2024-05-08",
                      "objectType": "DRAFT ORDER",
                      "status": "DRAFT",
                      "daysUntilDelete": 24
                    }
                  },
                  "order": {
                    "summary": "Order model",
                    "value": {
                      "id": "642c34272922f00154cff333,",
                      "portName": "Port to test REG-476,",
                      "speed": "100,",
                      "edgePayload": {
                        "country": {
                          "name": "Germany",
                          "iso": "DE"
                        },
                        "formattedAddress": "Example address, Germany,",
                        "latitude": "50.120753,",
                        "longitude": "8.6763165,",
                        "quoteKey": "f1802224-c434-4740-447f-74252296e11c,",
                        "quoteValidityPeriod": "30,",
                        "quoteValidityPeriodUnit": "DAY,",
                        "tcv": "7089.92,",
                        "tcvCurrency": "USD,",
                        "mrc": "386.69,",
                        "mrcCurrency": "USD,",
                        "nrc": "2449.77,",
                        "nrcCurrency": "USD,",
                        "bandwidth": "100,",
                        "bandwidthUnit": "Mbps,",
                        "contractTerm": "12,",
                        "contractTermUnit": "month,",
                        "interval": "18 weeks,",
                        "shieldPortId": "63d8211a1222150015a80d6c,",
                        "siteContacts": {
                          "primarySiteContactName": "asdasdasd,",
                          "primarySiteContactPhone": "432,",
                          "primarySiteContactEmail": "konrad.rafalko@example.com,",
                          "primarySitePhonePrefix": "+33,",
                          "secondarySiteContactName": "da,",
                          "secondarySiteContactPhone": "da,",
                          "secondarySiteContactEmail": "dad,",
                          "secondarySitePhonePrefix": "da,",
                          "demarcationPoint": "re,",
                          "siteAccess": "dsf,",
                          "interfaceType": null
                        },
                        "quoteId": "QT-2023022210933-168137411274-1,",
                        "deviceId": "sw01.frf08: TenG5/8",
                        "nniVendorCircuitId": "FRA/FRA/LE-542635,",
                        "technology": "Switched Ethernet,",
                        "vat": "0,",
                        "vendorPriceOrder": "1,",
                        "quoteClass": "Orderable,",
                        "vendorOriginMrc": "325.00,",
                        "vendorOriginMrcWithVat": "325.00,",
                        "vendorOriginMrcCurrency": "EUR,",
                        "vendorOriginNrc": "2059.00,",
                        "vendorOriginNrcWithVat": "2059.00,",
                        "vendorOriginNrcCurrency": "EUR,",
                        "vendorOriginTcv": "5959.00,",
                        "vendorOriginTcvWithVat": "5959.00,",
                        "vendorOriginTcvCurrency": "EUR,",
                        "rateSource": "API,",
                        "popCode": "FRF08,",
                        "vendorName": "Colt (Europe),",
                        "vendorCode": "PCLT,",
                        "pccwgVendorCode": "VN3949,",
                        "quoteClassLevel": "1,",
                        "product": "SES,",
                        "readyServiceDate": "TBD,",
                        "margin": "0.1,",
                        "carrier": "Colt (Europe)"
                      },
                      "companyId": "644f65222194470015f6111c,",
                      "deleted": "false,",
                      "deletedAt": "null,",
                      "createdAt": "2023-04-13T08:54:26.103Z,",
                      "updatedAt": "2023-04-13T08:54:26.777Z,",
                      "status": "processing,",
                      "objectType": "ORDER"
                    }
                  },
                  "port": {
                    "summary": "Port model",
                    "value": {
                      "id": "622d566ec2224cad3595114",
                      "name": "TT_Edge_2_22_09",
                      "speed": 100,
                      "edgePayload": {
                        "country": {
                          "iso": "CA",
                          "name": "Canada"
                        },
                        "formattedAddress": "Example name, Canada",
                        "latitude": 43.641797,
                        "longitude": -79.381435,
                        "bandwidth": 100,
                        "bandwidthUnit": "Mbps",
                        "contractTerm": 12,
                        "contractTermUnit": "month",
                        "interval": "11 weeks",
                        "lastMileProvider": "Not Provided",
                        "lastMileProviderKey": "NOT_PROVIDED",
                        "mrc": 697.33,
                        "mrcCurrency": "USD",
                        "nrc": 957.86,
                        "nrcCurrency": "USD",
                        "quoteKey": "ffc1331b-0537-4ec3-9cef-34fdd5f54454",
                        "quoteValidityPeriod": 30,
                        "quoteValidityPeriodUnit": "DAY",
                        "shieldPortId": "22d8b0a111f50015a80d6c",
                        "tcv": 9325.65,
                        "tcvCurrency": "USD",
                        "vendorName": "Telus",
                        "metro": {
                          "id": "77d9f1fbbc11112f3cddb6d1",
                          "name": "Hong Kong",
                          "country": "hk"
                        },
                        "siteContacts": {
                          "primarySiteContactName": "Test",
                          "primarySiteContactPhone": 122122122,
                          "primarySiteContactEmail": "tomasz.tomecki@example.com",
                          "primarySitePhonePrefix": "+1 / CA",
                          "secondarySiteContactName": null,
                          "secondarySiteContactPhone": null,
                          "secondarySiteContactEmail": null,
                          "secondarySitePhonePrefix": null,
                          "demarcationPoint": "wwwww",
                          "siteAccess": "eeeeee",
                          "interfaceType": null
                        },
                        "carrier": "Telus",
                        "contentionRatio": null,
                        "deviceId": "VAR03.SEA21 GigabitEthernet1/1/0",
                        "jumboFrame": "Not supported",
                        "margin": 0.1,
                        "nniVendorCircuitId": "PCCWG.ST2.1",
                        "pccwgVendorCode": "VN2542",
                        "physicalInterface": null,
                        "popCode": "SEA01",
                        "product": "SES",
                        "quoteClass": "Orderable",
                        "quoteClassLevel": 1,
                        "quoteId": "QUOT20222922-4373",
                        "rateSource": "API",
                        "readyServiceDate": "TBD",
                        "serviceDIA": null,
                        "technology": "Switched Ethernet",
                        "vat": 15,
                        "vendorCode": "PTLS",
                        "vendorOriginMrc": 728,
                        "vendorOriginMrcCurrency": "CAD",
                        "vendorOriginMrcWithVat": 837.2,
                        "vendorOriginNrc": 1000,
                        "vendorOriginNrcCurrency": "CAD",
                        "vendorOriginNrcWithVat": 1150,
                        "vendorOriginTcv": 9736,
                        "vendorOriginTcvCurrency": "CAD",
                        "vendorOriginTcvWithVat": 11196.4,
                        "vendorPriceOrder": 1,
                        "addressResult": {
                          "city": "TORONTO",
                          "country": {
                            "iso": "CA",
                            "name": "Canada"
                          },
                          "formattedAddress": "Example name, Canada",
                          "latitude": 43.641797,
                          "longitude": -79.381435
                        },
                        "VLANRange": "10-20"
                      },
                      "companyId": "62ff3359195c72225f6e9bc",
                      "deleted": false,
                      "deletedAt": null,
                      "createdAt": "2023-09-22T08:55:10.081Z",
                      "updatedAt": "2023-09-22T08:55:10.081Z",
                      "status": "ACTIVE",
                      "objectType": "PORT",
                      "portName": "TT_Edge_2_22_09"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Edge Console"],
        "description": "V2 endpoint for getting edge draft/order/port list.  It can replace `[Edge port / orders ] /api/company/{companyName}/ports/edge-orders`.",
        "summary": "Orders / Ports / Drafts"
      }
    },
    "/v2/edge-ports/calculate-price": {
      "get": {
        "parameters": [
          {
            "description": "The id (quoteKey) for an external pricing result.",
            "example": "d40d80c8-833b-4093-9217-74a68b75a6c4",
            "in": "query",
            "name": "quoteKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Discount code to lower the price (if valid).",
            "example": "EDGE20",
            "in": "query",
            "name": "discountCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "formatted-address": {
                      "type": "string"
                    },
                    "addressResult": {
                      "type": "object",
                      "properties": {
                        "formattedAddress": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "object",
                          "properties": {
                            "iso": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "latitude": {
                          "type": "string"
                        },
                        "longitude": {
                          "type": "string"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "quoteKey": {
                            "type": "string",
                            "description": "The id (quoteKey) for an external pricing result."
                          },
                          "mrc": {
                            "type": "string",
                            "description": "Monthly recurring cost value"
                          },
                          "mrcCurrency": {
                            "type": "string",
                            "description": "Monthly recurring cost currency"
                          },
                          "trc": {
                            "type": "string",
                            "description": "Total recurring cost value"
                          },
                          "discountValue": {
                            "type": "string",
                            "description": "Total discounted value from original quote"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "formatted-address": "Example address, Hong Kong",
                  "addressResult": {
                    "city": "Kwun Tong",
                    "country": {
                      "iso": "HK",
                      "name": "Hong Kong"
                    },
                    "formattedAddress": "Example address, Hong Kong",
                    "latitude": 33.313904,
                    "longitude": 104.217732
                  },
                  "data": [
                    {
                      "quoteKey": "0be668d8-1624-47f1-aea0-e383c26ec63c",
                      "mrc": 194.18,
                      "mrcCurrency": "USD",
                      "trc": 2330.16,
                      "discountValue": "50%"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": {
                        "message": "The discount code is invalid or not found.",
                        "status": 404,
                        "statusCode": 404
                      }
                    }
                  }
                }
              }
            },
            "description": "Not Found",
            "headers": {}
          }
        },
        "tags": ["Edge Console"],
        "description": "Calculate Edge price by discount code from the original price calculated by the original quote. The quoteKey need to be valid, otherwise it won't be possible to return any result.",
        "summary": "Calculate price (discount)"
      }
    },
    "/v2/edge-orders/send-select": {
      "post": {
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdgeEnquiryParams"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          }
        },
        "tags": ["Edge Console"],
        "description": "Sends statistics for 10G enquiry. Used only when client asks for 10Gbps offer.",
        "summary": "Send 10G statistics"
      }
    },
    "/v2/edge-orders/send-enquiry": {
      "post": {
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdgeEnquiryParams"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          }
        },
        "tags": ["Edge Console"],
        "description": "Sends email to customer support for 10G enquiry. Used only when client asks for 10Gbps offer.",
        "summary": "Send 10G enquiry email"
      }
    },
    "/v2/api/draft/orders": {
      "post": {
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEdgeDraft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "speed": {
                      "type": "number"
                    },
                    "deleteIn": {
                      "type": "number"
                    },
                    "edgePayload": {
                      "$ref": "#/components/schemas/EdgePayloadDraft"
                    },
                    "companyId": {
                      "type": "string"
                    },
                    "deleted": {
                      "type": "boolean"
                    },
                    "deletedAt": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Edge Console"],
        "description": "The endpoint allows the creation of an edge draft order. Draft orders are used to temporarily store a user's partial order form data. This data is stored for 30 days. The data in the edgePayload is later used by the frontend application to recreate the original order form. After creating the record, the user can resume their form progress and continue ordering the Edge port. Draft orders are displayed along with orders and ports.",
        "summary": "Create Edge Draft Order"
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "portName": {
                        "type": "string",
                        "description": "Copy of name, required by frontend for data consistency"
                      },
                      "speed": {
                        "type": "number"
                      },
                      "edgePayload": {
                        "$ref": "#/components/schemas/EdgePayloadDraft"
                      },
                      "companyId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "objectType": {
                        "type": "string",
                        "default": "DRAFT ORDER"
                      },
                      "status": {
                        "type": "string",
                        "default": "DRAFT"
                      },
                      "daysUntilDelete": {
                        "type": "number",
                        "default": 30
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "333db890e522e19af9631185",
                    "name": "draftOrder 30 days",
                    "portName": "draftOrder 30 days",
                    "speed": 10,
                    "edgePayload": {
                      "addressResult": {
                        "city": "London",
                        "country": {
                          "iso": "GB",
                          "name": "United Kingdom"
                        },
                        "formattedAddress": "Example address United Kingdom",
                        "latitude": 59.497686,
                        "longitude": -0.426045
                      },
                      "data": [
                        {
                          "bandwidth": 200,
                          "bandwidthUnit": "Mbps",
                          "contractTerm": 36,
                          "contractTermUnit": "month",
                          "interval": "13 weeks",
                          "lastMileProvider": "Not Provided",
                          "lastMileProviderKey": "NOT_PROVIDED",
                          "mrc": 298.61,
                          "mrcCurrency": "USD",
                          "nrc": 0,
                          "nrcCurrency": "USD",
                          "quoteKey": "f127444b-eb70-46f4-bf1d-e54155356c32",
                          "shieldPortId": "63110aa122bf50015a80d6c",
                          "tcv": 10749.54,
                          "tcvCurrency": "USD",
                          "trc": 10749.96,
                          "trcCurrency": "USD",
                          "vendorName": "NEOS",
                          "metro": {
                            "id": "77d9f1f11caa906f3cd556d1",
                            "name": "Hong Kong",
                            "country": "hk"
                          }
                        }
                      ],
                      "uuid": "36a20933-caff-4796-880e-d113bd7ab477",
                      "selectedSolutionQuoteKey": "f127a24b-eb70-46f4-bf1d-e5413a356c32",
                      "postCode": "123131",
                      "siteContacts": {
                        "primarySiteContactName": "1 teScik243",
                        "primarySiteContactPhone": "3223423 1",
                        "primarySiteContactEmail": "45223423@34.pl 12",
                        "primarySitePhonePrefix": 44,
                        "secondarySiteContactName": "name",
                        "secondarySiteContactPhone": 44,
                        "secondarySiteContactEmail": "23425634@#4.pl",
                        "secondarySitePhonePrefix": 33,
                        "demarcationPoint": 645645,
                        "siteAccess": 764,
                        "interfaceType": 4784
                      },
                      "orderStep": "INSTALLATION_DETAILS",
                      "message": "Test v2",
                      "draftOrderId": "22433f99112f014298447060",
                      "country": {
                        "iso": "GB",
                        "name": "United Kingdom"
                      },
                      "formattedAddress": "Example address United Kingdom",
                      "latitude": 59.497686,
                      "longitude": -0.426045,
                      "bandwidth": 200,
                      "bandwidthUnit": "Mbps",
                      "contractTerm": 36,
                      "contractTermUnit": "month",
                      "interval": "13 weeks",
                      "lastMileProvider": "Not Provided",
                      "lastMileProviderKey": "NOT_PROVIDED",
                      "mrc": 298.61,
                      "mrcCurrency": "USD",
                      "nrc": 0,
                      "nrcCurrency": "USD",
                      "quoteKey": "f127a112b-eb70-462-bf12-e5413112c32",
                      "shieldPortId": "63d8b011122bf5001110d64",
                      "tcv": 10749.54,
                      "tcvCurrency": "USD",
                      "trc": 10749.96,
                      "trcCurrency": "USD",
                      "vendorName": "NEOS",
                      "metro": {
                        "id": "77d9f1fbbcaa906f3cddb6d1",
                        "name": "Hong Kong",
                        "country": "hk"
                      }
                    },
                    "companyId": "11a24113312644b44f1228",
                    "createdAt": "2024-05-22T09:19:12.589Z",
                    "updatedAt": "2024-05-22T09:19:12.589Z",
                    "objectType": "DRAFT ORDER",
                    "status": "DRAFT",
                    "daysUntilDelete": 30
                  }
                ]
              }
            }
          }
        },
        "tags": ["Edge Console"],
        "description": "Get list of edge draft orders. Only DraftOrder model object will be returned, with the deleteIn < 30 days. Any older record will not be returned.",
        "summary": "Get Edge Draft Orders"
      }
    },
    "/v2/api/draft/orders/{draftOrderId}": {
      "patch": {
        "parameters": [
          {
            "description": "The id of the draft order",
            "in": "path",
            "name": "draftOrderId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEdgeDraft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "speed": {
                      "type": "number"
                    },
                    "deleteIn": {
                      "type": "number"
                    },
                    "edgePayload": {
                      "$ref": "#/components/schemas/EdgePayloadDraft"
                    },
                    "companyId": {
                      "type": "string"
                    },
                    "deleted": {
                      "type": "boolean"
                    },
                    "deletedAt": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Edge Console"],
        "description": "Update edge draft order",
        "summary": "Update Edge Draft Order"
      },
      "delete": {
        "parameters": [
          {
            "description": "The id of the draft order",
            "in": "path",
            "name": "draftOrderId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          }
        },
        "tags": ["Edge Console"],
        "description": "Deletes a draft order given its ID.",
        "summary": "Delete Edge Draft Order"
      }
    },
    "/api/company/{username}/ports/entitlement": {
      "get": {
        "parameters": [
          {
            "description": "The username of the company to retrieve the ports and entitlement details of.",
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Acme"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "subscriptions": null,
                        "subscriptionLength": 1,
                        "subscriptionLengthUnit": "y",
                        "itemCollectionType": "port",
                        "id": "5c07767990a74879f2cf8cf4",
                        "userId": "5c07766b3a4c3579f27a4553",
                        "bundleId": "5c07767990a74879f2cf8cf1",
                        "deletedAt": null,
                        "createdAt": "2018-12-05T06:55:53.797Z",
                        "updatedAt": "2018-12-05T06:55:53.797Z",
                        "itemIds": ["57e0aba00956ad107191328c"]
                      },
                      {
                        "entitlement": {
                          "57e0aba00956ad107191328c": {
                            "portSpeed": {
                              "used": null,
                              "available": null
                            },
                            "maxControllerType": {
                              "used": "REGIONAL",
                              "available": null
                            },
                            "maxControllers": {
                              "used": 0,
                              "available": null
                            }
                          },
                          "57e0aba10956ad1071913290": {
                            "portSpeed": {
                              "used": null,
                              "available": null
                            },
                            "maxControllerType": {
                              "used": null,
                              "available": null
                            },
                            "maxControllers": {
                              "used": 0,
                              "available": null
                            },
                            "cdrGlobal": {
                              "000000000000000000000000-111111111111111111111111": {
                                "name": "US-London",
                                "srcRegionId": "000000000000000000000000",
                                "destRegionId": "111111111111111111111111",
                                "used": 0,
                                "available": null
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Entitlements"],
        "description": "Get all company plans and entitlements",
        "operationId": "GetPlansAndEntitlements",
        "summary": "Get all plans and entitlements"
      }
    },
    "/api/company/{username}/ports/{portId}/entitlement": {
      "get": {
        "parameters": [
          {
            "description": "The username of the company.",
            "in": "path",
            "example": "company_co",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The port ID.",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "portId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Entitlements"],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "subscriptions": [],
                      "entitlement": {
                        "portSpeed": {
                          "used": null,
                          "available": null
                        },
                        "maxControllerType": {
                          "used": "REGIONAL",
                          "available": null
                        },
                        "maxControllers": {
                          "used": 0,
                          "available": null
                        },
                        "cdrGlobal": {
                          "000000000000000000000000-111111111111111111111111": {
                            "name": "US-London",
                            "srcRegionId": "000000000000000000000000",
                            "destRegionId": "111111111111111111111111",
                            "used": 0,
                            "available": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get specific plan and entitlement details.",
        "operationId": "GetPlanAndEntitlement",
        "summary": "Get plan and entitlement details"
      }
    },
    "/api/v2/company/{username}/connections/layer2": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "The username of the company creating the connection.",
            "example": "acme",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLayer2ConnectionSchema"
              },
              "example": {
                "type": "LAYER2",
                "name": "my new connection",
                "portId": "123",
                "speed": 1000,
                "paymentType": "invoice",
                "duration": 1,
                "durationUnit": "m",
                "destPortId": "d466b388d3e9ee0a92177910",
                "destCompany": "companyusername"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                },
                "examples": {
                  "PAYG-example": {
                    "summary": "PAYG example",
                    "value": {
                      "id": "58afc0499430ab7f3666b990",
                      "type": "LAYER2",
                      "status": "CREATING",
                      "srcRegionId": "236107000000000000000001",
                      "destRegionId": "236107000000000000000001",
                      "updatedAt": "2017-02-24T05:10:44.942Z",
                      "createdAt": "2017-02-24T05:10:33.807Z",
                      "speed": {
                        "value": 1000,
                        "name": "1000 Mbps"
                      },
                      "subconnections": [],
                      "vlan": {
                        "id": null,
                        "service": null,
                        "customer": []
                      },
                      "name": "my new connection",
                      "cdrBillingType": "METRO",
                      "payg": true,
                      "billingType": ["PAYG"],
                      "classOfService": "BRONZE"
                    }
                  },
                  "Plan-example": {
                    "summary": "Plan example",
                    "value": {
                      "id": "58afc0499430ab7f3666b990",
                      "name": "my new connection",
                      "status": "CREATING",
                      "type": "LAYER2",
                      "speed": {
                        "value": 1000,
                        "name": "1000 Mbps"
                      },
                      "srcRegionId": "236107000000000000000001",
                      "destRegionId": "236107000000000000000001",
                      "updatedAt": "2017-02-24T05:10:44.942Z",
                      "createdAt": "2017-02-24T05:10:33.807Z"
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "summary": "Create a Layer 2 connection request",
        "operationId": "create-layer2-connection-request",
        "description": "\nCreate a Layer 2 connection request to a specified destination company. Layer 2 connections require a source port ID and requested metro.\n* You may not create an outgoing connection request that exceeds your port utilization or plan entitlement.\n* Both parties must approve a connection before it is activated. When either party makes a billing or capacity change, the other party must approve the connection using the approve endpoint.\n* The 'paymentType' can only be 'invoice'. A 'paymentType' of 'creditcard' is only supported via the Console Connect web application.\n* For pay-as-you-go connections where paymentType is 'creditcard', `paymentTransactionId`, duration and evergreen options must be provided in the request.\n* If paymentType is 'invoice', 'destDcf', 'duration' and 'durationUnit' should be provided."
      }
    },
    "/api/v2/company/{username}/connections/{connectionId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "The username of the company creating the connection.",
            "required": true,
            "example": "acme",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "connectionId",
            "description": "The connection id",
            "required": true,
            "example": "55783e39519d254d36f6126e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                },
                "examples": {
                  "Plan-example": {
                    "summary": "Plan example",
                    "value": {
                      "id": "58afc0499430ab7f3666b990",
                      "name": "my connection",
                      "status": "ACTIVE",
                      "type": "LAYER2",
                      "speed": {
                        "value": 1000,
                        "name": "1000 Mbps"
                      },
                      "srcRegionId": "236107000000000000000001",
                      "destRegionId": "236107000000000000000001",
                      "updatedAt": "2017-02-24T05:10:44.942Z",
                      "createdAt": "2017-02-24T05:10:33.807Z",
                      "tag": null,
                      "deleted": false,
                      "deletedAt": "1970-01-01T00:00:00.000Z",
                      "subconnections": [],
                      "srcCompany": [
                        {
                          "id": "58afc0489430ab7f3666b982"
                        }
                      ],
                      "destCompany": [
                        {
                          "id": "58afc0489430ab7f3666b981"
                        }
                      ],
                      "metro": [
                        {
                          "id": "d466b388d3e9ee0a92177910"
                        }
                      ],
                      "destMetro": [
                        {
                          "id": "d466b388d3e9ee0a92177910"
                        }
                      ],
                      "port": [
                        {
                          "id": "58afc0489430ab7f3666b97a"
                        },
                        {
                          "companyId": "58afc0479430ab7f3666b974"
                        }
                      ],
                      "cdrBillingType": "METRO",
                      "payg": true,
                      "billingType": ["PAYG"],
                      "maintenanceMode": false,
                      "srcVlanRequest": 1000,
                      "destVlanRequest": 2000,
                      "classOfService": "GOLD",
                      "vlan": [
                        {
                          "id": null
                        },
                        {
                          "service": null
                        },
                        {
                          "customer": []
                        }
                      ],
                      "request": [
                        {
                          "status": "PENDING"
                        },
                        {
                          "destMetroId": "d466b388d3e9ee0a92177910"
                        },
                        {
                          "speed": 580
                        },
                        {
                          "srcApproval": null
                        },
                        {
                          "destApproval": "58afc0479430ab7f3666b971"
                        },
                        {
                          "read": false
                        },
                        {
                          "updatedAt": "2017-02-24T05:10:44.942Z"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "",
        "operationId": "read-a-connection",
        "summary": "Read a Layer 2 connection"
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "The username of the company creating the connection.",
            "required": true,
            "example": "acme",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "connectionId",
            "description": "The connection id",
            "required": true,
            "example": "55783e39519d254d36f6126e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "",
        "operationId": "delete-a-connection",
        "summary": "Delete a Layer 2 connection"
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "The username of the company creating the connection.",
            "required": true,
            "example": "acme",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "connectionId",
            "description": "The connection id",
            "required": true,
            "example": "55783e39519d254d36f6126e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLayer2ConnectionSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                },
                "examples": {
                  "Plan-example": {
                    "summary": "Plan example",
                    "value": {
                      "id": "58afc0499430ab7f3666b990",
                      "name": "my connection",
                      "status": "ACTIVE",
                      "type": "LAYER2",
                      "speed": {
                        "value": 1000,
                        "name": "1000 Mbps"
                      },
                      "srcRegionId": "236107000000000000000001",
                      "destRegionId": "236107000000000000000001",
                      "updatedAt": "2017-02-24T05:10:44.942Z",
                      "createdAt": "2017-02-24T05:10:33.807Z",
                      "tag": null,
                      "deleted": false,
                      "deletedAt": "1970-01-01T00:00:00.000Z",
                      "subconnections": [],
                      "srcCompany": [
                        {
                          "id": "58afc0489430ab7f3666b982"
                        }
                      ],
                      "destCompany": [
                        {
                          "id": "58afc0489430ab7f3666b981"
                        }
                      ],
                      "metro": [
                        {
                          "id": "d466b388d3e9ee0a92177910"
                        }
                      ],
                      "destMetro": [
                        {
                          "id": "d466b388d3e9ee0a92177910"
                        }
                      ],
                      "port": [
                        {
                          "id": "58afc0489430ab7f3666b97a"
                        },
                        {
                          "companyId": "58afc0479430ab7f3666b974"
                        }
                      ],
                      "cdrBillingType": "METRO",
                      "payg": true,
                      "billingType": ["PAYG"],
                      "maintenanceMode": false,
                      "srcVlanRequest": 1000,
                      "destVlanRequest": 2000,
                      "classOfService": "GOLD",
                      "vlan": [
                        {
                          "id": null
                        },
                        {
                          "service": null
                        },
                        {
                          "customer": []
                        }
                      ],
                      "request": [
                        {
                          "status": "PENDING"
                        },
                        {
                          "destMetroId": "d466b388d3e9ee0a92177910"
                        },
                        {
                          "speed": 580
                        },
                        {
                          "srcApproval": null
                        },
                        {
                          "destApproval": "58afc0479430ab7f3666b971"
                        },
                        {
                          "read": false
                        },
                        {
                          "updatedAt": "2017-02-24T05:10:44.942Z"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "Update a Layer 2 connection\n\nThis is used for both connection requests and regular connection edits.\n\n#### Connection speed\n\nTo prevent unexpected costs for the other party, you may only _reduce_ the speed\nof a connection to another company (either as a connection request or after it has been activated).\n\nSelf-connections can be updated to a new speed at any time.\n\nThe speed of connection groups may not be updated.",
        "operationId": "update-a-connection",
        "summary": "Update a connection"
      }
    },
    "/api/v2/company/{username}/connections/{connectionId}/approve": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "The username of the company creating the connection.",
            "required": true,
            "example": "acme",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "connectionId",
            "description": "The connection id",
            "required": true,
            "example": "55783e39519d254d36f6126e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "When both parties have approved the connection request, the connection will be created. Connections are automatically approved when a party updates the connection request.",
        "operationId": "approve-a-connection-request",
        "summary": "Approve a connection request"
      }
    },
    "/api/v2/company/{username}/connections/{connectionId}/reject": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "The username of the company creating the connection.",
            "required": true,
            "example": "acme",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "connectionId",
            "description": "The connection id",
            "required": true,
            "example": "55783e39519d254d36f6126e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "",
        "operationId": "reject-a-connection-request",
        "summary": "Reject a connection request"
      }
    },
    "/api/v2/company/{username}/connections": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "The username of the company creating the connection.",
            "example": "acme",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number to get.",
            "required": true,
            "example": "1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "count",
            "description": "The number of results per page to get.",
            "required": true,
            "example": "20",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "Filter by connection status.",
            "required": true,
            "example": "ACTIVE",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "Search for connections",
        "operationId": "connection-search",
        "summary": "Connection search"
      }
    },
    "/api/company/{companyName}/connections/{connectionId}/disable": {
      "put": {
        "parameters": [
          {
            "description": "The username of the company to check is following the other.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The connection id",
            "in": "path",
            "example": "55783e39519d254d36f6126e",
            "name": "connectionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "",
        "operationId": "disable-a-connection",
        "summary": "Disable a connection"
      }
    },
    "/api/company/{companyName}/connections/{connectionId}/enable": {
      "put": {
        "parameters": [
          {
            "description": "The username of the company to check is following the other.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The connection id",
            "in": "path",
            "example": "55783e39519d254d36f6126e",
            "name": "connectionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "Before a connection can be enabled, the source and destination ports must both be in the 'ACTIVE' state.",
        "operationId": "enable-a-connection",
        "summary": "Enable a connection"
      }
    },
    "/api/company/{companyName}/connections/{connectionId}/change": {
      "put": {
        "parameters": [
          {
            "description": "The username of the company creating the connection.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The connection id",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "connectionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "summary": "Change request",
        "operationId": "create-or-update-a-change-request",
        "description": "When you need to make a change that affects the other end of the connection, you must make a change request so that both parties can approve the change.\nThe workflow of a change request is as follows:\n1. Company A creates a change request with a speed increase. Company A automatically approves this change. The `connection.request.status` will be set to `PENDING`.\n2. Company B can accept this change as-is and the change will be made. If company B modifies the change request, Company B automatically approves this change and company A's prior approval is removed.\n3. The change request goes back and forth between companies until it is approved by both sides, or rejected outright by one of the parties.\nThe following connection properties are currently supported:\n  \n* 'speed'\n> Note: Speed decreases are allowed at any time. If a change request is made, the destination company can accept the change at a lower speed than the one specified.\n\nYou will need to have your 'companyId' handy.  If you cannot remember your 'companyId', you can make a [request to find it](#tag/Search).\n### Create or update a change request\nCreate a change request. This will send an alert to the other party to approve.\n\nThe change request must be within the bounds of your port speed and Committed Data Rate (CDR). The bandwidth amount will be deducted from your entitlement (including global CDR) as soon as the request is made, reserving it for when the other party accepts the connection.\n\n> Use this endpoint to reduce the speed of an existing change request. If the other company has approved the change and you reduce the speed, the change will be applied automatically.",
        "tags": ["Layer 2 Connections"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "speed": {
                    "type": "number"
                  }
                },
                "example": {
                  "speed": 250
                }
              },
              "examples": {
                "body": {
                  "summary": "body",
                  "value": {
                    "speed": 250
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "description": "The username of the company deleting the connection.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The connection id",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "connectionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "summary": "Reject or cancel a change request",
        "operationId": "reject-or-cancel-a-change-request",
        "description": "Reject or cancel a change request.\n\nAfter performing this action, the 'request.status' will be set to either 'WITHDRAWN'\nif this is a change you proposed, or 'REJECTED' if this is a change the other\nparty proposed.\n\nAn alert will be sent to the other party advising them of this change.",
        "tags": ["Layer 2 Connections"]
      }
    },
    "/api/company/{companyName}/connections/{connectionId}/change/approve": {
      "put": {
        "parameters": [
          {
            "description": "The username of the company creating the connection.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The connection id",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "connectionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "summary": "Approve the current change request",
        "operationId": "approve-the-current-change-request",
        "description": "Approve a change request. If both parties have approved this change request, the change will be applied automatically.\n\nIf you wish to accept a connection at a different speed, use the [Create or update a change request](#tag/L2-Connections#operation/create-or-update-a-change-request) endpoint.",
        "tags": ["Layer 2 Connections"]
      }
    },
    "/api/company/{companyName}/connections/{connectionId}/change/read": {
      "put": {
        "parameters": [
          {
            "description": "The username of the company creating the connection.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The connection id",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "connectionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "Mark a change request as read. This does not alter the change request, and will not allow the other side to see that you have marked it as read.\nThis is a cosmetic change, and is only used to maintain state on the front-end.",
        "operationId": "mark-the-change-request-as-read",
        "summary": "Mark the change request as read"
      }
    },
    "/api/company/{companyName}/connections/{connectionId}/sync": {
      "put": {
        "parameters": [
          {
            "description": "The username of the company syncing the connection.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The connection id",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "connectionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "summary": "Sync connection with upstream provider",
        "operationId": "sync-connection-with-upstream-provider",
        "description": "Sync the connection with the upstream provider. This is implemented for AzureExpressRoute, and will fetch the latest information from the Azure API. Use this when you have changed the connection speed & details in Azure and need to sync them back to Console Connect.",
        "tags": ["Layer 2 Connections"]
      }
    },
    "/api/company/{companyName}/connections/{connectionId}/log": {
      "get": {
        "parameters": [
          {
            "description": "The username of the company to check.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The connection id",
            "in": "path",
            "example": "55783e39519d254d36f6126e",
            "name": "connectionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogModel"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "",
        "operationId": "get-connection-history-log-request",
        "summary": "Request connection logs"
      }
    },
    "/api/company/{companyName}/connections/{connectionId}/utilization": {
      "get": {
        "parameters": [
          {
            "description": "The username of the company that owns the connection to be checked.",
            "in": "path",
            "example": "corp",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The connection id",
            "in": "path",
            "example": "55767b5652a693344a015744",
            "name": "connectionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unix timestamp for beginning of time window.",
            "example": "1459376516",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unix timestamp for end of time window.",
            "example": "1459376516",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Set the resolution of the response ('day' | 'hour' | 'minute'). If no resolution is passed, it will default to 'minute'.\nNote: As 'minute' is the smallest resolution, it will not have `min/max` fields in the response.",
            "example": "day",
            "in": "query",
            "name": "resolution",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "connectionId": 120391239323,
                      "results": [
                        {
                          "rxAverage": 1,
                          "rxMax": 2,
                          "rxMin": 0.005,
                          "time": 49303945838,
                          "txAverage": 1,
                          "txMax": 2,
                          "txMin": 0.005
                        }
                      ],
                      "unit": "Mbps"
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Layer 2 Connections"],
        "description": "",
        "operationId": "get-connection-utilization-data",
        "summary": "Get connection utilization data"
      }
    },
    "/api/company/{companyName}/connections/directConnectPartner/ALICLOUD/layer2": {
      "put": {
        "parameters": [
          {
            "description": "The username of the company creating the connection.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The connection type, typically 'LAYER2_GROUP'."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the new connection"
                  },
                  "srcPortId": {
                    "type": "string",
                    "description": "The source port ID."
                  },
                  "speed": {
                    "type": "number",
                    "description": "The connection speed in Mbps."
                  },
                  "paymentType": {
                    "type": "string",
                    "enum": ["creditcard", "invoice"],
                    "description": "The payment method."
                  },
                  "partner": {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "string",
                        "description": "The Alibaba account ID."
                      },
                      "destPortId": {
                        "type": "string",
                        "description": "The ID of the Alibaba destination port."
                      }
                    }
                  }
                }
              },
              "example": {
                "type": "LAYER2_GROUP",
                "name": "My Alibaba Connection",
                "paymentType": "invoice",
                "srcPortId": "5c524bca887918000bebd195",
                "partner": {
                  "account": "xx-3434-yy-6",
                  "destPortId": "5b9701ed5c6e5f000b4181dd"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionModel"
                },
                "example": {
                  "name": "My Alibaba Connection",
                  "status": "CREATING",
                  "type": "GROUP_LAYER2",
                  "subconnections": [
                    {
                      "id": "5cd1e35f552bac6f8055f49e",
                      "srcPortId": "5c524bca887918000bebd195",
                      "destPortId": [
                        "5b9701ed5c6e5f000b4181dd",
                        "5b9702205c6e5f000b4181de"
                      ]
                    }
                  ]
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Alibaba Cloud"],
        "operationId": "createAliCloudConnection",
        "summary": "Create a Layer 2 ALICLOUD Direct Connect Partner connection",
        "description": "Prerequisites\n* Your company has been verified on the Console Connect platform.\n* The authenticated user account has Network Admin permissions.\n* The source port is ACTIVE.\n* You are requesting paymentType \"invoice\", or, if requesting paymentType \"plan\", the subscription associated with the port has sufficient entitlements to complete the request."
      }
    },
    "/console_secure/antiddos/v1/cad/costs": {
      "get": {
        "operationId": "get-anti-ddos-costs",
        "tags": ["Pricing"],
        "summary": "Anti-DDoS - Network-Based Protection Costs",
        "description": "Returns the MRC (Monthly Recurring Charge) and NRC (Non-Recurring Charge or One-off Charge) for a potential new order.",
        "parameters": [
          {
            "name": "package",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Package"
            }
          },
          {
            "name": "number_of_protected_ips",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/NumberOfProtectedIpsInQuery"
            }
          },
          {
            "name": "total_inbound_traffic",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "0,50",
                "51,100",
                "101,200",
                "201,500",
                "501,1000",
                "1001,2000"
              ]
            },
            "example": "51,100",
            "description": "Corresponding Legitimate Traffic. Comma separated list of minimum and maximum values, in Mbps."
          },
          {
            "name": "total_mitigated_traffic",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TotalMitigatedTraffic"
            }
          },
          {
            "name": "service_period",
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [12, 24]
            },
            "example": 12
          }
        ],
        "responses": {
          "200": {
            "description": "The costs were successfully calculated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mrc": {
                      "type": "number",
                      "description": "Monthly Recurring Charge (MRC) in US dollars.",
                      "example": 109
                    },
                    "nrc": {
                      "type": "number",
                      "description": "Non-Recurring Charge (NRC), also known as One-off Charge, in US dollars.",
                      "example": 450.5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid because of missing and/or invalid fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "List of missing and/or invalid fields.",
                  "properties": {
                    "invalidFields": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Package must be one of the following: alwayson, ondemand",
                        "description": "Error message describing the problematic field."
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "There was an internal server error."
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/terminationsites": {
      "get": {
        "tags": ["Anti-DDoS"],
        "summary": "Returns a list of termination sites.",
        "operationId": "GetTerminationSitesList",
        "responses": {
          "200": {
            "description": "Array of termination sites, with only basic fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnedTerminationSite"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/dnsAccUid": {
      "get": {
        "tags": ["Anti-DDoS"],
        "summary": "Get DNS UIDs and synonyms for the current user",
        "operationId": "GetUserDNSUIDsAndSynonyms",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dns_acc_uid": {
                        "type": "string",
                        "description": "DNS UID",
                        "example": "123456789101112"
                      },
                      "synonym": {
                        "type": "string",
                        "description": "Company name",
                        "example": "Example Ltd"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/salesRecords": {
      "get": {
        "tags": ["Anti-DDoS"],
        "summary": "Returns sales records",
        "operationId": "GetCADSalesRecords",
        "parameters": [
          {
            "in": "query",
            "name": "cust_id",
            "description": "insight customer id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IS0168"
          },
          {
            "in": "query",
            "name": "product_id",
            "description": "array of product id, separate by comma",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "I4E,I4P,I3E,I3W,I3P"
          },
          {
            "in": "query",
            "name": "sale_status_id",
            "description": "array of sale status id, separate by comma",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "OP"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "maximum number of records",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 20
            },
            "example": 4
          },
          {
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Get sales records from Insight API",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sr": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SalesRecord"
                      },
                      "description": "array of sales records"
                    },
                    "offset": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "total_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "There was an internal server error. This might be caused by an Insight API connection failure."
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/order": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Create a new order, and create a Sales Record in Insight.",
        "operationId": "CreateOrderAndInsightSR",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The order was successfully created. The order ID and Sales Record ID are returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Internal database ID of the created order.",
                      "example": 1
                    },
                    "insight_sr_id": {
                      "$ref": "#/components/schemas/InsightSrId"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid because of missing and/or invalid fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "List of missing and/or invalid fields.",
                  "properties": {
                    "invalidFields": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Service period must be between 1 and 600.",
                        "description": "Error message describing the problematic field."
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "There was an internal server error. This might be caused by an Insight API connection failure. This would mean the order was not created."
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/order/{id}": {
      "get": {
        "tags": ["Anti-DDoS"],
        "summary": "Returns a single order.",
        "operationId": "GetSingleCADOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to be fetched",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the order, plus all protected IP addresses and provisioning configurations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnedOrder"
                }
              }
            }
          },
          "404": {
            "description": "The order was not found."
          }
        }
      },
      "put": {
        "tags": ["Anti-DDoS"],
        "summary": "Adds the network configuration information to an existing order. This progresses its status from 'new' to 'ready for provisioning'.",
        "operationId": "UpdateOrderNetworkConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to be fetched",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scrubbing_centre": {
                    "$ref": "#/components/schemas/ScrubbingCentre"
                  },
                  "protected_ip_addresses": {
                    "$ref": "#/components/schemas/ProtectedIpAddresses"
                  },
                  "provisioning_config_active": {
                    "type": "object",
                    "properties": {
                      "customer_public_ip": {
                        "$ref": "#/components/schemas/CustomerPublicIp"
                      },
                      "gsmp_circuit_id": {
                        "type": "string",
                        "description": "Provided by user",
                        "example": "HKG(PCG) GI002017"
                      },
                      "bgp_peering_as_number": {
                        "$ref": "#/components/schemas/BgpPeeringAsNumber"
                      }
                    }
                  },
                  "provisioning_config_standby": {
                    "type": "object",
                    "properties": {
                      "customer_public_ip": {
                        "$ref": "#/components/schemas/CustomerPublicIp"
                      },
                      "gsmp_circuit_id": {
                        "type": "string",
                        "description": "Provided by user",
                        "example": "HKG(PCG) GI002017"
                      },
                      "bgp_peering_as_number": {
                        "$ref": "#/components/schemas/BgpPeeringAsNumber"
                      }
                    }
                  },
                  "termination_site": {
                    "items": {
                      "$ref": "#/components/schemas/BasicTerminationSite"
                    },
                    "description": "To create a new Termination Site, specify these fields"
                  },
                  "termination_site_id": {
                    "type": "integer",
                    "description": "To use an existing Termination Site, specify its ID",
                    "example": 45
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The order was successfully configured. The circuit ID is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "circuit_id": {
                      "type": "integer",
                      "description": "Circuit ID",
                      "example": "ASH(IPD) CAD900000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid because of missing and/or invalid fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "List of missing and/or invalid fields.",
                  "properties": {
                    "invalidFields": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Scrubbing Centre is mandatory.",
                        "description": "Error message describing the problematic field."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The order was not found."
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/order/dns": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Place a new DNS order",
        "operationId": "CreateDNSOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resourceType": {
                    "description": "Type of assets to be protected:\n  * `mixture` - IP Network\n  * `pureweb` - Website domain\n",
                    "type": "string",
                    "enum": ["mixture", "pureweb"],
                    "example": "mixture"
                  },
                  "insightId": {
                    "type": "string",
                    "description": "insight customer id"
                  },
                  "uid": {
                    "type": "string"
                  },
                  "plan": {
                    "type": "integer",
                    "enum": [0, 1, 2],
                    "description": "plan:\n  * 0: insurance\n  * 1: unlimited\n  * 2: mca\n"
                  },
                  "cleanBandwidth": {
                    "type": "integer",
                    "description": "clean bandwidth, in Mbps.",
                    "enum": [
                      10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 150, 200, 250,
                      300
                    ]
                  },
                  "functionVersion": {
                    "type": "integer",
                    "enum": [0, 1],
                    "description": "function:\n  * 0: standard\n  * 1: enhanced\n"
                  },
                  "domainCount": {
                    "type": "integer",
                    "maximum": 2000,
                    "minimum": 10,
                    "multipleOf": 10
                  },
                  "cleanQps": {
                    "type": "integer",
                    "maximum": 100000,
                    "minimum": 500,
                    "multipleOf": 100
                  },
                  "portCount": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 5,
                    "multipleOf": 5
                  },
                  "subscription": {
                    "type": "integer",
                    "enum": [1, 2, 3, 4, 5, 6, 12, 24],
                    "description": "service period"
                  },
                  "autoRenewal": {
                    "type": "boolean"
                  },
                  "vendor_account": {
                    "type": "string",
                    "description": "account UID"
                  },
                  "contactName": {
                    "description": "Technical Contact Name",
                    "type": "string"
                  },
                  "contactEmail": {
                    "description": "Technical Contact Email",
                    "type": "string"
                  },
                  "contactPhone": {
                    "description": "Technical Contact Phone",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "DNS order placed success, order ids returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Internal database ID of the created order."
                    },
                    "insight_sr_id": {
                      "$ref": "#/components/schemas/InsightSrId"
                    },
                    "vendor_account": {
                      "type": "string",
                      "description": "account UID"
                    },
                    "vendor_reference": {
                      "type": "string",
                      "description": "DNS instance id"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid request"
          },
          "500": {
            "description": "internal server error."
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/order/dns/renew/{id}": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Renew a DNS order",
        "operationId": "RenewDNSOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Anti-DDoS order ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "renewPeriod": {
                    "type": "integer",
                    "enum": [1, 2, 3, 4, 5, 6, 12, 24],
                    "description": "service period"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DNS order renewed success, order ids returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Internal database ID of the created order."
                    },
                    "insight_sr_id": {
                      "$ref": "#/components/schemas/InsightSrId"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid request"
          },
          "500": {
            "description": "internal server error."
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/order/dns/setRenewal/{id}": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Config renewal status of a DNS order",
        "operationId": "ConfigDNSOrderRenewalStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Anti-DDoS order ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "autoRenewal": {
                    "type": "boolean",
                    "description": "renewal status"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DNS order config success"
          },
          "400": {
            "description": "invalid request"
          },
          "500": {
            "description": "internal server error."
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/order/salesRecord/{sr_id}/billing": {
      "get": {
        "tags": ["Anti-DDoS"],
        "summary": "Returns a single order from insight (billing).",
        "operationId": "GetBillingSingleOrderFromInsight",
        "parameters": [
          {
            "name": "sr_id",
            "in": "path",
            "description": "ID of order to be fetched",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Get a sales record from Insight API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sr_id": {
                      "type": "integer",
                      "example": 260149
                    },
                    "billing_date": {
                      "type": "string",
                      "example": "2022-05-05T00:00:00Z"
                    },
                    "contract_renew_date": {
                      "type": "string",
                      "example": "2022-05-05T00:00:00Z"
                    },
                    "onetime_revenue": {
                      "type": "string",
                      "example": "1500.00"
                    },
                    "monthly_revenue": {
                      "type": "string",
                      "example": "1500.00"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Exception throw."
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/order/salesRecord/{sr_id}/service": {
      "get": {
        "tags": ["Anti-DDoS"],
        "summary": "Returns a single order from insight (service).",
        "operationId": "GetServiceSingleOrderFromInsight",
        "parameters": [
          {
            "name": "sr_id",
            "in": "path",
            "description": "ID of order to be fetched",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Get a sales record from Insight API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sr_id": {
                      "type": "integer",
                      "example": 260149
                    },
                    "prev_sr_id": {
                      "type": "integer",
                      "example": null
                    },
                    "next_sr_id": {
                      "type": "integer",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Exception throw."
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/order/validate": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Validate fields in order form",
        "operationId": "ValidateCADfields",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All fields submitted are valid"
          },
          "400": {
            "description": "The request was invalid because of missing and/or invalid fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "List of invalid fields.",
                  "properties": {
                    "invalidFields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "service_period",
                            "description": "The problematic field name."
                          },
                          "desc": {
                            "type": "string",
                            "example": "Service period must be between 1 and 600.",
                            "description": "Error message describing the problematic field."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "There was an internal server error."
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/orders": {
      "get": {
        "tags": ["Anti-DDoS"],
        "summary": "Returns a list of orders.",
        "operationId": "GetCADOrdersList",
        "responses": {
          "200": {
            "description": "Array of CAD orders, with only basic fields (no IP addresses or configuration etc).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Provided by the user; maximum 50 characters",
                        "example": "Anti-ddos order 123"
                      },
                      "insight_customer_id": {
                        "type": "string",
                        "description": "Provided by JWT from Console Connect, e.g. AIN001, TAN006, IS0569, TOL, TATA",
                        "example": "CTL01"
                      },
                      "status": {
                        "$ref": "#/components/schemas/Status"
                      },
                      "package": {
                        "type": "string",
                        "enum": ["alwayson", "ondemand"]
                      },
                      "provider": {
                        "enum": ["ipdc", "dns"],
                        "type": "string",
                        "description": "The company actually responsible for handling the traffic. We are currently only using IPDC Asia.",
                        "example": "ipdc"
                      },
                      "insight_sr_id": {
                        "$ref": "#/components/schemas/InsightSrId"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/{uid}/createWebRule": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Create a web rule",
        "operationId": "CreateWebRule",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "description": "The UID of the DNS.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169"
          }
        ],
        "requestBody": {
          "description": "Request body for creating a web rule",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebRuleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "example": "Unable to process request, reference id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/{uid}/modifyWebRule": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Modify a web rule",
        "operationId": "UpdateWebRule",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "description": "The UID of the DNS.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyWebRuleRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "example": "Unable to process request, reference id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/{uid}/deleteWebRule": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Delete web rules by domain",
        "operationId": "DeleteWebRulesByDomain",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "description": "The UID of the order owner.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["domain"],
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "The domain name",
                    "example": "example.com"
                  },
                  "resourceGroupId": {
                    "type": "string",
                    "description": "The resource group ID",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "example": "Unable to process request, reference id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/{uid}/associateWebCert": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Add a SSL certificate to a domain",
        "operationId": "AddSSLCertificateToDomain",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account uid"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["domain", "certName", "cert", "key"],
                "properties": {
                  "domain": {
                    "type": "string",
                    "description": "The domain name",
                    "example": "example.com"
                  },
                  "certName": {
                    "type": "string",
                    "description": "The name of the SSL certificate. This name must be unique.",
                    "example": "ssl_cert-20240101.crt"
                  },
                  "cert": {
                    "type": "string",
                    "description": "The SSL certificate",
                    "example": "-----BEGIN CERTIFICATE-----MIIDhjCCAm6gAwIBAgIEImTpEzANBgkqhkiG9w0BAQsFADBbMScwJQYDVQQDDB5SZWdlcnkgU2VsZi1TaWduZWQgQ2VydGlmaWNhdGUxIzAhBgNVBAoMGlJlZ2VyeSwgaHR0cHM6Ly9yZWdlcnkuY29tMQswCQYDVQQGEwJVQTAgFw0yNDA4MTkwMDAwMDBaGA8yMTI0MDgxOTA5MzgzMVowSDEUMBIGA1UEAwwLZXhhbXBsZS5jb20xIzAhBgNVBAoMGlJlZ2VyeSwgaHR0cHM6Ly9yZWdlcnkuY29tMQswCQYDVQQGEwJVQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAI/75U1FWK4EjeYe44Y8Ay43tCPK+uSHV2Vw9Akvh0q09qOGIVcWl5AJuRaGdwFkn5GZRCLe0MRBkm4kn5jN+6QyMIZieWP0OQR//sICbTYsiofp5Na8VPTQuqTRaK5ssPOS4d54X6MYRzbsJY/arKcEEyA2q1eQkk6en+CxnQLYOK7PqHsHeOPWUGCZDO3au0dnlDAVJgJHqT6t1VsjhVAnZEsYCyGyM0IpXpHeAsVxBTWW8+ri5WxvBc27GvJHx9Gg9NJP1MLkB2gMYaxg2U04E49KZ+Ah1WMA3glv1IwnTf6C5pb3fDa0iGpcdqRZguvwm2YbqdNXszngK2HOvJUCAwEAAaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0OBBYEFJuzUcPaUHq5ZdTgXtVjkeFmeIXzMB8GA1UdIwQYMBaAFJuzUcPaUHq5ZdTgXtVjkeFmeIXzMA0GCSqGSIb3DQEBCwUAA4IBAQCL6rYsKb9DWutmLPNMzEeyEFiX1ab5wWHW7CU4HjZuYpqmXLjhMiKy+kSUVbbuDkkXhyegwHFROjUdcpD27Ve8humOPTORr5WZDNKNpM/RAjiBI58RV/00sKhFuwXp6fJZPy5BpLqjqs4AA9mfRu8aRow9x/ZcM8daJlxEHfsfbC6YcNod++5ORd5XwW2adXYa2Z+p/hETRPFvXnRS0rEv3mAcVsHyLkSnkOx3PfKEiUyZ5Hw6uxBvi5en9eBAbcl+9SQ9LmRmxbyL72f7oOwKtfyzlg55eNdheI1/jMcVa+3KOffyczsJHqqaOG5yz319QpPxbVOeTTpZ2rNAtE6/-----END CERTIFICATE-----"
                  },
                  "key": {
                    "type": "string",
                    "description": "The private key of the SSL certificate",
                    "example": "-----BEGIN EXAMPLE RSA PRIVATE KEY-----MIIEowIBAAKCAQEAj/vlTUVYrgSN5h7jhjwDLje0I8r65IdXZXD0CS+HSrT2o4YhVxaXkAm5FoZ3AWSfkZlEIt7QxEGSbiSfmM37pDIwhmJ5Y/Q5BH/+wgJtNiyKh+nk1rxU9NC6pNFormyw85Lh3nhfoxhHNuwlj9qspwQTIDarV5CSTp6f4LGdAtg4rs+oewd449ZQYJkM7dq7R2eUMBUmAkepPq3VWyOFUCdkSxgLIbIzQilekd4CxXEFNZbz6uLlbG8Fzbsa8kfH0aD00k/UwuQHaAxhrGDZTTgTj0pn4CHVYwDeCW/UjCdN/oLmlvd8NrSIalx2pFmC6/CbZhup01ezOeArYc68lQIDAQABAoIBADASyR0zFahIcf5O+uWTPPad96HpwDo0LAx9GaXFfjUF1cGEY7ZZnzIi5O7t52cKKzLoSvUfkvGr+RGYXccdozLP5R7BW0lxveXQPIWXXNJ1La2yfMrrp6vz0xV7q6ltNemldY+bfkcMsJ5YWzQ8LWA4PpCHYE8EwKzKTpQtiUBs4RAQWcXfEkVNOBKne3BPk5YWngCwuQMQYURODEMMZhHkqXD03Ag0LAf+U+bILSrJ9EmRyj8ctak+adftQqg9yUhhdSSO147x7g2pKPhCH6ogI5ogXka4zW1r0TSUlOp9wZFTh0xC6wn/EbNGIAtQyLqUIXRvu1ZPg4T75p/yJMMCgYEA7BI0imbN5laOPQFIrG+nk7Uc3Eu/8PjegsSGI+uajfxav/03j/j5u+mt7iMektHJqBQ2l6/hxdqVqadLKC7tOKoiXPyojfVTLDw1OfnUC3Af6DWBTXipW/ME5rZGTwsKlPNPR9l45fVEiM5i2HttoE5ttk7OQnmjqPDNPZXPwo8CgYEAnCOSLNvLdMvGHtPW0zsxAkoZNJqNzPGrCY9bQ2DkMM8PtGC1mN5wVjYHduatX8KeyAn+ib4CO0e+i0Dz5hY4m3jF7Ig1pR07oEyFKg5Lo7a2BsN+46ZoEHHP9Rjp2QCBNsaqYQjHCCZsH6lcd89aXKiyk0hGFqFJpeMh36L1EJsCgYEAmT6MKtfni0He3c0qjv2ALAti68Kkm9oCH6NRbJnx33/UrVLEMcqu2wQrqy3TF/3lSR2t/rPm/NgTVWlLCY/E4IbY/cHp7RU2471F1BfQRYiIveWVxWOxlQXhxZ7Hb2I8gUqcyYhryeN4lNJdKiidlnWzFKh9jnuF+RIwOW05zBMCgYB+kMb43eH6dwPOEWHeL+j2NiJgZbf0HSHLygzsfSn79pyAVrRdilH9UCaU10BKk3QqKw/Nj9w3OVzXfHs4U2Lng+rMZU023o9qzRxUjun5dy3uJaJB3q4URm2P+/XzFVmokTmjFn5fuOWEdMCjzc0ttwGqKbfGuE7+zTK0GWAVaQKBgFY4nwDvjICXbCKYF8sXwo733KnXuK6hjaW83QHOkAGvYepEHtGw/JRRDT037etcwEyDnJQt8+9GIhrkCzI6yL423y7/koVQoOKd4pE9ASa+Za8ZOKExVXOUw0i86314CnCfc0VjutnlPGZnWPTMGj4zpqjXij/KitX8+xTB/ZJL-----END RSA PRIVATE KEY-----"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "example": "Unable to process request, reference id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/{uid}/modifyTlsConfig": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Update TLS for a domain",
        "operationId": "UpdateDomainTLS",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account uid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["resourceGroupId", "domain", "config"],
                "properties": {
                  "resourceGroupId": {
                    "type": "string",
                    "example": ""
                  },
                  "domain": {
                    "type": "string",
                    "format": "url",
                    "example": "example.com"
                  },
                  "config": {
                    "type": "object",
                    "required": ["ssl_protocols", "ssl_ciphers"],
                    "properties": {
                      "ssl_protocols": {
                        "type": "string",
                        "minLength": 1,
                        "example": "tls1.0",
                        "enum": ["tls1.0", "tls1.2"]
                      },
                      "ssl_ciphers": {
                        "type": "string",
                        "minLength": 1,
                        "enum": ["all", "strong"],
                        "description": "\"strong\" is only available when ssl_protocols=\"tls1.2\"",
                        "example": "all"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "example": "Unable to process request, reference id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/{uid}/configL7RsPolicy": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Configure L7 Rs Policy",
        "operationId": "ConfigureL7RsPolicy",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account uid"
          }
        ],
        "requestBody": {
          "description": "Load Balancer Configuration Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigL7RsPolicyRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "500": {
            "description": "Error message with a camunda process instance id"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/{uid}/describeL7RsPolicy": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Get current L7 Rs Policy settings (A.K.A back to origin settings)",
        "operationId": "GetCurrentL7RsPolicySettings",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account uid"
          }
        ],
        "requestBody": {
          "description": "Load Balancer Configuration Request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "example": "example.io"
                  },
                  "realServers": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "ipv4",
                          "description": "IPv4 addresses only"
                        },
                        "example": ["1.1.1.1", "8.8.8.8"]
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "hostname"
                        },
                        "example": ["example.com", "test.org"]
                      }
                    ]
                  },
                  "resourceGroupId": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "500": {
            "description": "Error message with a camunda process instance id"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/instance": {
      "get": {
        "summary": "Retrieve DNS instances",
        "description": "Get a list of DNS instances with pagination",
        "operationId": "GetDNSInstancesList",
        "tags": ["Anti-DDoS"],
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "description": "Unique ID for filtering instances",
            "schema": {
              "type": "string",
              "example": "292733187643212169"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of DNS instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DNSInstance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/instance/detail/{instanceId}": {
      "get": {
        "summary": "Retrieve details of a single DNS instance",
        "operationId": "GetSingleDNSInstanceDetail",
        "tags": ["Anti-DDoS"],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The instanceId of DNS instance",
            "example": "ddos-a2dc76e8-bb13-4dab-91f9-28fafd4fc07f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of DNS instances",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DNSInstance"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/network/rules": {
      "get": {
        "tags": ["Anti-DDoS"],
        "summary": "Search for port config rules",
        "operationId": "SearchPortConfigRules",
        "parameters": [
          {
            "in": "query",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 292733187643212160
          },
          {
            "in": "query",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "example": "ddos-5a46f0ed-77b8-45a4-a376-0fba87eec6cc"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer"
            },
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "List of port config rules",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DNSPortConfigList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/network/rules/{uid}/createNetworkRules": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Create a new port config rule",
        "operationId": "CreatePortConfigRule",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DNSPortConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/network/rules/{uid}/configNetworkRules": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Edit a port config rule",
        "operationId": "EditPortConfigRule",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DNSPortConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Edited successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/network/rules/{uid}/deleteNetworkRule": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Delete a port config rule",
        "operationId": "DeletePortConfigRule",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DNSPortConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/network/rules/{uid}/modifyHealthCheckConfig": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Configure Health Check",
        "operationId": "ConfigHealthCheck",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "forwardProtocol": {
                    "type": "string",
                    "enum": ["tcp", "udp"]
                  },
                  "frontendPort": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "example": 8080
                  },
                  "healthCheck": {
                    "type": "object",
                    "properties": {
                      "port": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 65535,
                        "example": 8010
                      },
                      "timeout": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 30,
                        "example": 5
                      },
                      "interval": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 30,
                        "example": 15
                      },
                      "up": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "example": 3
                      },
                      "down": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10,
                        "example": 3
                      }
                    },
                    "required": ["port", "timeout", "interval", "up", "down"]
                  },
                  "instanceId": {
                    "type": "string",
                    "example": "ddos-25d832be-05c0-4d31-be38-e880f6d64e12"
                  },
                  "uid": {
                    "type": "string",
                    "example": 292733187643212160
                  }
                },
                "required": [
                  "forwardProtocol",
                  "frontendPort",
                  "instanceId",
                  "uid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Configured successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/network/protect/{uid}/modifyNetworkRuleAttribute": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Configure Session Persistence",
        "operationId": "ConfigSessionPersistence",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instanceId": {
                    "type": "string",
                    "example": "ddos-6856bb46-90f4-436f-9533-3aef8a8f33db"
                  },
                  "forwardProtocol": {
                    "type": "string",
                    "enum": ["tcp", "udp"],
                    "example": "tcp"
                  },
                  "frontendPort": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "example": 8080
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "persistenceTimeout": {
                        "type": "integer",
                        "minimum": 30,
                        "maximum": 3600,
                        "example": 3600
                      }
                    }
                  },
                  "uid": {
                    "type": "string",
                    "example": "292733187643212169"
                  }
                },
                "required": [
                  "instanceId",
                  "forwardProtocol",
                  "frontendPort",
                  "uid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Configurated successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/network/protect/{uid}/describeNetworkRuleAttributes": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "View Session Persistence",
        "operationId": "ViewSessionPersistence",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instanceId": {
                    "type": "string",
                    "example": "ddos-6856bb46-90f4-436f-9578-3a338a8f33db"
                  },
                  "protocol": {
                    "type": "string",
                    "enum": ["tcp", "udp"],
                    "example": "tcp"
                  },
                  "frontendPort": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "example": 8080
                  },
                  "uid": {
                    "type": "string",
                    "example": "292733187643212169"
                  }
                },
                "required": ["instanceId", "protocol", "frontendPort"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session Persistence Detail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "networkRuleAttributes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "config": {
                                "type": "object",
                                "properties": {
                                  "cc": {
                                    "type": "object",
                                    "properties": {
                                      "sblack": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "integer",
                                              "enum": [1, 2, 3, 4]
                                            },
                                            "during": {
                                              "type": "integer",
                                              "example": 60
                                            },
                                            "expires": {
                                              "minimum": 60,
                                              "maximum": 604800,
                                              "type": "integer",
                                              "example": 600
                                            },
                                            "cnt": {
                                              "type": "integer",
                                              "example": 5
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": ["sblack"]
                                  },
                                  "nodataConn": {
                                    "type": "string",
                                    "enum": ["on", "off"],
                                    "example": "on"
                                  },
                                  "payloadLen": {
                                    "type": "object",
                                    "properties": {
                                      "max": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 6000,
                                        "example": 0
                                      },
                                      "min": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 6000,
                                        "example": 6000
                                      }
                                    },
                                    "required": ["max", "min"]
                                  },
                                  "persistenceTimeout": {
                                    "minimum": 30,
                                    "maximum": 3600,
                                    "description": "Session retention timeout. Value range: 30~3600, unit: second. The default is 0, which means off.",
                                    "type": "integer",
                                    "example": 30
                                  },
                                  "sla": {
                                    "type": "object",
                                    "properties": {
                                      "cps": {
                                        "type": "integer",
                                        "minimum": 100,
                                        "maximum": 100000,
                                        "example": 100000
                                      },
                                      "cpsEnable": {
                                        "type": "integer",
                                        "enum": [0, 1]
                                      },
                                      "maxconn": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 500000
                                      },
                                      "maxconnEnable": {
                                        "type": "integer",
                                        "enum": [0, 1]
                                      }
                                    },
                                    "required": [
                                      "cps",
                                      "cpsEnable",
                                      "maxconn",
                                      "maxconnEnable"
                                    ]
                                  },
                                  "slimit": {
                                    "type": "object",
                                    "properties": {
                                      "bps": {
                                        "type": "integer",
                                        "minimum": 1024,
                                        "maximum": 268435456
                                      },
                                      "cps": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 500000
                                      },
                                      "cpsEnable": {
                                        "type": "integer",
                                        "enum": [0, 1]
                                      },
                                      "cpsMode": {
                                        "type": "integer",
                                        "description": "1: manual, 2: auto",
                                        "enum": [1, 2]
                                      },
                                      "maxconn": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 500000
                                      },
                                      "maxconnEnable": {
                                        "type": "integer",
                                        "enum": [0, 1]
                                      },
                                      "pps": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100000
                                      }
                                    },
                                    "required": [
                                      "bps",
                                      "cps",
                                      "cpsEnable",
                                      "cpsMode",
                                      "maxconn",
                                      "maxconnEnable",
                                      "pps"
                                    ]
                                  },
                                  "synproxy": {
                                    "type": "string",
                                    "enum": ["on", "off"],
                                    "example": "on"
                                  }
                                },
                                "required": [
                                  "cc",
                                  "nodataConn",
                                  "payloadLen",
                                  "persistenceTimeout",
                                  "sla",
                                  "slimit",
                                  "synproxy"
                                ]
                              },
                              "frontendPort": {
                                "type": "integer",
                                "example": 8080
                              },
                              "instanceId": {
                                "type": "string",
                                "example": "ddos-6856bb46-90f4-436f-9578-3a338a8f33db"
                              },
                              "protocol": {
                                "type": "string",
                                "enum": ["tcp", "udp"],
                                "example": "tcp"
                              }
                            },
                            "required": [
                              "config",
                              "frontendPort",
                              "instanceId",
                              "protocol"
                            ]
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "example": "f4da3b8b-6b3b-4b0b-8b3b-6b3b4b0b8b3b"
                        }
                      },
                      "required": ["networkRuleAttributes", "requestId"]
                    }
                  },
                  "required": ["code", "data"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/network/protect/{uid}/describeLayer4RulePolicy": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "View Back to Origin",
        "operationId": "ViewBackToOrigin",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instanceId": {
                    "type": "string",
                    "example": "ddos-6856bb46-90f4-436f-9578-3aef8a8f3312"
                  },
                  "protocol": {
                    "type": "string",
                    "enum": ["tcp", "udp"],
                    "example": "tcp"
                  },
                  "frontendPort": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "example": 8080
                  },
                  "uid": {
                    "type": "string",
                    "example": "292733187643212169"
                  }
                },
                "required": ["instanceId", "protocol", "frontendPort", "uid"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Back to Origin Detail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "backendPort": {
                          "type": "integer",
                          "example": 80
                        },
                        "bakMode": {
                          "type": "string",
                          "enum": ["0", "1"],
                          "example": "1"
                        },
                        "currentIndex": {
                          "type": "integer",
                          "example": 1
                        },
                        "forwardProtocol": {
                          "type": "string",
                          "enum": ["tcp", "udp"],
                          "example": "tcp"
                        },
                        "frontendPort": {
                          "type": "integer",
                          "example": 80
                        },
                        "instanceId": {
                          "type": "string",
                          "example": "ddos-25d832be-05c0-4d31-be38-e880f6d64e12"
                        },
                        "priRealServers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "currentIndex": {
                                "type": "integer",
                                "example": 1
                              },
                              "eip": {
                                "type": "string",
                                "example": "56.123.65.32"
                              },
                              "frontendPort": {
                                "type": "integer",
                                "example": 80
                              },
                              "instanceId": {
                                "type": "string",
                                "example": "ddos-25d832be-05c0-4d31-be38-e880f6d64e66"
                              },
                              "protocol": {
                                "type": "string",
                                "enum": ["tcp", "udp"],
                                "example": "tcp"
                              },
                              "realServer": {
                                "type": "string",
                                "example": "123.123.44.123"
                              }
                            },
                            "required": [
                              "currentIndex",
                              "eip",
                              "frontendPort",
                              "instanceId",
                              "protocol",
                              "realServer"
                            ]
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "example": "C4E18928-24FF-3B2F-B3EF-D60B133FED33"
                        },
                        "secRealServers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "currentIndex": {
                                "type": "integer",
                                "example": 1
                              },
                              "eip": {
                                "type": "string",
                                "example": "54.43.54.12"
                              },
                              "frontendPort": {
                                "type": "integer",
                                "example": 80
                              },
                              "instanceId": {
                                "type": "string",
                                "example": "ddos-25d832be-05c0-4d31-be38-e880f6d64e77"
                              },
                              "protocol": {
                                "type": "string",
                                "enum": ["tcp", "udp"],
                                "example": "tcp"
                              },
                              "realServer": {
                                "type": "string",
                                "example": "58.47.123.4"
                              }
                            },
                            "required": [
                              "currentIndex",
                              "eip",
                              "frontendPort",
                              "instanceId",
                              "protocol",
                              "realServer"
                            ]
                          }
                        }
                      },
                      "required": [
                        "backendPort",
                        "bakMode",
                        "currentIndex",
                        "forwardProtocol",
                        "frontendPort",
                        "instanceId",
                        "priRealServers",
                        "requestId",
                        "secRealServers"
                      ]
                    }
                  },
                  "required": ["code", "data"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/network/protect/{uid}/describeHealthCheckList": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "View Health Check",
        "operationId": "ViewHealthCheck",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instanceId": {
                    "type": "string",
                    "example": "ddos-6856bb46-90f4-436f-9578-3aef8a8f3312"
                  },
                  "protocol": {
                    "type": "string",
                    "enum": ["tcp", "udp"],
                    "example": "tcp"
                  },
                  "frontendPort": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "example": 8080
                  },
                  "uid": {
                    "type": "string",
                    "example": "292733187643212169"
                  }
                },
                "required": ["instanceId", "protocol", "frontendPort", "uid"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Health Check Detail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "healthCheckList": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "frontendPort": {
                                "type": "integer"
                              },
                              "healthCheck": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 65535,
                                    "example": 8010
                                  },
                                  "timeout": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 30,
                                    "example": 5
                                  },
                                  "interval": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 30,
                                    "example": 15
                                  },
                                  "up": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 10,
                                    "example": 3
                                  },
                                  "down": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 10,
                                    "example": 3
                                  }
                                },
                                "required": [
                                  "port",
                                  "timeout",
                                  "interval",
                                  "up",
                                  "down"
                                ]
                              },
                              "instanceId": {
                                "type": "string",
                                "example": "ddos-25d832be-05c0-4d31-be38-e880f6d64e12"
                              },
                              "protocol": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "frontendPort",
                              "healthCheck",
                              "instanceId",
                              "protocol"
                            ]
                          }
                        },
                        "requestId": {
                          "type": "string"
                        }
                      },
                      "required": ["healthCheckList", "requestId"]
                    }
                  },
                  "required": ["code", "data"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/network/protect/{uid}/configLayer4RuleBakModePolicy": {
      "post": {
        "tags": ["Anti-DDoS"],
        "summary": "Config Back-to-origin Settings",
        "operationId": "ConfigBackToOriginSettings",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "schema": {
              "type": "string"
            },
            "example": "292733187643212169",
            "required": true,
            "description": "DNS account uid"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "string",
                    "example": 292733187643212160
                  },
                  "instanceId": {
                    "type": "string",
                    "example": "ddos-25d832be-05c0-4d31-be38-e880f6d64e12"
                  },
                  "bakMode": {
                    "type": "integer",
                    "enum": [0, 1],
                    "example": 1
                  },
                  "protocol": {
                    "type": "string",
                    "enum": ["tcp", "udp"],
                    "example": "tcp"
                  },
                  "frontendPort": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "example": 80
                  },
                  "backendPort": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "example": 80
                  },
                  "currentRsIndex": {
                    "type": "integer",
                    "enum": [1, 2],
                    "example": 1
                  },
                  "priRealServer": {
                    "type": "string",
                    "example": "121.70.168.58"
                  },
                  "secRealServer": {
                    "type": "string",
                    "example": "121.70.168.58"
                  }
                },
                "required": [
                  "uid",
                  "instanceId",
                  "bakMode",
                  "protocol",
                  "frontendPort"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Configured successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/console_secure/antiddos/v1/cad/config/dns/{uid}/network-diagram.yaml": {
      "get": {
        "tags": ["Anti-DDoS"],
        "summary": "Retrieve Network Diagram",
        "operationId": "GetDNSNetworkDiagram",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "The DNS UID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 292733182391123140
          },
          {
            "name": "instanceId",
            "in": "query",
            "description": "The instance ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ddos-dummy"
          },
          {
            "name": "domain",
            "in": "query",
            "description": "The domain, e.g., www.example.com.",
            "schema": {
              "type": "string"
            },
            "example": "example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response, HTML string content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "<html>...</html>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/company/{companyUsername}/connections/directConnectPartner/AWS/layer2": {
      "put": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "srcPortId",
                  "destPortId",
                  "speed",
                  "partner",
                  "type",
                  "duration",
                  "durationUnit",
                  "paymentType"
                ],
                "example": {
                  "name": "amazon",
                  "srcPortId": "5de6f8601693740b2c852398",
                  "destPortId": "5de6f85d1693740b2c852394",
                  "speed": 100,
                  "partner": {
                    "account": "xx-3434-yy-6"
                  },
                  "type": "LAYER2",
                  "duration": 1,
                  "durationUnit": "y",
                  "paymentType": "invoice",
                  "evergreen": true
                },
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the AWS Cloud."
                  },
                  "srcPortId": {
                    "type": "string",
                    "description": "The portId of the port from your company that you want to connect from."
                  },
                  "destPortId": {
                    "type": "string",
                    "description": "The AWS destination port ID."
                  },
                  "speed": {
                    "type": "integer",
                    "description": "The speed of the connection in Mbps."
                  },
                  "partner": {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "string",
                        "example": "xx-3434-yy-6",
                        "description": "Your AWS account ID."
                      }
                    },
                    "required": ["account"]
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of connection.",
                    "enum": ["LAYER2"]
                  },
                  "duration": {
                    "type": "integer",
                    "description": "The duration of the connection."
                  },
                  "durationUnit": {
                    "type": "string",
                    "enum": ["y", "m"],
                    "description": "The unit of duration."
                  },
                  "classOfService": {
                    "type": "string",
                    "enum": ["SILVER"],
                    "description": "The class of service of the connection."
                  },
                  "paymentType": {
                    "type": "string",
                    "enum": ["invoice"],
                    "description": "The payment method used."
                  },
                  "evergreen": {
                    "type": "boolean",
                    "description": "Set to `true` if you choose to have your connection and payment continue on a month to month basis at the end of your selected duration, else set to `false`."
                  },
                  "discountCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The username of the company creating the connection.",
            "in": "path",
            "example": "acme",
            "name": "companyUsername",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["AWS Direct Connect"],
        "description": "Prerequisites\n\n* Your company has been verified on the Console Connect platform.\n\n* The authenticated user account has Network Admin permissions.\n\n* The source port is ACTIVE.\n\n* You are requesting paymentType \"invoice\", or, if requesting paymentType \"plan\", the subscription associated with the port has sufficient entitlement to complete the request.",
        "operationId": "create-an-AWS-Direct-Connect-Partner-Connection",
        "summary": "Create a Layer 2 AWS Direct Connect Partner connection"
      }
    },
    "/api/company/{username}/connections/directConnectPartner/AZURE/layer2/create": {
      "put": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "summary": "Create Azure Layer 2 connection",
        "operationId": "Create-Azure-connection",
        "description": "After creating a connection request via the Azure dashboard and generating a service key, create the connection by submitting the service key, speed, name and source port.\n\nAzure DirectConnect Partner connections require redundancy - there are always two destination ports.\n\n> Because Azure connections require redundancy, this endpoint creates a\n> 'GROUP_LAYER2' connection that groups two 'LAYER2' subconnections rather \n> than a regular 'LAYER2' connection.",
        "tags": ["Azure ExpressRoute"],
        "parameters": [
          {
            "name": "username",
            "description": "The username of the company.",
            "in": "path",
            "example": "Acme",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "azureServiceKey": "your_key_here",
                "name": "Azure ExpressRoute",
                "srcPort": [
                  {
                    "portId": "5893d943878d635dde318022"
                  }
                ],
                "speed": 100,
                "paymentType": "payg"
              },
              "schema": {
                "type": "object",
                "properties": {
                  "azureServiceKey": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "srcPort": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "portId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "speed": {
                    "type": "number"
                  },
                  "paymentType": {
                    "type": "string"
                  },
                  "discountCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/company/{username}/connections/directConnectPartner/AZURE/layer2/{connectionId}/peering/{peeringType}(PUBLIC|PRIVATE|MICROSOFT)": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "summary": "Update an Azure connection's peering config",
        "operationId": "Update-&-create-an-Azure-connection-peering-config",
        "description": "Use this endpoint to update your peering information with the three Azure services:\n\nType      | Description\n----------|---------------------\nPUBLIC    | Azure services available via public IP address. Examples include Azure storage, Azure SQL databases Azure Active Directory and Azure websites.\nPRIVATE   | Private Azure services, not available via public IP address. Examples include Azure virtual machines and cloud services hosted within a virtual network.\nMICROSOFT | Other Microsoft services offered via public IP. Examples include Office 365.\n\n> You can not call this endpoint before the connection has been provisioned (before the connection status is `ACTIVE`)",
        "tags": ["Azure ExpressRoute"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username of the company that created the connection.",
            "required": true,
            "example": "Acme",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "The ObjectID from the _Create Azure connection_ endpoint.",
            "required": true,
            "example": "507f1f77bcf86cd799439011",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "peeringType",
            "in": "path",
            "description": "The type of peering i.e Private Azure (PRIVATE), Public Azure (PUBLIC) or Microsoft / Office365 (MICROSOFT)",
            "required": true,
            "example": "PRIVATE",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "summary": "Read an Azure connection's peering config",
        "operationId": "Read-an-Azure-connection-peering-config",
        "description": "Read an Azure connection's peering config from the system. Note that if you have recently changed this information in the Azure dashboard it may take some time to propagate back to Console Connect.\n\n#### syncStatus\n\nPeering sync status can be one of the following values:\n\nsyncStatus | Description\n-----------|---------------------\nPENDING    | The request has been sent to the system\nSYNCING    | The system is syncing the configuration with Azure\nSYNCED     | The configuration is active in Azure\n\n> Note that 'advertisedPublicPrefixes' and 'routingRegistryName' are only used for configs of type `MICROSOFT`.",
        "tags": ["Azure ExpressRoute"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username of the company that created the connection.",
            "required": true,
            "example": "Acme",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "The ObjectID from the _Create Azure connection_ endpoint.",
            "required": true,
            "example": "507f1f77bcf86cd799439011",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "peeringType",
            "in": "path",
            "description": "The type of peering i.e Private Azure (PRIVATE), Public Azure (PUBLIC) or Microsoft / Office365 (MICROSOFT)",
            "required": true,
            "example": "PRIVATE",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "summary": "Delete an Azure connection's peering config",
        "operationId": "Delete-an-Azure-connection-peering-config",
        "description": "",
        "tags": ["Azure ExpressRoute"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username of the company that created the connection.",
            "required": true,
            "example": "Acme",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "The ObjectID from the _Create Azure connection_ endpoint.",
            "required": true,
            "example": "507f1f77bcf86cd799439011",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "peeringType",
            "in": "path",
            "description": "The type of peering i.e Private Azure (PRIVATE), Public Azure (PUBLIC) or Microsoft / Office365 (MICROSOFT)",
            "required": true,
            "example": "PRIVATE",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/api/company/{username}/connections/directConnectPartner/AZURE/serviceKey": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "summary": "Verify the key",
        "operationId": "Verify-the-key",
        "description": "You can use this endpoint to verify and retrieve information from the service key before you create the connection.",
        "tags": ["Azure ExpressRoute"],
        "parameters": [
          {
            "name": "username",
            "description": "The username of the company.",
            "in": "path",
            "example": "Acme",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "azureServiceKey": "example-service-key"
              },
              "schema": {
                "type": "object",
                "properties": {
                  "azureServiceKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app-user/{companyId}/connections/cloud/IBM": {
      "post": {
        "parameters": [
          {
            "description": "The ID of the company creating the connection.",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the new connection."
                  },
                  "srcPortId": {
                    "type": "string",
                    "description": "The source port ID."
                  },
                  "destPortId": {
                    "type": "string",
                    "description": "The source port ID."
                  },
                  "speed": {
                    "type": "number",
                    "description": "The connection speed in Mbps."
                  },
                  "paymentType": {
                    "type": "string",
                    "enum": ["creditcard", "invoice"],
                    "description": "The payment method."
                  },
                  "duration": {
                    "type": "number",
                    "description": "The duration the service was ordered for, in conjunction with durationUnit.  The maximum duration by unit is: days: 6; weeks: 3; month: 36; years:3"
                  },
                  "durationUnit": {
                    "type": "string",
                    "enum": ["d", "w", "m", "y"],
                    "description": "The unit of duration the service was ordered for, in conjunction with duration.  'd' for days, 'w' for weeks, 'm' for months, 'y' for years."
                  },
                  "partnerAccountId": {
                    "type": "string",
                    "description": "The IBM account id"
                  },
                  "discountCode": {
                    "type": "string"
                  }
                },
                "example": {
                  "duration": 6,
                  "durationUnit": "d",
                  "paymentType": "plan",
                  "partnerAccountId": "62f317aea1562f317aea1c3",
                  "srcPortId": "10274392jd91023j0",
                  "destPortId": "IBM_PORT_ID",
                  "speed": 50,
                  "name": "my connection"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "example": {
                  "results": {
                    "connectionProvisioningId": "fd64aa97",
                    "connection": {
                      "id": "5e4cb41e8c47508c84bdb7af",
                      "srcCompanyId": "5e4cb418ab1dbe8c8476163b"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "number"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "idReqired": {
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "partnerAccountId is a required arg"
                      }
                    }
                  },
                  "srcPortNotActive": {
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Cannot find an ACTIVE source port"
                      }
                    }
                  },
                  "destPortNotActive": {
                    "value": {
                      "error": {
                        "code": 400,
                        "message": "Cannot find an ACTIVE destination port"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["IBM Cloud Direct Link"],
        "description": "Prerequisites\n\n* Your company has been verified on the Console Connect platform.\n\n* The authenticated user account has Network Admin permissions.\n\n* The source port is ACTIVE and has enough available capacity to support the new connection.\n\n* You are requesting paymentType \"plan\" (invoice not supported yet), and have sufficient entitlements on your plan to support the connection.",
        "operationId": "Create-a-new-IBM-Cloud-Direct-Link",
        "summary": "Create a new IBM Cloud Direct Link"
      }
    },
    "/app-user/{companyId}/connections/{connectionId}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the company deleting the connection.",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the connection to be deleted.",
            "example": "5e4cb41e8c47508c84bdb7af",
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "headers": {}
          }
        },
        "tags": ["IBM Cloud Direct Link"],
        "description": "Using this endpoint will \n\n* Delete your connection between the Console Connect plaftorm and IBM Cloud\n\n* Request the deletion of the IBM Direct Link on your behalf\n\nRemember to approve the deletion request in your IBM Cloud Dashboard to avoid extra billing charges.",
        "operationId": "Delete-an-IBM-Cloud-Direct-Link",
        "summary": "Delete an IBM Cloud Direct Link"
      }
    },
    "/api/company/{companyName}/connections/directConnectPartner/GCE/layer2": {
      "put": {
        "parameters": [
          {
            "description": "The username of the company creating the connection.",
            "in": "path",
            "example": "Acme",
            "name": "companyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The connection type, typically 'LAYER_2'."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the new connection."
                  },
                  "srcPortId": {
                    "type": "string",
                    "description": "The source port id."
                  },
                  "destPortId": {
                    "type": "string",
                    "description": "The destination port id"
                  },
                  "speed": {
                    "type": "number",
                    "description": "The speed of the connection in Mbps."
                  },
                  "paymentType": {
                    "type": "string",
                    "enum": ["creditcard", "invoice"],
                    "description": "The payment method."
                  },
                  "partner": {
                    "type": "object",
                    "properties": {
                      "region": {
                        "type": "string",
                        "description": ""
                      },
                      "pairingKeys": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": ""
                        }
                      },
                      "destPortIds": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": ""
                        }
                      }
                    }
                  },
                  "discountCode": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "type": "LAYER2",
                "name": "Google Connection",
                "srcPortId": "5de874f10d83430256e31f8c",
                "destPortId": "5de874ee0d83430256e31f88",
                "paymentType": "invoice",
                "speed": 500,
                "partner": {
                  "destPortIds": [
                    "5de874ee0d83430256e31f88",
                    "5de874ee0d83430256e31f89"
                  ],
                  "pairingKeys": [
                    "765ebb97-329e-43a8-9b94-8b0b4db7ab2d/europe-west1/1",
                    "69ffada6-a3c1-42c6-ad84-8794d6be30bd/europe-west1/2"
                  ],
                  "region": "europe-west1"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "5de874f229177602561b2bb0",
                  "version": "1",
                  "srcPortId": "5de874f10d83430256e31f8c",
                  "destPortId": "5de874ee0d83430256e31f88",
                  "srcControllerId": null,
                  "destControllerId": null,
                  "srcCompanyId": "5de874ef9c84f90256ba370f",
                  "destCompanyId": "5de874e89c84f90256ba370d",
                  "srcCompany": {
                    "createdAt": "2019-12-05T03:09:35.388Z",
                    "updatedAt": "2019-12-05T03:09:38.130Z",
                    "username": "company1",
                    "__v": 0,
                    "popIds": [],
                    "stats": {
                      "members": 1,
                      "interconnections": 0,
                      "followers": 0,
                      "following": 0,
                      "privateArticles": 0,
                      "privateEvents": 0,
                      "privatePosts": 0,
                      "articles": 0,
                      "events": 0,
                      "posts": 0
                    },
                    "company": {
                      "parentIds": [],
                      "fax": null,
                      "phone": null,
                      "addresses": [],
                      "privacy": [{}],
                      "zip": null,
                      "state": null,
                      "city": null,
                      "address": null,
                      "last": null,
                      "first": null,
                      "clientId": null,
                      "regionalInternetRegistry": [],
                      "businessRegistrationCertRejectedReason": null,
                      "businessRegistrationCertVerified": "VERIFIED",
                      "businessRegistrationCertUploadedAt": null,
                      "businessRegistrationCertReference": null,
                      "registeredName": null,
                      "dateFounded": null,
                      "companySize": null,
                      "businessType": null,
                      "industry": null,
                      "emailDomains": [{}],
                      "website": null
                    },
                    "system": {
                      "welcomeMessage": null
                    },
                    "deletedAt": null,
                    "deleted": false,
                    "verified": true,
                    "tags": [],
                    "status": "ACTIVE",
                    "capabilities": {
                      "layer3Regions": [],
                      "layer2Regions": [{}],
                      "layer3Metros": [],
                      "layer2Metros": [{}],
                      "layer3": false,
                      "layer2": true
                    },
                    "displayOrder": -299,
                    "officeAddress": null,
                    "phone": null,
                    "groups": [],
                    "optIntoMarketingEmail": false,
                    "location": null,
                    "legalEntityId": null,
                    "summary": null,
                    "headline": null,
                    "background": null,
                    "avatarId": null,
                    "avatar": null,
                    "name": "wee-care",
                    "isSupport": false,
                    "type": "COMPANY",
                    "companies": [],
                    "id": "5de874ef9c84f90256ba370f",
                    "online": false
                  },
                  "destCompany": {
                    "createdAt": "2019-12-05T03:09:28.490Z",
                    "updatedAt": "2019-12-05T03:09:34.967Z",
                    "username": "gce",
                    "__v": 1,
                    "popIds": [],
                    "stats": {
                      "members": 1,
                      "interconnections": 0,
                      "followers": 0,
                      "following": 0,
                      "privateArticles": 0,
                      "privateEvents": 0,
                      "privatePosts": 0,
                      "articles": 0,
                      "events": 0,
                      "posts": 0
                    },
                    "directConnectPartner": {
                      "type": "GCE",
                      "verified": true
                    },
                    "company": {
                      "parentIds": [],
                      "fax": null,
                      "phone": null,
                      "addresses": [],
                      "privacy": [{}],
                      "zip": null,
                      "state": null,
                      "city": null,
                      "address": null,
                      "last": null,
                      "first": null,
                      "clientId": null,
                      "regionalInternetRegistry": [],
                      "businessRegistrationCertRejectedReason": null,
                      "businessRegistrationCertVerified": "VERIFIED",
                      "businessRegistrationCertUploadedAt": null,
                      "businessRegistrationCertReference": null,
                      "registeredName": null,
                      "dateFounded": null,
                      "companySize": null,
                      "businessType": null,
                      "industry": null,
                      "emailDomains": [{}],
                      "website": null
                    },
                    "system": {
                      "welcomeMessage": null
                    },
                    "deletedAt": null,
                    "deleted": false,
                    "verified": true,
                    "tags": [],
                    "status": "ACTIVE",
                    "capabilities": {
                      "layer3Regions": [],
                      "layer2Regions": [{}],
                      "layer3Metros": [],
                      "layer2Metros": [{}],
                      "layer3": false,
                      "layer2": true
                    },
                    "displayOrder": -299,
                    "officeAddress": null,
                    "phone": null,
                    "groups": [],
                    "optIntoMarketingEmail": false,
                    "location": null,
                    "legalEntityId": null,
                    "summary": null,
                    "headline": null,
                    "background": null,
                    "avatarId": null,
                    "avatar": null,
                    "name": "gce",
                    "isSupport": false,
                    "type": "COMPANY",
                    "companies": [],
                    "id": "5de874e89c84f90256ba370d",
                    "online": false
                  },
                  "srcRegionId": "",
                  "destRegionId": "",
                  "name": "Google Connection",
                  "request": {
                    "status": null,
                    "destMetroId": null,
                    "speed": null,
                    "srcApproval": null,
                    "destApproval": null,
                    "updatedAt": null,
                    "read": false
                  },
                  "status": "ACTIVE",
                  "paymentType": "plan",
                  "type": "GROUP_LAYER2",
                  "partner": {
                    "speed": 500,
                    "type": "GCE",
                    "subtype": "NONE",
                    "errorMessage": null,
                    "connectionId": null,
                    "interconnectId": null,
                    "account": null,
                    "asnId": null,
                    "destPortIds": [
                      "5de874ee0d83430256e31f88",
                      "5de874ee0d83430256e31f89"
                    ],
                    "crossconnectionStatus": "ENABLED",
                    "provisioningStatus": "PROVISIONED",
                    "syncStatus": "NONE",
                    "pairingKey": null,
                    "pairingKeys": [],
                    "secretId": null,
                    "secretKey": null,
                    "gatewayId": null,
                    "vpcId": null,
                    "region": "hk"
                  },
                  "durationUnit": null,
                  "duration": null,
                  "tag": null,
                  "destTag": null,
                  "srcVlan": {
                    "service": null,
                    "customer": []
                  },
                  "destVlan": {
                    "service": null,
                    "customer": []
                  },
                  "srcUntagged": false,
                  "destUntagged": false,
                  "srcQinQ": false,
                  "destQinQ": false,
                  "srcConfigTag": null,
                  "destConfigTag": null,
                  "speed": {
                    "value": 400,
                    "name": "400 Mbps"
                  },
                  "errorReason": null,
                  "cdrBillingType": "METRO",
                  "parentId": null,
                  "subconnectionIds": {
                    "primary": ["5de874f229177602561b2bae"],
                    "secondary": ["5de874f229177602561b2baf"]
                  },
                  "importedAt": null,
                  "importer": null,
                  "statusChangedAt": "2019-12-05T03:09:38.796Z",
                  "activeChangedAt": null,
                  "firstActiveAt": null,
                  "maintenanceMode": false,
                  "updatedAt": "2019-12-05T03:09:38.861Z",
                  "createdAt": "2019-12-05T03:09:38.861Z",
                  "deleted": false,
                  "deletedAt": null,
                  "scheduled": false,
                  "scheduledTaskList": [],
                  "paymentTransactionId": null,
                  "salesRecordId": null,
                  "payg": false,
                  "billingType": null,
                  "classOfService": "BRONZE",
                  "typeFriendly": "Google Direct Connect",
                  "isReceiver": false,
                  "isCreator": true,
                  "subconnections": [
                    {
                      "id": "5de874f229177602561b2bae",
                      "version": "1",
                      "srcPortId": "5de874f10d83430256e31f8c",
                      "destPortId": "5de874ee0d83430256e31f88",
                      "srcControllerId": null,
                      "destControllerId": null,
                      "srcCompanyId": "5de874ef9c84f90256ba370f",
                      "destCompanyId": "5de874e89c84f90256ba370d",
                      "srcCompany": [{}],
                      "destCompany": [{}],
                      "srcRegionId": null,
                      "destRegionId": null,
                      "name": "Google Connection -  Sub 0",
                      "request": [{}],
                      "status": "ACTIVE",
                      "paymentType": "plan",
                      "type": "LAYER2",
                      "partner": [{}],
                      "durationUnit": null,
                      "duration": null,
                      "tag": null,
                      "destTag": null,
                      "srcVlan": [{}],
                      "destVlan": [{}],
                      "srcUntagged": false,
                      "destUntagged": false,
                      "srcQinQ": false,
                      "destQinQ": false,
                      "srcConfigTag": null,
                      "destConfigTag": null,
                      "speed": [{}],
                      "errorReason": null,
                      "cdrBillingType": "METRO",
                      "alertUtilizationThresholdUserIds": null,
                      "alertUtilization": null,
                      "parentId": "5de874f229177602561b2bb0",
                      "subconnectionIds": [{}],
                      "importedAt": null,
                      "importer": null,
                      "statusChangedAt": "2019-12-05T03:09:38.866Z",
                      "activeChangedAt": "2019-12-05T03:09:38.866Z",
                      "firstActiveAt": "2019-12-05T03:09:38.866Z",
                      "maintenanceMode": false,
                      "updatedAt": "2019-12-05T03:09:38.866Z",
                      "createdAt": "2019-12-05T03:09:38.815Z",
                      "deleted": false,
                      "deletedAt": null,
                      "scheduled": false,
                      "scheduledTaskList": [],
                      "paymentTransactionId": null,
                      "salesRecordId": null,
                      "payg": null,
                      "billingType": null,
                      "classOfService": "BRONZE",
                      "srcVlanRequest": null,
                      "destVlanRequest": null,
                      "typeFriendly": "Google Direct Connect",
                      "isReceiver": false,
                      "isCreator": true,
                      "subconnections": [],
                      "destPort": [{}],
                      "srcTag": null,
                      "destPorts": [{}],
                      "srcPorts": [],
                      "port": [{}]
                    },
                    {
                      "id": "5de874f229177602561b2baf",
                      "version": "1",
                      "srcPortId": "5de874f10d83430256e31f8c",
                      "destPortId": "5de874ee0d83430256e31f89",
                      "srcControllerId": null,
                      "destControllerId": null,
                      "srcCompanyId": "5de874ef9c84f90256ba370f",
                      "destCompanyId": "5de874e89c84f90256ba370d",
                      "srcCompany": [{}],
                      "destCompany": [{}],
                      "srcRegionId": null,
                      "destRegionId": null,
                      "name": "Google Connection -  Sub 1",
                      "request": [{}],
                      "status": "ACTIVE",
                      "paymentType": "plan",
                      "type": "LAYER2",
                      "partner": [{}],
                      "durationUnit": null,
                      "duration": null,
                      "tag": null,
                      "destTag": null,
                      "srcVlan": [{}],
                      "destVlan": [{}],
                      "srcUntagged": false,
                      "destUntagged": false,
                      "srcQinQ": false,
                      "destQinQ": false,
                      "srcConfigTag": null,
                      "destConfigTag": null,
                      "speed": [{}],
                      "errorReason": null,
                      "cdrBillingType": "METRO",
                      "alertUtilizationThresholdUserIds": null,
                      "alertUtilization": null,
                      "parentId": "5de874f229177602561b2bb0",
                      "subconnectionIds": [{}],
                      "importedAt": null,
                      "importer": null,
                      "statusChangedAt": "2019-12-05T03:09:38.867Z",
                      "activeChangedAt": "2019-12-05T03:09:38.867Z",
                      "firstActiveAt": "2019-12-05T03:09:38.867Z",
                      "maintenanceMode": false,
                      "updatedAt": "2019-12-05T03:09:38.867Z",
                      "createdAt": "2019-12-05T03:09:38.825Z",
                      "deleted": false,
                      "deletedAt": null,
                      "scheduled": false,
                      "scheduledTaskList": [],
                      "paymentTransactionId": null,
                      "salesRecordId": null,
                      "payg": null,
                      "billingType": null,
                      "classOfService": "BRONZE",
                      "srcVlanRequest": null,
                      "destVlanRequest": null,
                      "typeFriendly": "Google Direct Connect",
                      "isReceiver": false,
                      "isCreator": true,
                      "subconnections": [],
                      "destPort": [{}],
                      "srcTag": null,
                      "destPorts": [{}],
                      "srcPorts": [],
                      "port": [{}]
                    }
                  ],
                  "destPort": {
                    "dcpCompanyId": null,
                    "name": "gce1",
                    "speed": 1000,
                    "speedOverprovisioningFactor": 1,
                    "singleService": false,
                    "tags": [],
                    "locationId": null,
                    "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                    "popId": null,
                    "metroId": "d466b388d3e9ee0a92177910",
                    "status": "ACTIVE",
                    "linkState": "UNKNOWN",
                    "linkStateUpSince": null,
                    "linkStateSyncedAt": null,
                    "type": "DCP",
                    "mediaType": "SMF",
                    "partner": {
                      "type": "GCE",
                      "regionNames": [{}],
                      "connectionSpeeds": [{}],
                      "partnerPort": "port"
                    },
                    "ip": {
                      "ipv4": null,
                      "ipv6": null
                    },
                    "capabilities": {
                      "model6Limit": false,
                      "model6LimitNumber": null
                    },
                    "activeChangedAt": null,
                    "firstActiveAt": null,
                    "updatedAt": "2019-12-05T03:09:34.409Z",
                    "createdAt": "2019-12-05T03:09:34.409Z",
                    "deleted": false,
                    "deletedAt": null,
                    "importedAt": null,
                    "importer": null,
                    "salesRecordId": null,
                    "paymentType": "plan",
                    "payg": false,
                    "onboarded": null,
                    "onboardedBy": null,
                    "onboardedAt": null,
                    "onboardedStatus": "AWAITING_PROCESSING",
                    "onboardedStatusDetail": null,
                    "onboardedDeviceName": null,
                    "onboardedInterfaceName": null,
                    "onboardedAllocatedBandwidth": null,
                    "billingId": null,
                    "vlanRanges": [],
                    "iciLink": "A",
                    "supportedServices": [],
                    "cosTransparency": null,
                    "cosMapping": {
                      "GOLD": [],
                      "SILVERPLUS": [],
                      "SILVER": [],
                      "BRONZE": []
                    },
                    "id": "5de874ee0d83430256e31f88",
                    "accessCircuit": null,
                    "companyId": "5de874e89c84f90256ba370d"
                  },
                  "srcTag": null,
                  "destPorts": [
                    {
                      "dcpCompanyId": null,
                      "name": "gce1",
                      "speed": 1000,
                      "speedOverprovisioningFactor": 1,
                      "singleService": false,
                      "tags": [],
                      "locationId": null,
                      "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                      "popId": null,
                      "metroId": "d466b388d3e9ee0a92177910",
                      "status": "ACTIVE",
                      "linkState": "UNKNOWN",
                      "linkStateUpSince": null,
                      "linkStateSyncedAt": null,
                      "type": "DCP",
                      "mediaType": "SMF",
                      "partner": [{}],
                      "ip": [{}],
                      "capabilities": [{}],
                      "activeChangedAt": null,
                      "firstActiveAt": null,
                      "updatedAt": "2019-12-05T03:09:34.409Z",
                      "createdAt": "2019-12-05T03:09:34.409Z",
                      "deleted": false,
                      "deletedAt": null,
                      "importedAt": null,
                      "importer": null,
                      "salesRecordId": null,
                      "paymentType": "plan",
                      "payg": false,
                      "onboarded": null,
                      "onboardedBy": null,
                      "onboardedAt": null,
                      "onboardedStatus": "AWAITING_PROCESSING",
                      "onboardedStatusDetail": null,
                      "onboardedDeviceName": null,
                      "onboardedInterfaceName": null,
                      "onboardedAllocatedBandwidth": null,
                      "billingId": null,
                      "vlanRanges": [],
                      "iciLink": "A",
                      "supportedServices": [],
                      "cosTransparency": null,
                      "cosMapping": [{}],
                      "id": "5de874ee0d83430256e31f88",
                      "accessCircuit": null,
                      "companyId": "5de874e89c84f90256ba370d"
                    },
                    {
                      "dcpCompanyId": null,
                      "name": "gce2",
                      "speed": 1000,
                      "speedOverprovisioningFactor": 1,
                      "singleService": false,
                      "tags": [],
                      "locationId": null,
                      "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                      "popId": null,
                      "metroId": "d466b388d3e9ee0a92177910",
                      "status": "ACTIVE",
                      "linkState": "UNKNOWN",
                      "linkStateUpSince": null,
                      "linkStateSyncedAt": null,
                      "type": "DCP",
                      "mediaType": "SMF",
                      "partner": [{}],
                      "ip": [{}],
                      "capabilities": [{}],
                      "activeChangedAt": null,
                      "firstActiveAt": null,
                      "updatedAt": "2019-12-05T03:09:34.952Z",
                      "createdAt": "2019-12-05T03:09:34.952Z",
                      "deleted": false,
                      "deletedAt": null,
                      "importedAt": null,
                      "importer": null,
                      "salesRecordId": null,
                      "paymentType": "plan",
                      "payg": false,
                      "onboarded": null,
                      "onboardedBy": null,
                      "onboardedAt": null,
                      "onboardedStatus": "AWAITING_PROCESSING",
                      "onboardedStatusDetail": null,
                      "onboardedDeviceName": null,
                      "onboardedInterfaceName": null,
                      "onboardedAllocatedBandwidth": null,
                      "billingId": null,
                      "vlanRanges": [],
                      "iciLink": "A",
                      "supportedServices": [],
                      "cosTransparency": null,
                      "cosMapping": [{}],
                      "id": "5de874ee0d83430256e31f89",
                      "accessCircuit": null,
                      "companyId": "5de874e89c84f90256ba370d"
                    }
                  ],
                  "srcPorts": [],
                  "port": {
                    "dcpCompanyId": null,
                    "name": "Vincent",
                    "speed": 10000,
                    "speedOverprovisioningFactor": 1,
                    "singleService": false,
                    "tags": [],
                    "locationId": null,
                    "dataCenterFacilityId": "5126c9f1111e15a24a066130",
                    "popId": null,
                    "metroId": "d466b388d3e9ee0a92177910",
                    "status": "ACTIVE",
                    "linkState": "UNKNOWN",
                    "linkStateUpSince": null,
                    "linkStateSyncedAt": null,
                    "type": "PHYSICAL",
                    "mediaType": "SMF",
                    "partner": {
                      "type": "NONE",
                      "connectionSpeeds": []
                    },
                    "ip": {
                      "ipv4": null,
                      "ipv6": null
                    },
                    "capabilities": {
                      "model6Limit": false,
                      "model6LimitNumber": null
                    },
                    "activeChangedAt": "2019-12-05T03:09:37.743Z",
                    "firstActiveAt": "2019-12-05T03:09:37.733Z",
                    "updatedAt": "2019-12-05T03:09:37.446Z",
                    "createdAt": "2019-12-05T03:09:37.446Z",
                    "deleted": false,
                    "deletedAt": null,
                    "importedAt": null,
                    "importer": null,
                    "salesRecordId": null,
                    "paymentType": "plan",
                    "payg": false,
                    "onboarded": null,
                    "onboardedBy": null,
                    "onboardedAt": null,
                    "onboardedStatus": "AWAITING_PROCESSING",
                    "onboardedStatusDetail": null,
                    "onboardedDeviceName": null,
                    "onboardedInterfaceName": null,
                    "onboardedAllocatedBandwidth": null,
                    "billingId": null,
                    "vlanRanges": [],
                    "iciLink": "A",
                    "supportedServices": [],
                    "cosTransparency": null,
                    "cosMapping": {
                      "GOLD": [],
                      "SILVERPLUS": [],
                      "SILVER": [],
                      "BRONZE": []
                    },
                    "id": "5de874f10d83430256e31f8c",
                    "accessCircuit": null,
                    "companyId": "5de874ef9c84f90256ba370f"
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Google Cloud Engine"],
        "description": "Prerequisites\n\n* Your company has been verified on the Console Connect platform.\n\n* The authenticated user account has Network Admin permissions.\n\n* The source port is ACTIVE.\n\n* You are requesting paymentType \"invoice\", or, if requesting paymentType \"plan\", the subscription associated with the port has sufficient entitlements to complete the request.\n\nNote: Google Direct Connect Partner connections require redundancy - you must specify two destination ports when creating the connection. You must also specify the region name and two pairing keys from that region.",
        "operationId": "create-gce-connection-request",
        "summary": "Create a new L2 Google Compute Engine Direct Connect Partner connection"
      }
    },
    "/app-user/{companyId}/l3vpns": {
      "post": {
        "parameters": [
          {
            "description": "The id of the company",
            "example": "5ea242303962644b52fc4346",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "My CloudRouter",
                  "paymentMethod": "invoice",
                  "bandwidth": "500MB",
                  "duration": {
                    "quantity": 1,
                    "unit": "m"
                  }
                },
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Your CloudRouter name"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "description": "Payment Method"
                  },
                  "bandwidth": {
                    "type": "string",
                    "description": "Total bandwidth of all sites you intend to attach to this CloudRouter"
                  },
                  "duration": {
                    "type": "object",
                    "description": "Minimum contract duration. Service will continue month-to-month after complete",
                    "properties": {
                      "quantity": {
                        "type": "number",
                        "description": "Quantity of service duration, min duration by unit is 1 month"
                      },
                      "unit": {
                        "type": "string",
                        "description": "The unit of duration the service, 'm' for months, 'y' for years",
                        "example": "m or y"
                      }
                    }
                  },
                  "discountCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "paymentMethod",
                  "bandwidth",
                  "duration",
                  "quantity",
                  "unit"
                ]
              }
            }
          }
        },
        "description": "Prerequisites:\n\n* Obtain your company ID. You can call Search API (i.e. **GET** `https://api.consoleconnect.com/api/search?page=1&count=20&type=companies&q={companyName}`). See ***[Search](#tag/Search)*** API for more details. Or you can get both `companyName` and `companyId` in ***[Auth](#tag/Auth/operation/GetLoggedInUser)*** API\n* Use API key in the Authorization Bearer Token (see ***[API Key](#tag/Auth/operation/GetLoggedInUser)***)\n* The authenticated user account has L3VPN Create permissions.\n  * The user account has the **'Network Admin'**/**'NETWORKCONTROL'** role. This can be verified or assigned by a user who has '**Account Admin**' or '**User Admin**' permission via the user admin page in Console. You can check ***[here](https://app.consoleconnect.com/settings/members)***.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "My CloudRouter",
                  "status": "CREATING",
                  "id": "63e48134c3af0500151b59f3",
                  "paymentMethod": "invoice",
                  "duration": {
                    "quantity": 1,
                    "unit": "m"
                  },
                  "bandwidth": "500MB",
                  "companyId": "5ea242303962644b52fc4346",
                  "deletedAt": null,
                  "createdAt": "2023-02-09T05:14:28.759Z",
                  "updatedAt": "2023-02-09T05:14:28.760Z"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "summary": "Provision a new CloudRouter",
        "operationId": "Provision-a-new-CloudRouter",
        "tags": ["CloudRouter"]
      },
      "get": {
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company",
            "required": true,
            "example": "5e4cb418ab1dbe8c8476163b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "name": "CloudRouter TEST 01",
                    "status": "CREATED",
                    "id": "62e321167cfe65001510a9fb",
                    "paymentMethod": "invoice",
                    "duration": {
                      "quantity": 1,
                      "unit": "m"
                    },
                    "bandwidth": "500MB",
                    "companyId": "5d4d056242fbd3000ab4c01d",
                    "deletedAt": null,
                    "createdAt": "2022-07-28T23:51:50.063Z",
                    "updatedAt": "2022-10-28T02:15:25.989Z",
                    "sites": [],
                    "calculatedCapacity": {
                      "total": 500,
                      "used": 0,
                      "remaining": 500
                    }
                  },
                  {
                    "name": "CloudRouter Test 02",
                    "status": "CREATED",
                    "id": "63e098882befab00152995a8",
                    "paymentMethod": "invoice",
                    "duration": {
                      "quantity": 1,
                      "unit": "m"
                    },
                    "bandwidth": "1GB",
                    "companyId": "5d4d056242fbd3000ab4c01d",
                    "deletedAt": null,
                    "createdAt": "2023-02-06T06:04:56.110Z",
                    "updatedAt": "2023-02-06T06:04:57.193Z",
                    "sites": [
                      {
                        "id": "0949f0d2-d839-4d0c-b325-d2d36fed236e",
                        "companyId": "5d4d056242fbd3000ab4c01d",
                        "l3vpnId": "63e098882befcb00152995a8",
                        "name": "Cloud Router Test Site",
                        "type": "COMPANY",
                        "portId": null,
                        "slVlanId": null,
                        "rateLimit": {
                          "rate": 50,
                          "unit": "Mbps"
                        },
                        "mtu": null,
                        "classOfService": [
                          {
                            "name": "BRONZE",
                            "value": 100
                          }
                        ],
                        "redundancySiteType": "primary",
                        "redundancyLinkedSiteId": null,
                        "status": "ACTIVE",
                        "simPoolId": "7a7fcac6-7b70-4609-9fef-90dc20e86f1b",
                        "company_id": "5d4d056242fbd3000ab4c01d",
                        "l3vpn_id": "63e098882befcb00152995a8",
                        "sim_pool_id": "7a7fcac6-7b70-4609-9fef-90dc20e86f1b",
                        "deleted_at": null,
                        "created_at": "2023-02-09T04:21:59.243Z",
                        "updated_at": "2023-02-09T04:24:44.725Z",
                        "port_id": null,
                        "peers": []
                      }
                    ],
                    "calculatedCapacity": {
                      "total": 1000,
                      "used": 150,
                      "remaining": 850
                    }
                  }
                ],
                "schema": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string",
                      "description": "This is the id of the CloudRouter. This is the `vpnId` that you will be using in the Path Parameter when provisioning a new Site on an existing VPN (CloudRouter)"
                    },
                    "paymentMethod": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "object"
                    },
                    "bandwidth": {
                      "type": "string"
                    },
                    "companyId": {
                      "type": "string"
                    },
                    "deletedAt": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "sites": {
                      "type": "array",
                      "description": "Extract necessary information from the CloudRouter sites:\n\n  * `companyId` (string): your company id.\n\n  * `l3vpnId` (string): this is the Cloud Router's `vpnId`.\n\n  * `id` (string): this is the `siteId`. You will be needing this in the Path Parameter when deprovisioning a site of an existing CloudRouter."
                    },
                    "calculatedCapacity": {
                      "type": "object"
                    }
                  },
                  "title": "Company Valid Providers response schema",
                  "type": "object"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "summary": "Query existing CloudRouters",
        "operationId": "Query-existing-CloudRouters",
        "description": "",
        "tags": ["CloudRouter"]
      }
    },
    "/v2/companies": {
      "get": {
        "summary": "Find Valid Cloud Providers",
        "tags": ["CloudRouter"],
        "description": "Get the list of cloud providers.",
        "parameters": [
          {
            "description": "Should put a conditional value `isCloudProvider` to `true` to query the Valid Cloud Providers (see Example above)",
            "example": "{\"where\":{\"isCloudProvider\":true}}",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Alibaba": {
                    "summary": "Alibaba Cloud",
                    "value": [
                      {
                        "username": "alibaba_cloud",
                        "name": "Alibaba Cloud",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": null,
                        "categories": ["Cloud Service Provider"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "ALICLOUD",
                          "partnerName": "alicloud",
                          "companyType": "DCP",
                          "asn": {
                            "value": 45678,
                            "range": []
                          },
                          "bgpAuthority": "PCCWGLOBAL"
                        },
                        "company": {
                          "addresses": [
                            {
                              "geo": {
                                "type": "Point",
                                "coordinates": []
                              },
                              "registered": true,
                              "address": "123/F, Address street",
                              "city": "City",
                              "state": null,
                              "zip": "123456",
                              "country": "CN",
                              "email": null,
                              "phone": null
                            }
                          ],
                          "businessType": "Cloud Service Provider",
                          "website": "https://www.alibabacloud.com/",
                          "parentIds": [],
                          "registeredName": "Alibaba Cloud Computing Company",
                          "businessDevelopmentManagerTypePreference": "DATA"
                        },
                        "portsActive": 20,
                        "portsPending": 0,
                        "portsDisabled": 2,
                        "signedCompanyRefId": 12,
                        "external": [
                          {
                            "type": "INSIGHT",
                            "status": "UNSYNCED",
                            "id": "xxxxx"
                          },
                          {
                            "type": "HUBSPOT",
                            "status": "SYNCED",
                            "id": "xxxxx"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "deletedAt": null,
                        "createdAt": "2018-10-04T04:39:48.488Z",
                        "stats": {
                          "members": 1,
                          "followers": 13,
                          "following": 0,
                          "articles": 0,
                          "events": 0,
                          "posts": 0
                        },
                        "dataCenterFacility": {
                          "brandId": null
                        },
                        "verified": true,
                        "tags": ["Cloud service providers", "promoted"],
                        "location": null,
                        "summary": "Alibaba Cloud develops highly scalable cloud computing and data management services providing organizations with flexible, cost-effective solutions to meet their networking and information needs. As an Alibaba Cloud Express Connect Partner, Console Connect can provide real-time connectivity to the Alibaba Cloud in all global regions. For more information on how to connect to Alibaba Cloud visit: https://www.consoleconnect.com/clouds/alibaba-cloud/",
                        "headline": "Instant Provision to Alibaba Cloud",
                        "background": null,
                        "avatarId": "5f8xxxxxxxxxxxxxxxxxxxxx",
                        "oldAvatarId": "5bbxxxxxxxxxxxxxxxxxxxxx",
                        "verifiedIdentity": true,
                        "defaultPaymentType": "invoice",
                        "nnis": []
                      }
                    ]
                  },
                  "Amazon": {
                    "summary": "Amazon Web Services (AWS)",
                    "value": [
                      {
                        "username": "amazon",
                        "name": "Amazon Web Services (AWS)",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": null,
                        "categories": ["Cloud Service Provider"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "AWS",
                          "partnerName": "aws",
                          "companyType": "DCP",
                          "asn": {
                            "range": [65432, 65432]
                          },
                          "bgpAuthority": "PCCWGLOBAL"
                        },
                        "company": {
                          "businessType": "Cloud Service Provider",
                          "addresses": [
                            {
                              "geo": {
                                "coordinates": [],
                                "type": "Point"
                              },
                              "phone": null,
                              "email": "email@email.com",
                              "country": "US",
                              "zip": "123456",
                              "state": "WA",
                              "city": "City",
                              "address": "123/F, Address street",
                              "registered": false
                            }
                          ],
                          "parentIds": [],
                          "website": "https://aws.amazon.com",
                          "businessDevelopmentManagerTypePreference": "DATA"
                        },
                        "portsActive": 42,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "external": [
                          {
                            "id": "xxxxx",
                            "status": "SYNCED",
                            "type": "HUBSPOT"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "deletedAt": null,
                        "createdAt": "2018-03-13T00:51:41.579Z",
                        "stats": {
                          "members": 2,
                          "followers": 37,
                          "following": 0,
                          "articles": 0,
                          "events": 0,
                          "posts": 0
                        },
                        "dataCenterFacility": {},
                        "verified": true,
                        "tags": ["Cloud service providers", "promoted"],
                        "location": null,
                        "summary": "Amazon Web Services is the dominant cloud platform, with a global reach and a strong range of Infrastructure-as-a-Service (IaaS) offerings. Whether your organisation has adopted a hybrid or multi-cloud approach, PCCW Global’s SDN-powered Console Connect platform can provide real time access to the AWS cloud from enterprise locations around the world, as well as interconnect your AWS instance with your existing data centres and other clouds.\n\nAs AWS Direct Connect Partner, our customers can access AWS Direct Connect. We have established interconnect monitoring and are authorized to provision capacities greater than 500Mbps.\n\nFor more info, please refer to https://www.consoleconnect.com/clouds",
                        "headline": "Instant Provision to AWS",
                        "background": null,
                        "avatarId": "5f8xxxxxxxxxxxxxxxxxxxxx",
                        "oldAvatarId": "5acxxxxxxxxxxxxxxxxxxxxx",
                        "verifiedIdentity": true,
                        "defaultPaymentType": "invoice",
                        "nnis": []
                      }
                    ]
                  },
                  "Azure": {
                    "summary": "Microsoft Azure",
                    "value": [
                      {
                        "username": "azure",
                        "name": "Microsoft Azure",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": null,
                        "categories": ["Cloud Service Provider"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "AZURE",
                          "partnerName": "azure",
                          "companyType": "DCP",
                          "asn": {
                            "value": 45678,
                            "range": []
                          },
                          "bgpAuthority": "MICROSOFT"
                        },
                        "company": {
                          "addresses": [
                            {
                              "geo": {
                                "type": "Point",
                                "coordinates": []
                              },
                              "registered": true,
                              "address": "123/F, Address street",
                              "city": "City",
                              "state": "WA",
                              "zip": "123456",
                              "country": "US",
                              "phone": null
                            }
                          ],
                          "businessType": "Cloud Service Provider",
                          "website": "https://azure.microsoft.com",
                          "parentIds": [],
                          "registeredName": "Microsoft",
                          "businessDevelopmentManagerTypePreference": "DATA"
                        },
                        "portsActive": 18,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "external": [
                          {
                            "type": "INSIGHT",
                            "status": "UNSYNCED",
                            "id": "xxxxx"
                          },
                          {
                            "type": "HUBSPOT",
                            "status": "SYNCED",
                            "id": "xxxxxx"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "deletedAt": null,
                        "createdAt": "2018-06-08T02:33:31.537Z",
                        "stats": {
                          "members": 2,
                          "followers": 20,
                          "following": 0,
                          "articles": 0,
                          "events": 0,
                          "posts": 0
                        },
                        "dataCenterFacility": {},
                        "verified": true,
                        "tags": ["Cloud service providers", "promoted"],
                        "location": null,
                        "summary": "Microsoft Azure is a leading cloud provider and has a strong offering among organizations already invested in Microsoft software and services, such as those using Windows. Azure has a capable suite of service offerings and works hard to integrate with private data centres in hybrid cloud environments. As an ExpressRoute partner, Console Connect can provide real-time access to the Azure cloud from all enabled data centres around the world. For more information on how to connect to Azure visit: https://www.consoleconnect.com/clouds/microsoft-azure-direct-connect/",
                        "headline": "Instant Provision to Azure",
                        "background": null,
                        "avatarId": "5f8xxxxxxxxxxxxxxxxxxxxx",
                        "oldAvatarId": "5b2xxxxxxxxxxxxxxxxxxxxx",
                        "verifiedIdentity": true,
                        "defaultPaymentType": "invoice",
                        "nnis": []
                      }
                    ]
                  },
                  "Gamma": {
                    "summary": "Gamma Telecom Connections",
                    "value": [
                      {
                        "username": "gamma",
                        "name": "Gamma Telecom Connections",
                        "type": "COMPANY",
                        "overviewImage": null,
                        "categories": ["Cloud Service Provider", "UCaaS"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "Gamma",
                          "companyType": "B2B",
                          "asn": {
                            "value": 45678,
                            "range": []
                          },
                          "bgpAuthority": "PCCWGLOBAL"
                        },
                        "company": {
                          "addresses": [
                            {
                              "registered": false,
                              "address": "123/F, Address street",
                              "city": "City",
                              "state": null,
                              "zip": null,
                              "country": "GB",
                              "email": null,
                              "phone": null,
                              "geo": {
                                "type": "Point",
                                "coordinates": []
                              }
                            }
                          ],
                          "businessType": "Cloud Service Provider",
                          "registeredName": "Gamma Telecom",
                          "businessDevelopmentManagerTypePreference": "VOICE",
                          "partnerType": null,
                          "isIoTDemoCompany": false,
                          "parentIds": []
                        },
                        "portsActive": 2,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "businessRegistrationNumber": "4xxxxxxx",
                        "external": [
                          {
                            "id": "xxxxx",
                            "type": "HUBSPOT",
                            "status": "SYNCED"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "bundleCrossConnectChargeId": null,
                        "deletedAt": null,
                        "summary": "Gamma is a leading provider of Unified Communications as a Service (UCaaS) into the UK, Dutch, Spanish and German business markets, supplying communication solutions via our extensive network of trusted channel partners and also directly.\n\nThe combination of network investment, a digital-first approach and in-house development skills has enabled Gamma to develop a comprehensive portfolio of communications services with a significant amount of intellectual property, which has given us a heritage of disrupting the market with innovative and market-leading cloud-based services such as SIP Trunking and Hosted PBX in the UK.",
                        "headline": "Gamma Telecom",
                        "tags": ["promoted"],
                        "createdAt": "2023-11-09T13:33:07.502Z",
                        "stats": {
                          "members": 1,
                          "articles": 0,
                          "events": 0,
                          "followers": 2,
                          "following": 0,
                          "posts": 0
                        },
                        "dataCenterFacility": {},
                        "nnis": [],
                        "verified": false,
                        "verifiedIdentity": true,
                        "avatarId": "65exxxxxxxxxxxxxxxxxxxxx",
                        "defaultPaymentType": "invoice"
                      }
                    ]
                  },
                  "Google": {
                    "summary": "Google Cloud",
                    "value": [
                      {
                        "username": "google_cloud",
                        "name": "Google Cloud",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": null,
                        "categories": ["Cloud Service Provider"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "GOOGLE",
                          "partnerName": "google",
                          "companyType": "DCP",
                          "asn": {
                            "value": 45678
                          },
                          "bgpAuthority": "GOOGLE"
                        },
                        "company": {
                          "addresses": [
                            {
                              "geo": {
                                "coordinates": [],
                                "type": "Point"
                              },
                              "phone": null,
                              "email": null,
                              "country": "US",
                              "zip": null,
                              "state": null,
                              "city": "City",
                              "address": "123/F, Address street",
                              "registered": false
                            }
                          ],
                          "businessType": "Cloud Service Provider",
                          "website": "https://cloud.google.com/compute/",
                          "parentIds": [],
                          "businessDevelopmentManagerTypePreference": "DATA"
                        },
                        "portsActive": 62,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "external": [
                          {
                            "status": "UNSYNCED",
                            "id": null
                          },
                          {
                            "type": "HUBSPOT",
                            "status": "SYNCED",
                            "id": "xxxxx"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "deletedAt": null,
                        "createdAt": "2018-10-09T06:18:22.821Z",
                        "stats": {
                          "members": 2,
                          "followers": 170,
                          "following": 0,
                          "articles": 0,
                          "events": 0,
                          "posts": 0
                        },
                        "dataCenterFacility": {
                          "brandId": null
                        },
                        "verified": true,
                        "tags": ["promoted"],
                        "location": null,
                        "summary": "Google Cloud is one of the leading Platform-as-a-Service (PaaS) and Infrastructure-as-a-Service (IaaS) providers, with a strong presence in Machine Learning and AI. Through Google Cloud Partner Interconnect, Console Connect can provide real-time access to the Google Cloud Platform (GCP) from enterprise locations around the world, as well as interconnect your Google Cloud instance with your existing data centres by using Cloud Interconnect. For more information on how to connect to Google Cloud visit: https://www.consoleconnect.com/clouds/google-cloud/",
                        "headline": "Instant Provision to Google Cloud",
                        "background": null,
                        "avatarId": "5f8xxxxxxxxxxxxxxxxxxxxx",
                        "oldAvatarId": "5bbxxxxxxxxxxxxxxxxxxxxx",
                        "verifiedIdentity": true,
                        "defaultPaymentType": "invoice",
                        "nnis": []
                      }
                    ]
                  },
                  "Huawei": {
                    "summary": "Huawei Cloud",
                    "value": [
                      {
                        "username": "huaweicloud",
                        "name": "Huawei Cloud",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": null,
                        "categories": ["Cloud Service Provider"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "HUAWEI",
                          "partnerName": "huawei",
                          "companyType": "B2B",
                          "asn": {
                            "value": 45678,
                            "range": []
                          },
                          "bgpAuthority": "PCCWGLOBAL"
                        },
                        "company": {
                          "addresses": [
                            {
                              "geo": {
                                "coordinates": [],
                                "type": "Point"
                              },
                              "phone": "+86-1234-567-890",
                              "email": null,
                              "country": "CN",
                              "zip": null,
                              "state": null,
                              "city": "City",
                              "address": "123/F, Address street",
                              "registered": true
                            }
                          ],
                          "businessType": "Cloud Service Provider",
                          "website": "https://www.huaweicloud.com/en-us/",
                          "parentIds": [],
                          "registeredName": "Huawei",
                          "businessDevelopmentManagerTypePreference": "DATA"
                        },
                        "portsActive": 8,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "external": [
                          {
                            "type": "INSIGHT",
                            "status": "UNSYNCED",
                            "id": "xxxxx"
                          },
                          {
                            "type": "HUBSPOT",
                            "status": "SYNCED",
                            "id": "xxxxx"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "deletedAt": null,
                        "createdAt": "2020-08-17T10:35:12.623Z",
                        "stats": {
                          "members": 13,
                          "followers": 25,
                          "following": 0,
                          "articles": 0,
                          "events": 0,
                          "posts": 0
                        },
                        "dataCenterFacility": {
                          "brandId": null
                        },
                        "verified": false,
                        "tags": ["promoted"],
                        "location": null,
                        "summary": "Huawei Cloud provides reliable, secure, and cost-effective cloud services to empower applications, harness the power of data, and help organisations of all sizes grow in today’s intelligent world. As a Huawei Cloud Direct Connect partner, Console Connect can provide real time access to the Huawei Cloud from enterprise locations around the world, as well as interconnect your Huawei Cloud instance with your existing data centres and other clouds. For more information on how to connect to Huawei Cloud visit https://www.consoleconnect.com/clouds/connect-to-huawei-cloud/",
                        "headline": "Instant Provision to Huawei Cloud",
                        "background": null,
                        "avatarId": "601xxxxxxxxxxxxxxxxxxxxx",
                        "verifiedIdentity": true,
                        "nnis": [],
                        "defaultPaymentType": "invoice"
                      }
                    ]
                  },
                  "Ibm": {
                    "summary": "IBM Cloud",
                    "value": [
                      {
                        "username": "ibm",
                        "name": "IBM Cloud",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": null,
                        "categories": ["Cloud Service Provider"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "IBM",
                          "partnerName": "ibm",
                          "companyType": "DCP",
                          "asn": {
                            "value": 45678,
                            "range": []
                          },
                          "bgpAuthority": "PCCWGLOBAL"
                        },
                        "company": {
                          "addresses": [
                            {
                              "geo": {
                                "type": "Point",
                                "coordinates": []
                              },
                              "registered": true,
                              "address": "123/F, Address street",
                              "city": "City",
                              "state": "NY",
                              "zip": "12345",
                              "country": "US",
                              "email": null,
                              "phone": null,
                              "primary": true
                            }
                          ],
                          "businessType": "Cloud Service Provider",
                          "website": "https://cloud.ibm.com/",
                          "parentIds": [],
                          "registeredName": "IBM",
                          "businessDevelopmentManagerTypePreference": "DATA"
                        },
                        "portsActive": 26,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "external": [
                          {
                            "type": "HUBSPOT",
                            "status": "SYNCED",
                            "id": "xxxxx"
                          },
                          {
                            "type": "INSIGHT",
                            "status": "UNSYNCED",
                            "id": "xxxxx"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "deletedAt": null,
                        "createdAt": "2020-03-20T03:01:52.248Z",
                        "stats": {
                          "members": 1,
                          "followers": 8,
                          "following": 0,
                          "articles": 0,
                          "events": 0,
                          "posts": 0
                        },
                        "dataCenterFacility": {
                          "brandId": null
                        },
                        "verified": true,
                        "tags": ["Cloud service providers", "promoted"],
                        "location": null,
                        "summary": "IBM Cloud provides solutions that enable higher levels of compliance, security, and management, with proven architecture patterns and methods for rapid delivery for running mission-critical workloads. As an IBM Cloud Direct Link Service Provider, Console Connect can provide real-time access to the IBM Cloud from enterprise locations around the world, as well as interconnect your IBM Cloud instance with your existing data centres and other clouds. For more information on how to connect to IBM Cloud visit: https://www.consoleconnect.com/clouds/ibm-cloud/",
                        "headline": "Instant Provision to IBM Cloud",
                        "background": null,
                        "avatarId": "606xxxxxxxxxxxxxxxxxxxxx",
                        "oldAvatarId": "5ecxxxxxxxxxxxxxxxxxxxxx",
                        "verifiedIdentity": true,
                        "defaultPaymentType": "invoice",
                        "nnis": []
                      }
                    ]
                  },
                  "Oracle": {
                    "summary": "Oracle Cloud",
                    "value": [
                      {
                        "username": "oracle",
                        "name": "Oracle Cloud",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": null,
                        "categories": ["Cloud Service Provider"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "ORACLE",
                          "partnerName": "oracle",
                          "companyType": "DCP",
                          "asn": {
                            "value": 45678,
                            "range": []
                          },
                          "bgpAuthority": "PCCWGLOBAL"
                        },
                        "company": {
                          "addresses": [
                            {
                              "geo": {
                                "type": "Point",
                                "coordinates": []
                              },
                              "registered": true,
                              "address": "123/F, Address street",
                              "city": "City",
                              "state": "California",
                              "zip": null,
                              "country": "US",
                              "email": null,
                              "phone": null,
                              "primary": true
                            }
                          ],
                          "businessType": "Cloud Service Provider",
                          "website": "https://www.oracle.com/cloud/",
                          "parentIds": [],
                          "registeredName": "Oracle America, Inc",
                          "businessDevelopmentManagerTypePreference": "DATA",
                          "isIoTDemoCompany": false
                        },
                        "portsActive": 28,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "external": [
                          {
                            "type": "INSIGHT",
                            "status": "UNSYNCED",
                            "id": "xxxxx"
                          },
                          {
                            "type": "HUBSPOT",
                            "status": "SYNCED",
                            "id": "xxxxx"
                          },
                          {
                            "id": "xxxxx",
                            "type": "COGID",
                            "status": "UNSYNCED"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "deletedAt": null,
                        "createdAt": "2020-08-15T08:08:07.680Z",
                        "stats": {
                          "members": 10,
                          "followers": 27,
                          "following": 0,
                          "articles": 0,
                          "events": 0,
                          "posts": 0
                        },
                        "dataCenterFacility": {
                          "brandId": null
                        },
                        "verified": true,
                        "tags": ["promoted"],
                        "location": null,
                        "summary": "Oracle Cloud Infrastructure combines the elasticity and utility of public cloud with the granular control, security, and predictability of on-premises infrastructure to deliver high-performance and cost-effective infrastructure services. As an Oracle Cloud Fast Connect Global Partner, Console Connect can provide real-time access to Oracle Cloud infrastructure from any enabled data centre across the world. For more information on how to connect to Oracle Cloud visit: https://www.consoleconnect.com/clouds/connect-to-oracle-cloud/",
                        "headline": "Instant Provision to Oracle Cloud",
                        "background": null,
                        "avatarId": "5f8xxxxxxxxxxxxxxxxxxxxx",
                        "oldAvatarId": "5f3xxxxxxxxxxxxxxxxxxxxx",
                        "verifiedIdentity": true,
                        "defaultPaymentType": "invoice",
                        "nnis": []
                      }
                    ]
                  },
                  "Ovh": {
                    "summary": "OVHcloud",
                    "value": [
                      {
                        "username": "ovhcloud",
                        "name": "OVHcloud",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": "644xxxxxxxxxxxxxxxxxxxxx",
                        "categories": ["Cloud Service Provider"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "OVHCLOUD",
                          "companyType": "DCP",
                          "asn": {
                            "range": [65432, 65432]
                          },
                          "bgpAuthority": "OVHCLOUD"
                        },
                        "company": {
                          "website": "www.ovhcloud.com",
                          "businessType": "Cloud Service Provider",
                          "registeredName": null,
                          "addresses": [
                            {
                              "registered": false,
                              "address": "123/F, Address street",
                              "city": "City",
                              "state": null,
                              "zip": null,
                              "country": "US",
                              "email": null,
                              "phone": null,
                              "geo": {
                                "type": "Point",
                                "coordinates": []
                              }
                            }
                          ],
                          "parentIds": [],
                          "businessDevelopmentManagerTypePreference": "DATA",
                          "isIoTDemoCompany": false
                        },
                        "portsActive": 7,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "businessRegistrationNumber": "1",
                        "external": [
                          {
                            "id": "xxxxx",
                            "type": "INSIGHT",
                            "status": "UNSYNCED"
                          },
                          {
                            "id": "xxxxx",
                            "type": "HUBSPOT",
                            "status": "SYNCED"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "bundleCrossConnectChargeId": null,
                        "deletedAt": null,
                        "dataCenterFacility": {
                          "brandId": null
                        },
                        "stats": {
                          "posts": 0,
                          "events": 0,
                          "articles": 0,
                          "following": 0,
                          "followers": 5,
                          "members": 1
                        },
                        "avatarId": "64axxxxxxxxxxxxxxxxxxxxx",
                        "background": null,
                        "headline": null,
                        "summary": "OVHcloud is a global player and the leading European cloud provider operating over 450,000 servers within 37 data centers across 4 continents to reach 1,6 million customers in over 140 countries. Spearheading a trusted cloud and pioneering a sustainable cloud with the best price-performance ratio, the Group has been leveraging for over 20 years an integrated model that guarantees total control of its value chain: from the design of its servers to the construction and management of its data centers, including the orchestration of its fiber-optic network. This unique approach enables OVHcloud to independently cover all the uses of its customers so they can seize the benefits of an environmentally conscious model with a frugal use of resources and a carbon footprint reaching the best ratios in the industry. OVHcloud now offers customers the latest-generation solutions combining performance, predictable pricing, and complete data sovereignty to support their unfettered growth.",
                        "location": null,
                        "tags": [],
                        "verified": false,
                        "verifiedIdentity": true,
                        "defaultPaymentType": "invoice",
                        "nnis": [],
                        "createdAt": "2023-01-27T05:46:29.660Z"
                      }
                    ]
                  },
                  "Salesforce": {
                    "summary": "Salesforce.com",
                    "value": [
                      {
                        "username": "salesforcecom",
                        "name": "Salesforce.com",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": null,
                        "categories": ["Cloud Service Provider", "CRM"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "Salesforce",
                          "companyType": "B2B",
                          "asn": {
                            "value": 12345,
                            "range": []
                          },
                          "bgpAuthority": "PCCWGLOBAL"
                        },
                        "company": {
                          "businessType": "Cloud Service Provider",
                          "website": "www.salesforce.com",
                          "addresses": [
                            {
                              "geo": {
                                "coordinates": [],
                                "type": "Point"
                              },
                              "phone": null,
                              "email": null,
                              "country": "US",
                              "zip": "12345",
                              "state": "CA",
                              "city": "City",
                              "address": "123/F, Address street",
                              "registered": true
                            }
                          ],
                          "parentIds": [],
                          "registeredName": "Salesforce.com, inc.",
                          "businessDevelopmentManagerTypePreference": "DATA"
                        },
                        "portsActive": 6,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "external": [
                          {
                            "type": "INSIGHT",
                            "status": "UNSYNCED",
                            "id": "xxxxx"
                          },
                          {
                            "type": "SALESRECORD",
                            "status": "UNSYNCED",
                            "id": "xxxxx"
                          },
                          {
                            "type": "HUBSPOT",
                            "status": "SYNCED",
                            "id": "xxxxx"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "deletedAt": null,
                        "createdAt": "2018-05-23T13:09:05.855Z",
                        "stats": {
                          "members": 4,
                          "followers": 6,
                          "following": 1,
                          "articles": 0,
                          "events": 0,
                          "posts": 0
                        },
                        "dataCenterFacility": {},
                        "verified": true,
                        "tags": [],
                        "location": null,
                        "summary": null,
                        "headline": null,
                        "background": null,
                        "avatarId": "631xxxxxxxxxxxxxxxxxxxxx",
                        "verifiedIdentity": true,
                        "defaultPaymentType": "invoice",
                        "nnis": []
                      }
                    ]
                  },
                  "Vultr": {
                    "summary": "Vultr",
                    "value": [
                      {
                        "username": "vultrcloud",
                        "name": "Vultr",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": null,
                        "categories": ["Cloud Service Provider"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "vultr",
                          "companyType": "B2B",
                          "asn": {
                            "value": 65432,
                            "range": []
                          },
                          "bgpAuthority": "PCCWGLOBAL"
                        },
                        "company": {
                          "website": "https://www.vultr.com/company/about-us/",
                          "businessType": "Cloud Service Provider",
                          "registeredName": "Vultr Cloud",
                          "addresses": [
                            {
                              "registered": true,
                              "address": "123/F, Address street",
                              "city": "City",
                              "state": "ST",
                              "zip": "12345",
                              "country": "US",
                              "email": null,
                              "phone": null,
                              "geo": {
                                "type": "Point",
                                "coordinates": []
                              }
                            }
                          ],
                          "parentIds": [],
                          "businessDevelopmentManagerTypePreference": "DATA",
                          "isIoTDemoCompany": false
                        },
                        "portsActive": 8,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "businessRegistrationNumber": "123",
                        "external": [
                          {
                            "id": "xxxxx",
                            "type": "HUBSPOT",
                            "status": "SYNCED"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "bundleCrossConnectChargeId": null,
                        "deletedAt": null,
                        "dataCenterFacility": {
                          "brandId": null
                        },
                        "stats": {
                          "posts": 0,
                          "events": 0,
                          "articles": 0,
                          "following": 0,
                          "followers": 7,
                          "members": 3
                        },
                        "avatarId": "657xxxxxxxxxxxxxxxxxxxxx",
                        "background": null,
                        "headline": "High Performance Computing",
                        "summary": "Instantly deploy High-Performance Cloud Servers, Cloud GPUs, Bare Metal, and Cloud Storage worldwide. Vultr is an independent cloud computing platform on a mission to provide businesses and developers around the world with unrivaled global reach, unrivaled global performance, and simple, cost-effective pricing.",
                        "location": null,
                        "tags": [],
                        "verified": true,
                        "verifiedIdentity": true,
                        "defaultPaymentType": "invoice",
                        "nnis": [],
                        "createdAt": "2023-04-28T08:52:55.738Z"
                      }
                    ]
                  },
                  "Wasabi": {
                    "summary": "Wasabi Cloud",
                    "value": [
                      {
                        "username": "wasabicloud",
                        "name": "Wasabi Cloud",
                        "type": "COMPANY",
                        "avatar": null,
                        "overviewImage": "",
                        "categories": ["Cloud Service Provider"],
                        "isCloudProvider": true,
                        "cloudProviderDetails": {
                          "cloudType": "Wasabi",
                          "companyType": "B2B",
                          "asn": {
                            "value": 345678,
                            "range": []
                          },
                          "bgpAuthority": "PCCWGLOBAL"
                        },
                        "company": {
                          "website": null,
                          "businessType": "Cloud Service Provider",
                          "partnerType": "Technology partner",
                          "registeredName": null,
                          "addresses": [
                            {
                              "registered": false,
                              "address": "123/F, Address street",
                              "city": "City",
                              "state": null,
                              "zip": "12345",
                              "country": "US",
                              "email": null,
                              "phone": null,
                              "geo": {
                                "type": "Point",
                                "coordinates": []
                              }
                            }
                          ],
                          "parentIds": [],
                          "businessDevelopmentManagerTypePreference": "DATA",
                          "isIoTDemoCompany": false
                        },
                        "portsActive": 3,
                        "portsPending": 0,
                        "portsDisabled": 0,
                        "signedCompanyRefId": 12,
                        "businessRegistrationNumber": "123",
                        "external": [
                          {
                            "id": "xxxxx",
                            "type": "HUBSPOT",
                            "status": "SYNCED"
                          }
                        ],
                        "id": "xxxxxxxxxxxxxxxxxxxxxxxxx",
                        "bundleCrossConnectChargeId": null,
                        "deletedAt": null,
                        "dataCenterFacility": {
                          "brandId": null
                        },
                        "stats": {
                          "posts": 0,
                          "events": 0,
                          "articles": 0,
                          "following": 0,
                          "followers": 2,
                          "members": 0
                        },
                        "avatarId": "64bxxxxxxxxxxxxxxxxxxxxx",
                        "background": null,
                        "headline": "Wasabi: Affordable and predictably priced cloud object storage. No complex tiers. No fees for egress or API calls.",
                        "summary": "Wasabi Hot Cloud Storage is 100% compatible with AWS S3 and IAM APIs, making it an ideal addition to your multi-cloud strategy or as a drop-in replacement when designing any cloud-based storage solution. Wasabi partners with hundreds of the best applications and technologies in data management such as backup and recovery, archive, surveillance, data analytics, content delivery and more. Wasabi provides a highly durable, reliable and secure storage infrastructure. One price. Lightning fast speed. No hidden fees. Wasabi hot cloud storage.",
                        "location": null,
                        "tags": [],
                        "verified": false,
                        "verifiedIdentity": true,
                        "defaultPaymentType": "invoice",
                        "nnis": [],
                        "createdAt": "2023-07-20T03:45:18.967Z"
                      }
                    ]
                  }
                },
                "schema": {
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "overviewImage": {
                      "type": "string"
                    },
                    "categories": {
                      "type": "array"
                    },
                    "isCloudProvider": {
                      "type": "boolean"
                    },
                    "cloudProviderDetails": {
                      "type": "object",
                      "description": "Extract necessary information from the cloud providers:\n\n  * `type` (string): `cloudType` from `cloudProviderDetails`.\n\n  * `asn` (number or array): `asn.value` or `asn.range` from `cloudProviderDetails`."
                    },
                    "company": {
                      "type": "object"
                    },
                    "portsActive": {
                      "type": "number"
                    },
                    "portsPending": {
                      "type": "number"
                    },
                    "portsDisabled": {
                      "type": "number"
                    },
                    "signedCompanyRefId": {
                      "type": "number"
                    },
                    "external": {
                      "type": "array"
                    },
                    "id": {
                      "type": "string",
                      "description": "This will be the `providerId` parameter that you will be using in getting the list of valid ports for this Cloud Provider."
                    },
                    "deletedAt": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "stats": {
                      "type": "object"
                    },
                    "dataCenterFacility": {
                      "type": "object"
                    },
                    "verified": {
                      "type": "boolean"
                    },
                    "tags": {
                      "type": "array"
                    },
                    "location": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "headline": {
                      "type": "string"
                    },
                    "background": {
                      "type": "string"
                    },
                    "avatarId": {
                      "type": "string"
                    },
                    "oldAvatarId": {
                      "type": "number"
                    },
                    "verifiedIdentity": {
                      "type": "boolean"
                    },
                    "defaultPaymentType": {
                      "type": "string"
                    },
                    "nnis": {
                      "type": "array"
                    }
                  },
                  "title": "Company Valid Providers response schema",
                  "type": "object"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "No-Token-Provided": {
                    "summary": "No Token Provided",
                    "value": {
                      "message": "The user is not logged in",
                      "status": 401,
                      "statusCode": 401
                    }
                  },
                  "User-Logged-Out": {
                    "summary": "User logged out",
                    "value": {
                      "message": "The session token been deleted",
                      "status": 401,
                      "statusCode": 401
                    }
                  }
                }
              }
            },
            "description": "Unauthorized",
            "headers": {}
          }
        },
        "operationId": "find-valid-cloud-providers"
      }
    },
    "/v2/companies/cloud-providers/{providerId}/ports": {
      "get": {
        "summary": "Find Valid Ports in a Cloud Provider",
        "tags": ["CloudRouter"],
        "description": "Get the list of valid ports for a specific cloud provider.\n\nNote: If there are no `connectionSpeeds` listed under `partner`, this field will not be required on the create site payload.\n",
        "parameters": [
          {
            "description": "The ID of the Cloud Provider.",
            "example": "5aa7209defe3bc00124d075f",
            "name": "providerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "summary": "Full response data",
                    "value": [
                      {
                        "id": "64bxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Bangkok (ap-southeast-1) TCC",
                        "dcfId": "5dexxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "629xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Canada (ca-central-1) - Cologix MTL7",
                        "dcfId": "61fxxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "627xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Capetown (eu-west-1) - Terraco Capetown",
                        "dcfId": "5b3xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "62cxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Dubai (eu-west-1) Datamena IMPZ",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "5aaxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Frankfurt (eu-central-1) - Equinix FR5",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "60fxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Frankfurt (eu-central-1) - InterXion FRA6",
                        "dcfId": "5d4xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 2000
                            }
                          ]
                        }
                      },
                      {
                        "id": "651xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Hong Kong (ap-east-1) - Equinix HK1 (2)",
                        "dcfId": "5efxxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "5cexxxxxxxxxxxxxxxxxxxxx",
                        "name": "Hong Kong (ap-southeast-1) - iAdvantage MEGA-i",
                        "dcfId": "5a8xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "62cxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Hong Kong (ap-southeast-1) - iAdvantage MEGA-i (2)",
                        "dcfId": "5a8xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 5000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "5aaxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Ireland (eu-west-1) - Equinix LD8",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 5000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "5d6xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Johannesburg (eu-west-1) - Teraco",
                        "dcfId": "5bdxxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "61exxxxxxxxxxxxxxxxxxxxx",
                        "name": "Kuala Lumpuer (ap-southeast-1) - AIMS Kuala Lumpur",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "60fxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Las Vegas (us-west-2) - Switch Las Vegas",
                        "dcfId": "5f7xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "type": "MANUAL",
                              "value": 2000
                            },
                            {
                              "type": "MANUAL",
                              "value": 5000
                            },
                            {
                              "type": "MANUAL",
                              "value": 10000
                            }
                          ]
                        }
                      },
                      {
                        "id": "5b4xxxxxxxxxxxxxxxxxxxxx",
                        "name": "London (eu-west-2) - Telehouse East",
                        "dcfId": "5aexxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "60cxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Los Angeles (us-west-1) - Equinix IBX LA1",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 2000
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 5000
                            },
                            {
                              "type": "MANUAL",
                              "value": 10000
                            }
                          ]
                        }
                      },
                      {
                        "id": "64bxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Madrid (eu-central-1) Interxion",
                        "dcfId": "5f0xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "65axxxxxxxxxxxxxxxxxxxxx",
                        "name": "Mexico(us-east-1) - KIO Networks QRO 1",
                        "dcfId": "640xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 5000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 10000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "5dexxxxxxxxxxxxxxxxxxxxx",
                        "name": "Miami (us-east-1) - Equinix MI1",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "MANUAL",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "5aaxxxxxxxxxxxxxxxxxxxxx",
                        "name": "N. California (us-west-1) - Equinix SV1",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 5000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "62exxxxxxxxxxxxxxxxxxxxx",
                        "name": "N. California (us-west-1) - Equinix SV1 (2)",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 5000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 10000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "5abxxxxxxxxxxxxxxxxxxxxx",
                        "name": "N. Virginia (us-east-1) - Equinix DC1",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "622xxxxxxxxxxxxxxxxxxxxx",
                        "name": "N.California (us-west-1) - Coresite LA1",
                        "dcfId": "5a8xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 5000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "622xxxxxxxxxxxxxxxxxxxxx",
                        "name": "N.Virginia (us-east-1) - Equinix DA1",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "value": 5000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "5c3xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Ohio (us-east-2) - Equinix CH1",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "5b2xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Oregon (us-west-2) - Equinix SE2",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "5fbxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Osaka (ap-northeast-1) - Equinix OS1",
                        "dcfId": "5b1xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "632xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Paris (eu-west-3) - InterXion PAR2",
                        "dcfId": "5c1xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 2000
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 5000
                            }
                          ]
                        }
                      },
                      {
                        "id": "5b4xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Paris (eu-west-3) - Telehouse 2",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 5000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "626xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Reston (us-east-1) - Coresite VA1",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "5d5xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Seoul (ap-northeast-2) - KINX Gasan",
                        "dcfId": "5cdxxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "635xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Singapore (ap-southeast-1) - Equinix SG2 (2)",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 5000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 10000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "5caxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Singapore (ap-southeast-1) - Global Switch",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 5000,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 2000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "625xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Singapore (ap-southeast-1) - Global Switch (2)",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 2000
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 5000
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 10000
                            }
                          ]
                        }
                      },
                      {
                        "id": "63exxxxxxxxxxxxxxxxxxxxx",
                        "name": "Slough (eu-west-2) Equinix LD5",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "5aaxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Sydney (ap-southeast-2) - Equinix SY1",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "623xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Sydney (ap-southeast-2) - Global Switch SY6",
                        "dcfId": "5aexxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "616xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Taipei (ap-northeast-1) - Chief Telecom LY",
                        "dcfId": "5b3xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "626xxxxxxxxxxxxxxxxxxxxx",
                        "name": "Tokyo (ap-northeast-1) - AT Tokyo",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      },
                      {
                        "id": "5aaxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Tokyo (ap-northeast-1) - Arteria Networks",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "value": 50,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 100,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 200,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 300,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 400,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 500,
                              "type": "AUTOMATIC"
                            },
                            {
                              "value": 1000,
                              "type": "AUTOMATIC"
                            }
                          ]
                        }
                      },
                      {
                        "id": "62bxxxxxxxxxxxxxxxxxxxxx",
                        "name": "Zurich (eu-central-1) - Equinix ZH4",
                        "dcfId": "5a9xxxxxxxxxxxxxxxxxxxxx",
                        "partner": {
                          "connectionSpeeds": [
                            {
                              "type": "AUTOMATIC",
                              "value": 50
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 100
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 200
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 300
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 400
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 500
                            },
                            {
                              "type": "AUTOMATIC",
                              "value": 1000
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "This will be your `portId`."
                    },
                    "name": {
                      "type": "string"
                    },
                    "dcfId": {
                      "type": "string"
                    },
                    "partner": {
                      "type": "object"
                    }
                  },
                  "title": "Cloud Provider Valid Ports response schema",
                  "type": "object"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "No-Token-Provided": {
                    "summary": "No Token Provided",
                    "value": {
                      "message": "The user is not logged in",
                      "status": 401,
                      "statusCode": 401
                    }
                  },
                  "User-Logged-Out": {
                    "summary": "User logged out",
                    "value": {
                      "message": "The session token been deleted",
                      "status": 401,
                      "statusCode": 401
                    }
                  }
                }
              }
            },
            "description": "Unauthorized",
            "headers": {}
          }
        },
        "operationId": "find-valid-ports"
      }
    },
    "/app-user/{companyId}/l3vpns/{l3vpnId}": {
      "delete": {
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company.",
            "required": true,
            "example": "5e4cb418ab1dbe8c8476163b",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "l3vpnId",
            "in": "path",
            "description": "The ID of the CloudRouter",
            "required": true,
            "example": "61668e06e8dd60b034f3cd61",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "uuid": "4c5f6bcc-3d8b-4be7-a4a7-e44c711007d7",
                  "name": "My CloudRouter",
                  "status": "DELETING",
                  "id": "63e47974c3af0500151b59ef",
                  "companyId": "5d4d056242fbd3000ab4c01d",
                  "deletedAt": null,
                  "createdAt": "2022-01-09T04:41:24.455Z",
                  "updatedAt": "2023-02-15T03:34:16.916Z",
                  "paymentMethod": "invoice",
                  "duration": {
                    "quantity": 1,
                    "unit": "m"
                  },
                  "bandwidth": "500MB"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "The CloudRouter having active sites cannot be deleted / CloudRouter's contract is still active",
            "headers": {}
          },
          "404": {
            "description": "The CloudRouter has not found",
            "headers": {}
          }
        },
        "summary": "Deprovision a CloudRouter",
        "operationId": "Deprovision-a-CloudRouter",
        "description": "Prerequisites:\n\n* The authenticated user account has CloudRouter Destroy permissions.\n\n* The CloudRouter does not have any attached sites which have not been deleted.\n\n* The CloudRouter is in the status: CREATED.\n\n* The contract end date must be in the past",
        "tags": ["CloudRouter"]
      }
    },
    "/app-user/{companyId}/l3vpn/{vpnId}/site": {
      "post": {
        "parameters": [
          {
            "description": "The ID of the company. You can check your companyId in your account on ***[Console Connect](https://www.consoleconnect.com/)*** website or you can query in ***[Auth](#tag/Auth/operation/GetLoggedInUser)*** API\n",
            "in": "path",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of your CloudRouter. You can find this from the response of the create CloudRouter endpoint, or by querying CloudRouters (see ***[Query existing CloudRouters](#tag/CloudRouter/operation/Query-existing-CloudRouters)***)\n",
            "in": "path",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "vpnId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProvisionCloudRouterMyPortSite"
                  },
                  {
                    "$ref": "#/components/schemas/ProvisionCloudRouterGoogleSite"
                  },
                  {
                    "$ref": "#/components/schemas/ProvisionCloudRouterAzureSite"
                  },
                  {
                    "$ref": "#/components/schemas/ProvisionCloudRouterCloudSite"
                  },
                  {
                    "$ref": "#/components/schemas/ProvisionCloudRouterOvhSite"
                  },
                  {
                    "$ref": "#/components/schemas/ProvisionCloudRouterOracleSite"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "service": {
                    "id": "6259d021-664e-4bb0-942a-b1cd68a7a75b",
                    "companyId": "5ea242303962644b52fc4346",
                    "l3vpnId": "60cfcce5cca2885ebbdb7294",
                    "name": "my test site",
                    "type": "GOOGLE",
                    "peerData": {
                      "asn": 16550,
                      "pairingKey": "2dfcdee7-b6f9-41d0-b98f-639151097693/us-west1/1",
                      "speed": 500
                    },
                    "rateLimit": {
                      "unit": "Mbps",
                      "value": 42
                    },
                    "mtu": null,
                    "classOfService": [
                      {
                        "name": "BRONZE",
                        "value": 100
                      }
                    ],
                    "status": "CREATING",
                    "deleted_at": null,
                    "created_at": "2021-06-20T23:19:01.364Z",
                    "updated_at": "2021-06-20T23:19:01.364Z",
                    "peers": []
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "SIM-Pool-Site-Only-Invalid-Access-Circuit": {
                    "summary": "SIM Pool Site Only: Invalid Access Circuit",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Access circuit must contain either a portId or simPoolId"
                      }
                    }
                  },
                  "SIM-Pool-Site-Only-Peer-not-required": {
                    "summary": "SIM Pool Site Only: Peer not required",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "SIM pool sites do not require peer object"
                      }
                    }
                  },
                  "SIM-Pool-Site-Only-MTU-not-required": {
                    "summary": "SIM Pool Site Only: MTU not required",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "SIM pool sites do not need an MTU"
                      }
                    }
                  },
                  "SIM-Pool-Site-Only-Rate-limit-can-not-be-set-for-SIM-pool-sites": {
                    "summary": "SIM Pool Site Only: Rate limit can not be set for SIM pool sites",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Rate limit can not be set for SIM pool sites."
                      }
                    }
                  },
                  "SIM-Pool-Site-Only-Class-of-Service-can-not-be-set-for-SIM-pool-sites": {
                    "summary": "SIM Pool Site Only: Class of Service can not be set for SIM pool sites",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Class of Service can not be set for SIM pool sites."
                      }
                    }
                  }
                }
              }
            },
            "description": "Validation errors",
            "headers": {}
          }
        },
        "tags": ["CloudRouter"],
        "operationId": "Provision-a-new-L3VPN-Site",
        "summary": "Provision a new Site on an existing VPN (CloudRouter)",
        "description": "### Provision a new VPN site\n\nPrerequisites:\n* Your company has been verified on the Console Connect platform and you have signed the Specific Terms for API use. Contact ***[Support](mailto:support@consoleconnect.com)*** if you are unsure whether this has been completed for your company.\n* Use API key to authenticate Once you apply for an API key the Support team will send you the key that you will require. (See ***[Auth](#tag/Auth/operation/GetLoggedInUser)***)\n* The authenticated user account has L3VPN Update and L3VPN Site Create permissions.\n* Your company already has an L3VPN (CloudRouter) on the Console Connect platform. You can check this in the Web Application or use the Query existing CloudRouters APi endpoint (See ***[Query existing CloudRouters](#tag/CloudRouter/operation/Query-existing-CloudRouters)***)\n* Site Ports:\n  * The port (identified with `portId`) must have enough remaining capacity.\n  * The port needs to be Active.\n* Tier Rate Limit for DCP providers:\n  * Must be one of the speed tiers marked as available on the DCP port.\n  * Must be greater than or equal to the requested rateLimit.\n* My Port Site:\n  * My port sites (`peer.type \"SELF\"`) are sites created on one of your active Console Connect Ports.\n\n\n#### Site Ports\n\nThe port (identified with portId) must have enough remaining capacity.\n\n\n#### Tier Rate Limit for DCP providers\n\n* must be one of the speed tiers marked as available on the DCP port.\n* must be greater than or equal to the requested rateLimit\n\n\n#### My Port Site\n\nMy port sites (**peer.type** \"SELF\") are sites created on one of your active Console Connect Ports."
      }
    },
    "/app-user/{companyId}/l3vpn/{l3vpnId}/sites": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the company.",
            "in": "path",
            "example": "5d4d056242fbd3000ab4c01d",
            "name": "companyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of an ACTIVE CloudRouter.",
            "in": "path",
            "example": "63e48134c3af0500151b59f3",
            "name": "l3vpnId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "e9c046ea-b71d-44e3-8fe3-2ac7a82f15ff",
                    "companyId": "5d4d056242fbd3000ab4c01d",
                    "l3vpnId": "63e48134c3af0500151b59f3",
                    "name": "CloudRouter Site Test",
                    "type": "COMPANY",
                    "portId": "62ba77953de2590016b71a47",
                    "slVlanId": 104,
                    "rateLimit": {
                      "rate": 50,
                      "unit": "Mbps"
                    },
                    "mtu": null,
                    "classOfService": [
                      {
                        "name": "BRONZE",
                        "value": 50
                      },
                      {
                        "name": "SILVER",
                        "value": 30
                      },
                      {
                        "name": "GOLD",
                        "value": 20
                      }
                    ],
                    "redundancySiteType": "primary",
                    "redundancyLinkedSiteId": null,
                    "status": "ACTIVE",
                    "simPoolId": null,
                    "company_id": "5d4d056242fbd3000ab4c01d",
                    "l3vpn_id": "63e48134c3af0500151b59f3",
                    "sim_pool_id": null,
                    "deleted_at": null,
                    "created_at": "2023-02-14T03:38:04.010Z",
                    "updated_at": "2023-02-14T03:38:43.233Z",
                    "port_id": "62ba77953de2590816b71a47",
                    "peers": [
                      {
                        "id": "cd5c7320-90c1-4472-be18-90def17e7e9a",
                        "companyId": "5d4d056242fbd3000ab4c01d",
                        "l3vpnSiteId": "e9c046ea-b71d-44e3-8fe3-2ac7a82f15ff",
                        "slPeerUuid": "24c959a8-6324-4a49-81b6-471f48cef3bd",
                        "type": "SELF",
                        "partner": null,
                        "status": "ACTIVE",
                        "bgpKey": "gLYoRfoDnmwaAtTP7Cqfizlm",
                        "asn": 64512,
                        "externalIp": "10.124.208.26/30",
                        "internalIp": "10.124.208.25/30",
                        "subnet": "10.124.208.24/30",
                        "defaultOriginate": false,
                        "company_id": "5d4d056242fbd3000ab4c01d",
                        "l3vpn_site_id": "e9c046ea-b71d-44e3-8fe3-2ac7a82f15ff",
                        "deleted_at": null,
                        "created_at": "2023-02-14T03:38:37.440Z",
                        "updated_at": "2023-02-14T03:38:42.969Z"
                      }
                    ],
                    "l3vpn": {
                      "name": "CloudRouter Test",
                      "status": "CREATED",
                      "id": "63e48134c3af0500151b59f3",
                      "paymentMethod": "invoice",
                      "duration": {
                        "quantity": 1,
                        "unit": "m"
                      },
                      "bandwidth": "500MB",
                      "companyId": "5d4d056242fbd3000ab4c01d",
                      "deletedAt": null,
                      "createdAt": "2023-02-09T05:14:28.759Z",
                      "updatedAt": "2023-02-09T05:23:27.040Z",
                      "calculatedCapacity": {
                        "total": 500,
                        "used": 50,
                        "remaining": 450
                      }
                    },
                    "providerInfo": {
                      "city": "Hong Kong",
                      "country": "CN",
                      "countryDisplayName": "China",
                      "metroName": "Hong Kong",
                      "dcfName": "iAdvantage MEGA-i",
                      "companyName": "QE1",
                      "companyUsername": "consoletestcompany100b",
                      "portName": "QE1 PAYG CC",
                      "portId": "62ba77953de2590016b81a47",
                      "dcfId": "5a8ba9118195000012e0f141",
                      "metroId": "77d9f1fbbcaa90663cddb6d1",
                      "companyId": "5d4d056242fbd3000ab4c01d",
                      "portPartner": {
                        "type": "NONE",
                        "connectionSpeeds": []
                      }
                    }
                  }
                ]
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["CloudRouter"],
        "description": "",
        "operationId": "Get-list-of-CloudRouter-Sites",
        "summary": "Get list of CloudRouter sites"
      }
    },
    "/app-user/{companyId}/l3vpns/{l3vpnId}/sites/{siteId}": {
      "delete": {
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "The ID of the company.",
            "required": true,
            "example": "5e4cb418ab1dbe8c8476163b",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "l3vpnId",
            "in": "path",
            "description": "The ID of the CloudRouter",
            "required": true,
            "example": "61668e06e8dd60b034f3cd61",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteId",
            "in": "path",
            "description": "The ID of site",
            "required": true,
            "example": "61668e06e8dd60b034f3cd61",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "CloudRouter site record with specified id was not found"
          }
        },
        "summary": "Deprovision a Site of an existing CloudRouter",
        "operationId": "Deprovision-a-Site-of-an-existing-CloudRouter",
        "description": "Prerequisites:\n\n* The authenticated user account has permissions to delete the site of an existing CloudRouter.",
        "tags": ["CloudRouter"]
      }
    },
    "/app-user/{companyId}/check-ip-availability": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the company requesting the IP availability check.",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "IP version, either IPv4 or IPv6.",
            "example": "ipv4",
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["ipv4", "ipv6"]
            }
          },
          {
            "description": "The IP pool to check; either customer or linknet. 'customer' for checking customer routable IP addresses, or 'linket' for link IP addresses.",
            "example": "customer",
            "name": "pool",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["customer", "linknet"]
            }
          },
          {
            "description": "Specify a subnet mask to indicate the size of IP block you are looking for.",
            "example": 29,
            "name": "mask",
            "required": true,
            "in": "query",
            "schema": {
              "type": "integer",
              "enum": [26, 27, 28, 29, 30]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "available": {
                    "value": true
                  },
                  "unavailable": {
                    "value": false
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "### Prerequisites\n\n* Your company has been verified on the Console Connect platform",
        "operationId": "check-ip-availability",
        "summary": "Check IP Availability"
      }
    },
    "/app-user/{companyId}/ports/{portId}/info": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the company requesting the capabilities check.",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the port to request the capabilities of.",
            "example": "6ea4b418ab1dbe8c8476163b",
            "name": "portId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "IO_DAvailable": {
                    "value": {
                      "capabilities": {
                        "giaStandardV1": true,
                        "l2TypeA": false,
                        "l3vpnTypeA": true,
                        "qinq": true
                      }
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Ports"],
        "description": "Check the capabilities of a Port.\n### Prerequisites:\n* Your company has been verified on the Console Connect platform.\n* You have a port.",
        "operationId": "check-port-capability",
        "summary": "Check Port capabilities"
      }
    },
    "/api/private-asn/suggestion": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "asn": {
                      "type": "number",
                      "description": "Suggested allocatable private ASN"
                    }
                  }
                },
                "example": {
                  "asn": 4200000055
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "Get an allocatable Private ASN suggestion.",
        "operationId": "get-private-asn-suggestion",
        "summary": "Get Private ASN Suggestion"
      }
    },
    "/api/private-asn/range": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "number",
                      "description": "Minimum ASN range"
                    },
                    "end": {
                      "type": "number",
                      "description": "Maximum ASN range"
                    }
                  }
                },
                "example": {
                  "start": 4200000000,
                  "end": 4294967294
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "Get the minimum and maximum ASN range",
        "operationId": "get-private-asn-range",
        "summary": "Get Private ASN Range"
      }
    },
    "/api/private-asn/validate": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "asn": 3200000055
                },
                "properties": {
                  "asn": {
                    "description": "The private asn to be validated.",
                    "type": "number"
                  }
                },
                "required": ["asn"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ValidAsn"
                    },
                    {
                      "$ref": "#/components/schemas/InvalidAsn"
                    }
                  ]
                },
                "examples": {
                  "invalid": {
                    "value": {
                      "asn": 3200000055,
                      "valid": false,
                      "reason": "ASN is out of range"
                    }
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "",
        "operationId": "validate-private-asn",
        "summary": "Validate a Private ASN"
      }
    },
    "/app-user/{companyId}/asns": {
      "get": {
        "parameters": [
          {
            "description": "The company ID to perform this action for.",
            "in": "path",
            "example": "xxxxxxxxxxxxxxxxxxxxxxxx",
            "name": "companyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Used to specify criteria for filtering the data in the query string of the URL",
            "in": "query",
            "example": "{\"where\":{\"status\":\"VERIFIED\",\"private\":false}}",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                        "companyId": "xxxxxxxxxxxxxxxxxxxxxxxx",
                        "asn": "1234",
                        "asSet": "AS-KEYCOM",
                        "private": false,
                        "skipPrefixSync": false,
                        "status": "VERIFIED",
                        "ipPrefixConfiguredInIPCV4": [
                          "0.0.0.0/22",
                          "0.0.0.0/23",
                          "0.0.0.0/22",
                          "0.0.0.0/22",
                          "0.0.0.0/24",
                          "0.0.0.0/19"
                        ],
                        "ipPrefixConfiguredInIPCV6": [
                          "0000:0000::/29",
                          "0000:0000::/29"
                        ],
                        "ipPrefixConfiguredInSLV4": [
                          "0.0.0.0/22",
                          "0.0.0.0/23",
                          "0.0.0.0/22",
                          "0.0.0.0/22",
                          "0.0.0.0/24",
                          "0.0.0.0/19"
                        ],
                        "ipPrefixConfiguredInSLV6": [
                          "0000:0000::/29",
                          "0000:0000::/29"
                        ],
                        "ipPrefixLastCheckedAt": "2022-08-01T04:00:24.950Z",
                        "ipPrefixLastSLUpdateRequestAt": null,
                        "ipPrefixLastSLUpdateSuccessAt": "2022-07-27T06:42:37.410Z",
                        "ipPrefixLastErrorAt": "2024-08-02T00:27:07.910Z",
                        "deallocatedAt": null,
                        "ipPrefixLastErrorReason": "Sample Reason",
                        "company_id": "xxxxxxxxxxxxxxxxxxxxxxxx",
                        "deleted_at": "null,",
                        "created_at": "2021-08-24T00:29:51.456Z",
                        "updated_at": "2024-08-02T00:27:08.040Z"
                      }
                    ]
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["ASNs"],
        "description": "Lists ASNs associated to the specified company ID.</br></br>",
        "operationId": "get-all-my-ASNs",
        "summary": "Get all ASNs"
      }
    },
    "/app-user/{companyId}/gia-service": {
      "post": {
        "parameters": [
          {
            "description": "The id of the company",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "DYNAMIC-private": {
                  "$ref": "#/components/examples/DYNAMIC-private"
                },
                "DYNAMIC-public": {
                  "$ref": "#/components/examples/DYNAMIC-public"
                },
                "STATIC": {
                  "$ref": "#/components/examples/STATIC"
                }
              },
              "schema": {
                "properties": {
                  "accessPortId": {
                    "description": "The ID of the port to use for this IO-D service.",
                    "type": "string"
                  },
                  "asnId": {
                    "description": "6210-4c68-82a5-f89fda2fd356 (string) - The ID of the ASN to use for this service (required for DYNAMIC GIA services).",
                    "type": "string"
                  },
                  "autoAssignBgpKey": {
                    "description": "Whether to auto assign a BGP key for the service (only valid for DYNAMIC IO-D services). If true, a 24 character key using printable ASCII characters will be generated.",
                    "type": "boolean"
                  },
                  "bgpKey": {
                    "description": "The BGP key to use for authentication of this service (required for DYNAMIC GIA services). Must be 6-24 characters long.",
                    "type": "string"
                  },
                  "billingtype": {
                    "description": "The type of plan the IO-D Service is on; one of \"payg\", \"free\" or \"bespoke\".",
                    "type": "string"
                  },
                  "defaultOriginate": {
                    "description": "Whether to advertise only the default route (0.0.0.0/0) to the customer router. If true, only the default route is advertised; if false, the full routing table (hundreds of thousands of routes) is advertised.",
                    "type": "boolean"
                  },
                  "duration": {
                    "description": "The duration the service was ordered for, in conjunction with durationUnit.",
                    "type": "number"
                  },
                  "durationUnit": {
                    "description": "The unit of duration the service was ordered for, in conjunction with duration. 'd' for days, 'w' for weeks, 'm' for months, 'y' for years.",
                    "type": "string"
                  },
                  "enableIpv6": {
                    "description": "Whether this service should be IPv6-enabled.",
                    "type": "boolean"
                  },
                  "ipv6Block": {
                    "description": "The mask size  of a public IPv6 block to provision in addition to this service. Currently the only valid value for ipv6Block is 48.",
                    "type": "number"
                  },
                  "ipblock": {
                    "description": "The mask size (26-30) of a public IPv4 block to provision in addition to this service. If not provided, no additional public IPv4 addresses will be provided. Larger block sizes can be requested from Console Connect support.",
                    "type": "number"
                  },
                  "name": {
                    "description": "Name of the IO-D service.",
                    "type": "string"
                  },
                  "privateAsn": {
                    "description": "Whether the service should be associated with a Private ASN.",
                    "type": "boolean"
                  },
                  "privateAsnAutoAssign": {
                    "description": "Automatically generate and assign a valid Private ASN for the service.",
                    "type": "boolean"
                  },
                  "privateAsnRequested": {
                    "description": "Set your own Private ASN (which will be validated against system rules).",
                    "type": "number"
                  },
                  "rateLimit": {
                    "description": "The desired bandwidth of this service (in Mbps).",
                    "type": "number"
                  },
                  "burstRate": {
                    "description": "The maximum data rate the service is capable of delivering within a short time frame (in Mbps). If burst rate is specified, the following validation rules will apply: Committed data rate limit minimum is set at 10% of remaining port capacity, also  burstable bandwidth must exceed committed data rate, but not exceed remaining port capacity.",
                    "type": "number"
                  },
                  "burstType": {
                    "description": "Burst type description, e.g. '95th Percentile'.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Specify the routing type; either DYNAMIC (for BGP) or STATIC.",
                    "type": "string"
                  },
                  "vlanId": {
                    "description": "The VLAN ID of the access circuit (between the Access Port and a Console Connect Border Router). If not provided a VLAN ID will be automatically assigned.",
                    "type": "number"
                  },
                  "paymentType": {
                    "description": "The method used to make payment for this service - invoice or creditcard",
                    "type": "string",
                    "enum": ["creditcard", "invoice"]
                  },
                  "discountCode": {
                    "type": "string"
                  }
                },
                "required": [
                  "accessPortId",
                  "name",
                  "rateLimit",
                  "type",
                  "enableIpv6",
                  "autoAssignBgpKey",
                  "defaultOriginate",
                  "duration",
                  "durationUnit",
                  "billingtype",
                  "paymentType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "xxxxxxxxxxxxxxxxxxxxxxxx",
                  "companyId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "accessPortId": "xxxxxxxxxxxxxxxxxxxxxxxx",
                  "name": "gia-service",
                  "vlanId": 3001,
                  "rateLimit": {
                    "rate": 100,
                    "unit": "Mbps"
                  },
                  "burstRate": {
                    "rate": 150,
                    "unit": "Mbps"
                  },
                  "burstType": "95th Percentile",
                  "type": "DYNAMIC",
                  "asnId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "ipv4BlockId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "ipv6BlockId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "enableIpv6": true,
                  "customerRouterIpv4": "182.64.64.31",
                  "customerRouterIpv6": "2001:db8:85a3:0:0:8a2e:370:7334",
                  "consoleRouterIpv4": "182.64.64.32",
                  "consoleRouterIpv6": "2001:db8:85a3:0:0:8a2e:370:7335",
                  "linknetIpV4Block": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "linknetIpV6Block": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "bgpKey": "af83Le4Y5gGP8IgA9gaJ",
                  "staticRoutes": ["101.22.84.60/30"],
                  "giaSiteId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "giaOrderId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "status": "PROVISIONING",
                  "bgpStatus": null,
                  "peers": [
                    {
                      "internal_ip": "182.64.64.31",
                      "external_ip": "182.64.64.32",
                      "bgp_status": "IDLE"
                    },
                    {
                      "internal_ip": "2001:db8:85a3:0:0:8a2e:370:7334",
                      "external_ip": "2001:db8:85a3:0:0:8a2e:370:7335",
                      "bgp_status": "IDLE"
                    }
                  ],
                  "defaultOriginate": true,
                  "defaultOriginateIpv6": true
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "## Prerequisites:\n\n* Your company has been verified on the Console Connect platform.\n* The authenticated user account has IO-D Create permissions.\n* You have specified a port with IO-D capability.\n* You have provided a valid ASN configuration:\n  * Public ASN: To use a Public ASN, pass in `asnId`, the ID of a VERIFIED ASN attached to your company.\n  * Private ASN: Set `privateAsn: true` and either `privateAsnAutoAssign: true` to have the system assign an ASN for you, or `privateAsnRequested` to set your own.",
        "operationId": "provision-iod-service",
        "summary": "Provision IO-D Service"
      }
    },
    "/app-user/{companyId}/gia-services": {
      "get": {
        "summary": "Get IO-D Services",
        "description": "List your IO-D services.",
        "operationId": "list-io-d-services",
        "tags": ["Internet On-Demand (IO-D)"],
        "parameters": [
          {
            "description": "The ID of the company.",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Criteria for finding IO-D Services.",
            "in": "query",
            "name": "filter",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LoopBackFilter"
            },
            "examples": {
              "pagination": {
                "summary": "List IO-D services by page.",
                "value": "{\n   \"skip\": 10,\n   \"limit\": 10\n}"
              },
              "searchByName": {
                "summary": "Search for IO-D services by name.",
                "value": "{\n   \"where\": {\n      \"name\": { \"like\": \"My IO-D Service\", options: \"i\" },\n   },\n   \"skip\": 0,\n   \"limit\": 10\n}"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "xxxxxxxxxxxxxxxxxxxxxxxx",
                    "companyId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "accessPortId": "xxxxxxxxxxxxxxxxxxxxxxxx",
                    "name": "gia-service",
                    "vlanId": 3001,
                    "rateLimit": {
                      "rate": 100,
                      "unit": "Mbps"
                    },
                    "burstRate": {
                      "rate": 150,
                      "unit": "Mbps"
                    },
                    "burstType": "95th Percentile",
                    "type": "DYNAMIC",
                    "asnId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ipv4BlockId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "ipv6BlockId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "enableIpv6": true,
                    "customerRouterIpv4": "182.64.64.31",
                    "customerRouterIpv6": "2001:db8:85a3:0:0:8a2e:370:7334",
                    "consoleRouterIpv4": "182.64.64.32",
                    "consoleRouterIpv6": "2001:db8:85a3:0:0:8a2e:370:7335",
                    "linknetIpV4Block": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "linknetIpV6Block": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "bgpKey": "af83Le4Y5gGP8IgA9gaJ",
                    "staticRoutes": ["101.22.84.60/30"],
                    "giaSiteId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "giaOrderId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                    "status": "PROVISIONING",
                    "bgpStatus": null,
                    "peers": [
                      {
                        "internal_ip": "182.64.64.31",
                        "external_ip": "182.64.64.32",
                        "bgp_status": "IDLE"
                      },
                      {
                        "internal_ip": "2001:db8:85a3:0:0:8a2e:370:7334",
                        "external_ip": "2001:db8:85a3:0:0:8a2e:370:7335",
                        "bgp_status": "IDLE"
                      }
                    ],
                    "defaultOriginate": true,
                    "defaultOriginateIpv6": true
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IoD"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/gia-services/{giaId}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the IO-D service that is to be deleted",
            "name": "giaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Manual-SR": {
                    "summary": "Manual SR",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Unable to delete IO-D Service. This is a manually billed IO-D Service, please email support@consoleconnect.com to request any changes"
                      }
                    }
                  },
                  "IO-D-still-in-Contract": {
                    "summary": "IO-D still in Contract",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Unable to delete IO-D Service as it is still in contract. Please email support@consoleconnect.com to request any changes"
                      }
                    }
                  }
                }
              }
            },
            "description": "Bad Request",
            "headers": {}
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            },
            "description": "Not found",
            "headers": {}
          }
        },
        "summary": "Delete IO-D service",
        "operationId": "delete-iod-service",
        "tags": ["Internet On-Demand (IO-D)"]
      }
    },
    "/app-user/{companyId}/gia-services/{giaId}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the company",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the IO-D service.",
            "example": "06327dfa-4e86-438b-af4c-3086be0a2467",
            "name": "giaId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IoD"
                },
                "example": {
                  "id": "xxxxxxxxxxxxxxxxxxxxxxxx",
                  "companyId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "accessPortId": "xxxxxxxxxxxxxxxxxxxxxxxx",
                  "name": "gia-service",
                  "vlanId": 3001,
                  "rateLimit": {
                    "rate": 100,
                    "unit": "Mbps"
                  },
                  "burstRate": {
                    "rate": 150,
                    "unit": "Mbps"
                  },
                  "burstType": "95th Percentile",
                  "type": "DYNAMIC",
                  "asnId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "ipv4BlockId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "ipv6BlockId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "enableIpv6": true,
                  "customerRouterIpv4": "182.64.64.31",
                  "customerRouterIpv6": "2001:db8:85a3:0:0:8a2e:370:7334",
                  "consoleRouterIpv4": "182.64.64.32",
                  "consoleRouterIpv6": "2001:db8:85a3:0:0:8a2e:370:7335",
                  "linknetIpV4Block": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "linknetIpV6Block": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "bgpKey": "af83Le4Y5gGP8IgA9gaJ",
                  "staticRoutes": ["101.22.84.60/30"],
                  "giaSiteId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "giaOrderId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                  "status": "PROVISIONING",
                  "bgpStatus": null,
                  "peers": [
                    {
                      "internal_ip": "182.64.64.31",
                      "external_ip": "182.64.64.32",
                      "bgp_status": "IDLE"
                    },
                    {
                      "internal_ip": "2001:db8:85a3:0:0:8a2e:370:7334",
                      "external_ip": "2001:db8:85a3:0:0:8a2e:370:7335",
                      "bgp_status": "IDLE"
                    }
                  ],
                  "defaultOriginate": true,
                  "defaultOriginateIpv6": true
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "404,",
                    "name": "Error",
                    "message": "There is no method to handle GET /v2/data-center-facilit/invalid"
                  }
                }
              }
            }
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "",
        "operationId": "get-io-d-by-id",
        "summary": "Get IO-D service by ID"
      }
    },
    "/app-user/{companyId}/gia-service/{giaId}/logs": {
      "post": {
        "parameters": [
          {
            "description": "The ID of the company.",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the IO-D service.",
            "example": "06327dfa-4e86-438b-af4c-3086be0a2467",
            "name": "giaId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "limit": 10,
                  "skip": 0
                },
                "properties": {
                  "limit": {
                    "description": "The number of logs per page (for pagination).",
                    "example": 10
                  },
                  "skip": {
                    "description": "The number of logs to skip (for pagination).",
                    "example": 0
                  }
                },
                "required": ["skip", "limit"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "description": "The total number of logs."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "summary": {
                            "type": "string",
                            "description": "Log summary."
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "user": {
                                "type": "object",
                                "description": "The user responsible for this log.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Correlating user's name."
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "Correlating user's ID."
                                  }
                                }
                              }
                            }
                          },
                          "level": {
                            "type": "string",
                            "enum": ["INFO", "WARNING", "ERROR"],
                            "description": "Log report level."
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Log creation date."
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "total": 2,
                  "results": [
                    {
                      "summary": "Example log message",
                      "data": {
                        "user": {
                          "name": "Joe Bloggs",
                          "id": "5e4cb418ab1dbe8c8476163b"
                        }
                      },
                      "level": "INFO",
                      "created_at": "2021-02-15T07:44:00.794Z"
                    },
                    {
                      "summary": "Another example log message",
                      "data": {
                        "user": {
                          "name": "Joe Bloggs",
                          "id": "5e4cb418ab1dbe8c8476163b"
                        }
                      },
                      "level": "INFO",
                      "created_at": "2021-02-18T04:23:47.822Z"
                    }
                  ]
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "",
        "operationId": "get-io-d-logs",
        "summary": "Get IO-D service logs"
      }
    },
    "/app-user/{companyId}/gia-service/{giaId}/flex": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the company.",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the IO-D service.",
            "example": "06327dfa-4e86-438b-af4c-3086be0a2467",
            "name": "giaId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "0b2478b1-5be8-4f29-8336-a49240acb90d",
                    "giaServiceId": "7bab11ba-11a6-45d3-90f7-4b77032dd8a0",
                    "type": "UPGRADE",
                    "status": "REQUESTED",
                    "active": false,
                    "scheduledAt": "2021-02-08T23:15:54.000Z",
                    "bandwidth": 450,
                    "lineItemId": "d38992d5-0f1a-405b-a146-8cc17f84efae",
                    "created_at": "2021-02-08T23:15:54.318Z",
                    "updated_at": "2021-02-08T23:15:54.436Z"
                  }
                ]
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "Get the history of flex requests for an IO-D service.",
        "operationId": "get-io-d-flex-requests",
        "summary": "Get Flex Requests for IO-D service"
      },
      "post": {
        "parameters": [
          {
            "description": "The ID of the company.",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the IO-D service.",
            "example": "06327dfa-4e86-438b-af4c-3086be0a2467",
            "name": "giaId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "bandwidth": 100
                },
                "properties": {
                  "bandwidth": {
                    "description": "The bandwidth to flex the service to. Must be a whole number greater than 0.",
                    "type": "number"
                  }
                },
                "required": ["bandwidth"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "0b2478b1-5be8-4f29-8336-a49240acb90d",
                  "giaServiceId": "7bab11ba-11a6-45d3-90f7-4b77032dd8a0",
                  "type": "UPGRADE",
                  "status": "REQUESTED",
                  "active": false,
                  "scheduledAt": "2021-02-08T23:15:54.000Z",
                  "bandwidth": "450",
                  "lineItemId": "d38992d5-0f1a-405b-a146-8cc17f84efae",
                  "created_at": "2021-02-08T23:15:54.318Z",
                  "updated_at": "2021-02-08T23:15:54.436Z"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Already-processing": {
                    "summary": "Already processing",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "New Flex cannot be requested while there is a request already in progress."
                      }
                    }
                  },
                  "Service-inactive": {
                    "summary": "Service inactive",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Flex can only be requested when the service is active"
                      }
                    }
                  },
                  "Invoice-only": {
                    "summary": "Invoice only",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Flex can only be requested on a service which is set up to be paid by invoice."
                      }
                    }
                  },
                  "Unavailable": {
                    "summary": "unavailable",
                    "value": {
                      "error": {
                        "statusCode": 400,
                        "name": "Error",
                        "message": "Flex cannot be requested on this service. To change the bandwidth of this service please contact support."
                      }
                    }
                  }
                }
              }
            },
            "description": "Bad Request",
            "headers": {}
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Price-not-available": {
                    "summary": "Price not available",
                    "value": {
                      "error": {
                        "statusCode": 422,
                        "name": "Error",
                        "message": "Flex price is not available for the requested bandwidth for this service."
                      }
                    }
                  },
                  "Rate-Limit-is-not-a-number": {
                    "summary": "Rate Limit is not a number",
                    "value": {
                      "error": {
                        "statusCode": 422,
                        "name": "Error",
                        "message": "Rate limit should be an integer."
                      }
                    }
                  },
                  "Rate-Limit-is-less-than-1Mbps": {
                    "summary": "Rate Limit is less than 1Mbps",
                    "value": {
                      "error": {
                        "statusCode": 422,
                        "name": "Error",
                        "message": "Rate limit cannot be less than 1Mbps"
                      }
                    }
                  }
                }
              }
            },
            "description": "Unprocessable Entity",
            "headers": {}
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "",
        "operationId": "flex-io-d",
        "summary": "Flex an IO-D service"
      }
    },
    "/app-user/{companyId}/gia-service/{giaId}/flex/current": {
      "get": {
        "parameters": [
          {
            "description": "The id of the company",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the IO-D service",
            "example": "06327dfa-4e86-438b-af4c-3086be0a2467",
            "name": "giaId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "latest": {
                    "id": "0b2478b1-5be8-4f29-8336-a49240acb90d",
                    "giaServiceId": "7bab11ba-11a6-45d3-90f7-4b77032dd8a0",
                    "type": "UPGRADE",
                    "status": "REQUESTED",
                    "active": false,
                    "scheduledAt": "2021-02-08T23:15:54.000Z",
                    "bandwidth": "450",
                    "lineItemId": "d38992d5-0f1a-405b-a146-8cc17f84efae",
                    "created_at": "2021-02-08T23:15:54.318Z",
                    "updated_at": "2021-02-08T23:15:54.436Z"
                  },
                  "active": {
                    "id": "0b2478b1-5be8-4f29-8336-a49240acb90d",
                    "giaServiceId": "7bab11ba-11a6-45d3-90f7-4b77032dd8a0",
                    "type": "DOWNGRADE",
                    "status": "SUCCESS",
                    "active": true,
                    "scheduledAt": "2021-01-15T20:22:18.000Z",
                    "bandwidth": "50",
                    "lineItemId": "d38992d5-0f1a-405b-a146-8cc17f84efae",
                    "created_at": "2021-01-15T20:22:18.000Z",
                    "updated_at": "2021-01-15T20:22:18.000Z"
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "The active flex is any flex that has been processed and is currently active on the service.\nThe latest flex is the most recent flex request (which may still be processing).\nThe active and latest flex be the same record.\nIf there is no active flex, the active property in the response will be null.\nIf there are no flex requests at all, the latest property in the response will be null.",
        "operationId": "get-io-d-flex",
        "summary": "Get current IO-D service flex"
      }
    },
    "/app-user/{companyId}/gia-service/{giaId}/flex/history": {
      "get": {
        "parameters": [
          {
            "description": "The id of the company",
            "example": "5e4cb418ab1dbe8c8476163b",
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the IO-D service.",
            "example": "06327dfa-4e86-438b-af4c-3086be0a2467",
            "name": "giaId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "contractBandwidth": 100,
                  "active": {
                    "id": "0b2478b1-5be8-4f29-8336-a49240acb90d",
                    "flexBandwidth": 200,
                    "totalBandwidth": 300,
                    "start": "2021-02-08T23:15:54.318Z",
                    "rate": 76.5
                  },
                  "pending": {
                    "id": "0b2478b1-5be8-4f29-8336-a49240acb90d",
                    "toBaseContract": false,
                    "bandwidth": 400
                  },
                  "results": [
                    {
                      "id": "adae371a-7bfc-4c01-a9ee-d291f3ec237f",
                      "flexBandwidth": 350,
                      "totalBandwidth": 450,
                      "start": "2021-03-08T04:38:15.800Z",
                      "end": "2021-03-08T04:38:15.971Z",
                      "rate": 76.5,
                      "hours": "0.0001",
                      "total": 0.00765
                    }
                  ],
                  "total": 1
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Internet On-Demand (IO-D)"],
        "description": "",
        "operationId": "get-flex-history",
        "summary": "Get IO-D service flex history"
      }
    },
    "/heartbeat": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "name": "@iixlabs/portal-node-api",
                      "now": 1444957362993,
                      "uptime": 437874,
                      "humanUptime": "7 minutes ago",
                      "uptimeSeconds": 438,
                      "version": "3.14.34"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "name": {
                      "example": "@iixlabs/portal-node-api",
                      "type": "string"
                    },
                    "now": {
                      "example": 1444957362993,
                      "type": "number"
                    },
                    "uptime": {
                      "example": 437874,
                      "type": "number"
                    },
                    "humanUptime": {
                      "example": "7 minutes ago",
                      "type": "string"
                    },
                    "uptimeSeconds": {
                      "example": 438,
                      "type": "number"
                    },
                    "version": {
                      "example": "3.14.34",
                      "type": "string"
                    }
                  },
                  "title": "Heartbeat response schema",
                  "type": "object"
                }
              }
            },
            "description": "OK",
            "headers": {}
          }
        },
        "tags": ["Heartbeat"],
        "description": "Get the current deployed version on the server",
        "operationId": "Heartbeat",
        "summary": "Heartbeat"
      }
    },
    "/app-user/{id}/iot-order": {
      "get": {
        "parameters": [
          {
            "description": "This correlates to the current API user's id.",
            "in": "path",
            "example": "017d9187-29b2-40d6-97de-69b3cb4f7a0f",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This field helps us filter, sort, limit and order the returned data.",
            "in": "query",
            "example": "{ fields: simPoolName | [\"simPoolName\",\"connectivityType\"], include: company | [\"company\",\"apn\"], limit: 10, order: asc | desc, skip: 10, where: {\"companyId\":\"5f97d3d2d85fbe0014fd1812\"}}",
            "name": "filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "017d9187-2452-45d6-97de-69b4cb4f7a0f",
                    "friendlyId": "IOTC38C11E9BC",
                    "simPoolId": null,
                    "simPoolName": "test 123456",
                    "companyId": "5f97d3d2d85fbe0014fd1812",
                    "apnId": "e3f8ae76-3b1a-40e0-ae29-4ed336b143e3",
                    "connectivityType": "PRIVATE",
                    "name": "test 123456",
                    "simQuantity": 1,
                    "deliveryAddress": null,
                    "companyAddress": "Lorem , Ipsum Text",
                    "orderType": "PAYG",
                    "dnsPreferred": "10.100.1.1",
                    "dnsAlternate": "10.100.1.2",
                    "useDefaultDNS": true,
                    "status": "EXPORT-COMPLIANCE-REJECTED",
                    "error": null,
                    "userEmail": "user@pccwglobal.com",
                    "deliveryEmail": null,
                    "paymentType": "INVOICE",
                    "offerType": null,
                    "endUser": null,
                    "skipUserEmail": false,
                    "skipAdminEmail": false,
                    "skipSupportEmail": false,
                    "skipCompliance": false,
                    "skipSlack": false,
                    "skipInsightSr": false,
                    "sourceEnterpriseId": null,
                    "simType": "PHYSICAL-SIM",
                    "productId": 1143474,
                    "description": "Lorem , Ipsum Text",
                    "manufacturer": "Thales (MADE IN CHINA)",
                    "purchaseDate": "2020-05-26T00:00:00.000Z",
                    "originalPurchaseOrder": "ZM1124438",
                    "purchaseProject": "IoT",
                    "eccn": "EAR99",
                    "hkHsCode": 85235200,
                    "currency": "USD",
                    "unitPrice": null,
                    "imsiProfileId": null,
                    "createdAt": "2024-07-08T11:09:19.386Z",
                    "updatedAt": "2024-07-15T12:38:48.933Z",
                    "deletedAt": null,
                    "updatedById": null,
                    "company_id": "5f97d3d2d85fbe0014fd1812",
                    "deleted_at": null,
                    "created_at": "2024-07-08T11:09:19.386Z",
                    "updated_at": "2024-07-15T12:38:48.933Z"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/get"
                  }
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "code": "MODEL_NOT_FOUND",
                  "message": "could not find a model with id 1279376404047642y3003273442324234",
                  "statusCode": 404,
                  "name": "Error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchemaExtended"
                }
              }
            },
            "headers": {}
          }
        },
        "tags": ["Edge SIM"],
        "description": "Retrieves all Edge SIM orders enlisted under provided *id* field and filtered accordingly based on the Filter parameter",
        "operationId": "GetEdgeSIMOrders",
        "summary": "Get Edge SIM orders"
      },
      "post": {
        "parameters": [
          {
            "description": "This correlates to the current API user's id.",
            "in": "path",
            "example": "017d9187-29b2-40d6-97de-69b3cb4f7a0f",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "This object contains all the necessary information required to create a new Edge SIM order.",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "friendlyId": {
                        "type": "string"
                      },
                      "simPoolId": {
                        "type": "string"
                      },
                      "simPoolName": {
                        "type": "string"
                      },
                      "companyId": {
                        "type": "string"
                      },
                      "apnId": {
                        "type": "string"
                      },
                      "connectivityType": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "simQuantity": {
                        "type": "string"
                      },
                      "deliveryAddress": {
                        "type": "string"
                      },
                      "companyAddress": {
                        "type": "string"
                      },
                      "orderType": {
                        "type": "string"
                      },
                      "dnsPreferred": {
                        "type": "string"
                      },
                      "dnsAlternate": {
                        "type": "string"
                      },
                      "useDefaultDNS": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "error": {
                        "type": "string"
                      },
                      "userEmail": {
                        "type": "string"
                      },
                      "deliveryEmail": {
                        "type": "string"
                      },
                      "paymentType": {
                        "type": "string"
                      },
                      "offerType": {
                        "type": "string"
                      },
                      "endUser": {
                        "type": "string"
                      },
                      "skipUserEmail": {
                        "type": "boolean"
                      },
                      "skipAdminEmail": {
                        "type": "boolean"
                      },
                      "skipSupportEmail": {
                        "type": "boolean"
                      },
                      "skipCompliance": {
                        "type": "boolean"
                      },
                      "skipSlack": {
                        "type": "boolean"
                      },
                      "skipInsightSr": {
                        "type": "boolean"
                      },
                      "sourceEnterpriseId": {
                        "type": "string"
                      },
                      "simType": {
                        "type": "string"
                      },
                      "productId": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "manufacturer": {
                        "type": "string"
                      },
                      "purchaseDate": {
                        "type": "string"
                      },
                      "originalPurchaseOrder": {
                        "type": "string"
                      },
                      "purchaseProject": {
                        "type": "string"
                      },
                      "eccn": {
                        "type": "string"
                      },
                      "hkHsCode": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "unitPrice": {
                        "type": "string"
                      },
                      "imsiProfileId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "deletedAt": {
                        "type": "string"
                      },
                      "updatedById": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "string"
                      },
                      "deleted_at": {
                        "type": "object"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "A date time format."
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "A date time format."
                      }
                    }
                  }
                }
              },
              "example": {
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "friendlyId": {
                    "type": "string"
                  },
                  "simPoolId": {
                    "type": "string"
                  },
                  "simPoolName": {
                    "type": "string"
                  },
                  "companyId": {
                    "type": "string"
                  },
                  "apnId": {
                    "type": "string"
                  },
                  "connectivityType": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "simQuantity": {
                    "type": "string"
                  },
                  "deliveryAddress": {
                    "type": "string"
                  },
                  "companyAddress": {
                    "type": "string"
                  },
                  "orderType": {
                    "type": "string"
                  },
                  "dnsPreferred": {
                    "type": "string"
                  },
                  "dnsAlternate": {
                    "type": "string"
                  },
                  "useDefaultDNS": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "error": {
                    "type": "string"
                  },
                  "userEmail": {
                    "type": "string"
                  },
                  "deliveryEmail": {
                    "type": "string"
                  },
                  "paymentType": {
                    "type": "string"
                  },
                  "offerType": {
                    "type": "string"
                  },
                  "endUser": {
                    "type": "string"
                  },
                  "skipUserEmail": {
                    "type": "boolean"
                  },
                  "skipAdminEmail": {
                    "type": "boolean"
                  },
                  "skipSupportEmail": {
                    "type": "boolean"
                  },
                  "skipCompliance": {
                    "type": "boolean"
                  },
                  "skipSlack": {
                    "type": "boolean"
                  },
                  "skipInsightSr": {
                    "type": "boolean"
                  },
                  "sourceEnterpriseId": {
                    "type": "string"
                  },
                  "simType": {
                    "type": "string"
                  },
                  "productId": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "manufacturer": {
                    "type": "string"
                  },
                  "purchaseDate": {
                    "type": "string"
                  },
                  "originalPurchaseOrder": {
                    "type": "string"
                  },
                  "purchaseProject": {
                    "type": "string"
                  },
                  "eccn": {
                    "type": "string"
                  },
                  "hkHsCode": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "unitPrice": {
                    "type": "string"
                  },
                  "imsiProfileId": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "updatedAt": {
                    "type": "string"
                  },
                  "deletedAt": {
                    "type": "string"
                  },
                  "updatedById": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "deleted_at": {
                    "type": "object"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "A date time format."
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "A date time format."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "0433187-29b2-40d6-97de-69b3cb4f7a0f",
                  "friendlyId": "IOTC38C11E9BD",
                  "simPoolId": null,
                  "simPoolName": "test 123456",
                  "companyId": "5f97d3d2d85fbe0014fd1812",
                  "apnId": "e3f8ae76-3b1a-40e0-ae29-4ed336b143e3",
                  "connectivityType": "PRIVATE",
                  "name": "test 123456",
                  "simQuantity": 1,
                  "deliveryAddress": null,
                  "companyAddress": "Lorem , Ipsum Text",
                  "orderType": "PAYG",
                  "dnsPreferred": "10.100.1.1",
                  "dnsAlternate": "10.100.1.2",
                  "useDefaultDNS": true,
                  "status": "EXPORT-COMPLIANCE-REJECTED",
                  "error": null,
                  "userEmail": "user@pccwglobal.com",
                  "deliveryEmail": null,
                  "paymentType": "INVOICE",
                  "offerType": null,
                  "endUser": null,
                  "skipUserEmail": false,
                  "skipAdminEmail": false,
                  "skipSupportEmail": false,
                  "skipCompliance": false,
                  "skipSlack": false,
                  "skipInsightSr": false,
                  "sourceEnterpriseId": null,
                  "simType": "PHYSICAL-SIM",
                  "productId": 1143474,
                  "description": "Lorem , Ipsum Text",
                  "manufacturer": "Thales (MADE IN CHINA)",
                  "purchaseDate": "2020-05-26T00:00:00.000Z",
                  "originalPurchaseOrder": "ZM1124438",
                  "purchaseProject": "IoT",
                  "eccn": "EAR99",
                  "hkHsCode": 85235200,
                  "currency": "USD",
                  "unitPrice": null,
                  "imsiProfileId": null,
                  "createdAt": "2024-07-08T11:09:19.386Z",
                  "updatedAt": "2024-07-15T12:38:48.933Z",
                  "deletedAt": null,
                  "updatedById": null,
                  "company_id": "5f97d3d2d85fbe0014fd1412",
                  "deleted_at": null,
                  "created_at": "2024-07-08T11:09:19.386Z",
                  "updated_at": "2024-07-15T12:38:48.933Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/get"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "code": "MODEL_NOT_FOUND",
                  "message": "Could not find a model with id 1279376404047642y3003273442324234",
                  "statusCode": 404,
                  "name": "Error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchemaExtended"
                }
              }
            },
            "headers": {}
          }
        },
        "tags": ["Edge SIM"],
        "description": "Creates a new Edge SIM order of this model type and returns it as a response",
        "operationId": "CreateEdgeSIMOrder",
        "summary": "Create Edge SIM order"
      }
    },
    "/app-user/{id}/iot-order/{fk}": {
      "post": {
        "parameters": [
          {
            "description": "This correlates to the current API user's id.",
            "in": "path",
            "example": "017d9187-29b2-40d6-97de-69b3cb4f7a0f",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This correlates to the Foreign key for/on Edge SIM orders.",
            "in": "path",
            "example": "ansId",
            "name": "fk",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "id": "0433187-29b2-40d6-97de-69b3cb4f7a0f",
                  "friendlyId": "IOTC38C11E9BD",
                  "simPoolId": null,
                  "simPoolName": "test 123456",
                  "companyId": "5f97d3d2d85fbe0014fd1812",
                  "apnId": "e3f8ae76-3b1a-40e0-ae29-4ed336b143e3",
                  "connectivityType": "PRIVATE",
                  "name": "test 123456",
                  "simQuantity": 1,
                  "deliveryAddress": null,
                  "companyAddress": "Lorem , Ipsum Text",
                  "orderType": "PAYG",
                  "dnsPreferred": "10.100.1.1",
                  "dnsAlternate": "10.100.1.2",
                  "useDefaultDNS": true,
                  "status": "EXPORT-COMPLIANCE-REJECTED",
                  "error": null,
                  "userEmail": "user@pccwglobal.com",
                  "deliveryEmail": null,
                  "paymentType": "INVOICE",
                  "offerType": null,
                  "endUser": null,
                  "skipUserEmail": false,
                  "skipAdminEmail": false,
                  "skipSupportEmail": false,
                  "skipCompliance": false,
                  "skipSlack": false,
                  "skipInsightSr": false,
                  "sourceEnterpriseId": null,
                  "simType": "PHYSICAL-SIM",
                  "productId": 1143474,
                  "description": "Lorem , Ipsum Text",
                  "manufacturer": "Thales (MADE IN CHINA)",
                  "purchaseDate": "2020-05-26T00:00:00.000Z",
                  "originalPurchaseOrder": "ZM1124438",
                  "purchaseProject": "IoT",
                  "eccn": "EAR99",
                  "hkHsCode": 85235200,
                  "currency": "USD",
                  "unitPrice": null,
                  "imsiProfileId": null,
                  "createdAt": "2024-07-08T11:09:19.386Z",
                  "updatedAt": "2024-07-15T12:38:48.933Z",
                  "deletedAt": null,
                  "updatedById": null,
                  "company_id": "5f97d3d2d85fbe0014fd1412",
                  "deleted_at": null,
                  "created_at": "2024-07-08T11:09:19.386Z",
                  "updated_at": "2024-07-15T12:38:48.933Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/get"
                }
              }
            },
            "description": "OK",
            "headers": {}
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "code": "MODEL_NOT_FOUND",
                  "message": "Could not find a model with id 1279376404047642y3003273442324234",
                  "statusCode": 404,
                  "name": "Error"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchemaExtended"
                }
              }
            },
            "headers": {}
          }
        },
        "tags": ["Edge SIM"],
        "description": "Finds a related item by id from Edge SIM orders.",
        "operationId": "FindEdgeSIMOrders",
        "summary": "Finds a related item by id from Edge SIM orders."
      }
    },
    "/pricing/generate-pdf": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sendEMail": {
                    "type": "boolean",
                    "description": "Send pricing calculator result via email."
                  },
                  "ports": {
                    "type": "array",
                    "description": "An array of ports objects.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": ["CALCULATED", "EDITING", "INVALID"],
                          "description": "A status of the port"
                        },
                        "location": {
                          "type": "string",
                          "description": "A location of the port."
                        },
                        "dcfId": {
                          "type": "string",
                          "description": "ID of the port's data center facility."
                        },
                        "speed": {
                          "type": "number",
                          "description": "The speed of the port in Gbps."
                        },
                        "price": {
                          "type": "number",
                          "description": "The price of the port."
                        },
                        "resetState": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": ["CALCULATED", "EDITING", "INVALID"],
                              "description": "The status of the port."
                            },
                            "location": {
                              "type": "string",
                              "description": "The location of the port."
                            },
                            "dcfId": {
                              "type": "string",
                              "description": "The ID of the port's data center facility."
                            },
                            "speed": {
                              "type": "number",
                              "description": "The speed of the port in Gbps."
                            },
                            "price": {
                              "type": "number",
                              "description": "The price of the port."
                            }
                          }
                        }
                      }
                    }
                  },
                  "connections": {
                    "type": "array",
                    "description": "An array of connection objects.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": ["CALCULATED", "EDITING", "INVALID"],
                          "description": "The status of the connection."
                        },
                        "bandwidth": {
                          "type": "number",
                          "description": "The bandwidth of the connection."
                        },
                        "duration": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "A numerical value for connection duration, used in combination with 'unit'."
                            },
                            "unit": {
                              "type": "string",
                              "description": "A unit of measurement for connection duration. For example, 'm','d','y','w'."
                            }
                          }
                        },
                        "srcLocation": {
                          "type": "string",
                          "description": "The source (A-end) location of the connection."
                        },
                        "category": {
                          "type": "string",
                          "description": "The category of connection."
                        },
                        "destLocation": {
                          "type": "string",
                          "description": "The destination (Z-end) location of the connection."
                        },
                        "classOfService": {
                          "type": "string",
                          "enum": ["GOLD", "SILVER", "BRONZE"],
                          "description": "The class of service of the connection."
                        },
                        "srcCode": {
                          "type": "string",
                          "description": "The source code of the connection."
                        },
                        "destCode": {
                          "type": "string",
                          "description": "The destination code of the connection."
                        },
                        "price": {
                          "type": "number",
                          "description": "The price of the port."
                        },
                        "priceOptions": {
                          "type": "array",
                          "description": "The price option description of the connection.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "number",
                                "description": "The price or price option."
                              },
                              "duration": {
                                "type": "object",
                                "properties": {
                                  "from": {
                                    "type": "null",
                                    "description": "The \"from\" property in the connection's price options."
                                  },
                                  "to": {
                                    "type": "null",
                                    "description": "The \"to\" property in the connection's price options."
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "A numerical value for connection duration of connection, used in combination with 'unit'."
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "A unit of measurement for connection duration.  For example, 'm', 'd', 'y', 'w'."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "resetState": {
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": ["CALCULATED", "EDITING", "INVALID"],
                              "description": "The status of the connection."
                            },
                            "bandwidth": {
                              "type": "number",
                              "description": "The bandwidth of the connection."
                            },
                            "duration": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "description": "A numerical value for connection duration of connection, used in combination with 'unit'."
                                },
                                "unit": {
                                  "type": "string",
                                  "description": "A unit of measurement for connection duration.  For example, 'm', 'd', 'y', 'w'."
                                }
                              }
                            },
                            "srcLocation": {
                              "type": "string",
                              "description": "The source location of the connection."
                            },
                            "category": {
                              "type": "string",
                              "description": "The category of connection."
                            },
                            "destLocation": {
                              "type": "string",
                              "description": "The destination location of the connection."
                            },
                            "classOfService": {
                              "type": "string",
                              "enum": ["GOLD", "SILVER", "BRONZE"],
                              "description": "The class of service for the connection."
                            },
                            "srcCode": {
                              "type": "string",
                              "description": "The source code of the connection."
                            },
                            "destCode": {
                              "type": "string",
                              "description": "The destination code of the connection."
                            },
                            "price": {
                              "type": "number",
                              "description": "The price of the port."
                            },
                            "priceOptions": {
                              "type": "array",
                              "description": "The price option description for the connection.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "price": {
                                    "type": "number",
                                    "description": "The price or price option."
                                  },
                                  "duration": {
                                    "type": "object",
                                    "properties": {
                                      "from": {
                                        "type": "null",
                                        "description": "The \"from\" property in the connection's price options."
                                      },
                                      "to": {
                                        "type": "null",
                                        "description": "A to property in the connection's price options."
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "A numerical value for connection duration of connection, used in combination with 'unit'."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "description": "A unit of measurement for connection duration.  For example, 'm', 'd', 'y', 'w'."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "internet": {
                    "type": "array",
                    "description": "An array of Internet on Demand objects.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": ["CALCULATED", "EDITING", "INVALID"],
                          "description": "The status of the Internet on-Demand service."
                        },
                        "bandwidth": {
                          "type": "number",
                          "description": "The bandwidth of the Internet on-Demand service."
                        },
                        "duration": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "A numerical value for duration of service, used in combination with 'unit'."
                            },
                            "unit": {
                              "type": "string",
                              "description": "A unit of measurement for duration.  For example, 'm', 'd', 'y', 'w'."
                            }
                          }
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the Internet on Demand service."
                        },
                        "price": {
                          "type": "number",
                          "description": "The price of the Internet on Demand service"
                        },
                        "priceOptions": {
                          "type": "array",
                          "description": "Price options for the Internet on Demand service.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "number",
                                "description": "A price or price option."
                              },
                              "duration": {
                                "type": "object",
                                "properties": {
                                  "from": {
                                    "type": "number",
                                    "description": ""
                                  },
                                  "to": {
                                    "type": "number",
                                    "description": ""
                                  },
                                  "value": {
                                    "type": "number",
                                    "description": "A value for duration of Internet on-Demand."
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "A unit of measurement for Internet on-Demand service."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "resetState": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": ["CALCULATED", "EDITING", "INVALID"],
                              "description": "The status of the Internet on-Demand."
                            },
                            "bandwidth": {
                              "type": "number",
                              "description": "The bandwidth of the Internet on-Demand service."
                            },
                            "duration": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "description": "A value for duration."
                                },
                                "unit": {
                                  "type": "string",
                                  "description": "A unit of measurement for duration of Internet on Demand."
                                }
                              }
                            },
                            "location": {
                              "type": "string",
                              "description": "The location of the Internet on Demand service."
                            },
                            "price": {
                              "type": "number",
                              "description": "Prices for the Internet on Demand service."
                            },
                            "priceOptions": {
                              "type": "array",
                              "description": "Price options for the Internet on Demand service.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "price": {
                                    "type": "number",
                                    "description": "The price or price options for the service."
                                  },
                                  "duration": {
                                    "type": "object",
                                    "properties": {
                                      "from": {
                                        "type": "number",
                                        "description": ""
                                      },
                                      "to": {
                                        "type": "number",
                                        "description": ""
                                      },
                                      "value": {
                                        "type": "number",
                                        "description": "A value for duration of Internet on Demand service."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "description": "A unit of measurement for Internet on Demand service."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "CloudRouter": {
                    "type": "array",
                    "description": "An array of CloudRouter site objects.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": ["CALCULATED", "EDITING", "INVALID"],
                          "description": "The status of the CloudRouter site."
                        },
                        "duration": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "A value for duration."
                            },
                            "unit": {
                              "type": "string",
                              "description": "A unit of measurement for duration of CloudRouter site."
                            }
                          }
                        },
                        "bandwidth": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "Bandwidth of CloudRouter."
                            },
                            "label": {
                              "type": "string",
                              "description": "Bandwidth label of CloudRouter."
                            }
                          }
                        },
                        "sites": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "An array of CloudRouter site objects.",
                            "properties": {
                              "category": {
                                "type": "string",
                                "description": "Category of CloudRouter site."
                              },
                              "location": {
                                "type": "string",
                                "description": "The location of the CloudRouter site."
                              },
                              "companyId": {
                                "type": "string",
                                "description": "The ID of the company used by CloudRouter site."
                              },
                              "rateLimit": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "number",
                                    "description": "Bandwidth (number) of CloudRouter site, to be used with 'unit'."
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "Bandwidth unit."
                                  }
                                }
                              },
                              "priceRefId": {
                                "type": "number",
                                "description": "The refId of priced CloudRouter site."
                              }
                            }
                          }
                        },
                        "pricedSites": {
                          "type": "array",
                          "description": "An array of priced sites objects.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "selectedClassOfService": {
                                "type": "string",
                                "enum": ["GOLD", "SILVER", "BRONZE"],
                                "description": "A selected class of service for priced CloudRouter sites.."
                              },
                              "priceRefId": {
                                "type": "number",
                                "description": "A refId of priced CloudRouter site."
                              },
                              "prices": {
                                "type": "object",
                                "properties": {
                                  "hourlyCost": {
                                    "type": "number",
                                    "description": "The hourly cost of priced CloudRouter sites."
                                  },
                                  "hourlyCostAmountSaved": {
                                    "type": "number",
                                    "description": "The amount per hour saved on the priced CloudRouter sites."
                                  },
                                  "dailyCost": {
                                    "type": "number",
                                    "description": "The daily costof the priced CloudRouter sites."
                                  },
                                  "monthlyCost": {
                                    "type": "number",
                                    "description": "The monthly cost of the priced CloudRouter sites."
                                  }
                                }
                              },
                              "site": {
                                "type": "object",
                                "properties": {
                                  "portId": {
                                    "type": "string",
                                    "description": "The Id for the port of the CloudRouter site."
                                  },
                                  "dcfId": {
                                    "type": "string",
                                    "description": "The dcfid of the CloudRouter site."
                                  },
                                  "discountId": {
                                    "type": "string",
                                    "description": "The discountId for the CloudRouter site."
                                  },
                                  "rateLimit": {
                                    "type": "object",
                                    "properties": {
                                      "unit": {
                                        "type": "string",
                                        "description": "Unit of measurement for rate limit (Mbps only)."
                                      },
                                      "rate": {
                                        "type": "number",
                                        "description": "The rate limit for the CloudRouter site in Mbps."
                                      }
                                    }
                                  },
                                  "providerInfo": {
                                    "type": "object",
                                    "properties": {
                                      "dcfName": {
                                        "type": "string",
                                        "description": "The provider of the CloudRouter site."
                                      },
                                      "dcfId": {
                                        "type": "string",
                                        "description": "The cloudRouter site provider's dcfId."
                                      },
                                      "metroId": {
                                        "type": "string",
                                        "description": "The CloudRouter site provider's metroId ."
                                      },
                                      "city": {
                                        "type": "string",
                                        "description": "The CloudRouter site provider's city."
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "The CloudRouter site provider's country."
                                      },
                                      "countryDisplayName": {
                                        "type": "string",
                                        "description": "The CloudRouter site provider's country display name."
                                      }
                                    }
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of CloudRouter site."
                                  }
                                }
                              },
                              "displayName": {
                                "type": "string",
                                "description": "The display name of the priced CloudRouter site."
                              }
                            }
                          }
                        },
                        "baseL3vpnCost": {
                          "type": "number",
                          "description": "The base cost of the CloudRouter site."
                        },
                        "price": {
                          "type": "number",
                          "description": "The price of the CloudRouter."
                        },
                        "resetState": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": ["CALCULATED", "EDITING", "INVALID"],
                              "description": "The status of the CloudRouter site."
                            },
                            "duration": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "description": "A value for duration."
                                },
                                "unit": {
                                  "type": "string",
                                  "description": "A unit of measurement for duration of CloudRouter site."
                                }
                              }
                            },
                            "bandwidth": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "description": "Bandwidth of the CloudRouter."
                                },
                                "label": {
                                  "type": "string",
                                  "description": "Bandwidth label for the CloudRouter."
                                }
                              }
                            },
                            "sites": {
                              "type": "array",
                              "description": "An array of CloudRouter site objects.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "category": {
                                    "type": "string",
                                    "description": "Category of CloudRouter site."
                                  },
                                  "location": {
                                    "type": "string",
                                    "description": "Location of the CloudRouter site."
                                  },
                                  "companyId": {
                                    "type": "string",
                                    "description": "An Id of company used by CloudRouter site."
                                  },
                                  "rateLimit": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "description": "Bandwidth value of CloudRouter site."
                                      },
                                      "unit": {
                                        "type": "string",
                                        "description": "Bandwidth Unit"
                                      }
                                    }
                                  },
                                  "priceRefId": {
                                    "type": "number",
                                    "description": "The refId of the priced CloudRouter site."
                                  }
                                }
                              }
                            },
                            "pricedSites": {
                              "type": "array",
                              "description": "An array of pricedSites objects.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "selectedClassOfService": {
                                    "type": "string",
                                    "enum": ["GOLD", "SILVER", "BRONZE"],
                                    "description": "The selected class of service for priced CloudRouter sites."
                                  },
                                  "priceRefId": {
                                    "type": "number",
                                    "description": "The refId of priced CloudRouter sites."
                                  },
                                  "prices": {
                                    "type": "object",
                                    "properties": {
                                      "hourlyCost": {
                                        "type": "number",
                                        "description": "The hourly cost for the priced CloudRouter sites."
                                      },
                                      "hourlyCostAmountSaved": {
                                        "type": "number",
                                        "description": "The hourly cost amount saved for the priced CloudRouter sites."
                                      },
                                      "dailyCost": {
                                        "type": "number",
                                        "description": "The daily cost of the priced CloudRouter sites."
                                      },
                                      "monthlyCost": {
                                        "type": "number",
                                        "description": "The monthly cost of the priced CloudRouter sites."
                                      }
                                    }
                                  },
                                  "site": {
                                    "type": "object",
                                    "properties": {
                                      "portId": {
                                        "type": "number",
                                        "description": "The portId for the CloudRouter site."
                                      },
                                      "dcfId": {
                                        "type": "string",
                                        "description": "The dcfid of the CloudRouter site."
                                      },
                                      "discountId": {
                                        "type": "string",
                                        "description": "The discountId of the CloudRouter site."
                                      },
                                      "rateLimit": {
                                        "type": "object",
                                        "properties": {
                                          "unit": {
                                            "type": "string",
                                            "description": "The unit of measurement for rate limit (Mbps only)."
                                          },
                                          "rate": {
                                            "type": "number",
                                            "description": "The rate limit amount."
                                          }
                                        }
                                      },
                                      "providerInfo": {
                                        "type": "object",
                                        "properties": {
                                          "dcfName": {
                                            "type": "string",
                                            "description": "The CloudRouter site provider's name."
                                          },
                                          "dcfId": {
                                            "type": "string",
                                            "description": "The CloudRouter site provider's dcfId."
                                          },
                                          "metroId": {
                                            "type": "string",
                                            "description": "The CloudRouter site provider's metroId."
                                          },
                                          "city": {
                                            "type": "string",
                                            "description": "The CloudRouter site provider's city."
                                          },
                                          "country": {
                                            "type": "string",
                                            "description": "The CloudRouter site provider's country."
                                          },
                                          "countryDisplayName": {
                                            "type": "string",
                                            "description": "The CloudRouter site provider's country display name."
                                          }
                                        }
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of site."
                                      }
                                    }
                                  },
                                  "displayName": {
                                    "type": "string",
                                    "description": "The display name of the priced CloudRouter site."
                                  }
                                }
                              }
                            },
                            "baseL3vpnCost": {
                              "type": "number",
                              "description": "The base cost of the CloudRouter site."
                            },
                            "price": {
                              "type": "number",
                              "description": "The price of the CloudRouter service."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "portsArray": [
                  {
                    "status": "CALCULATED",
                    "location": "Sydney, Australia",
                    "dcfId": "5efbdd1ef4fa0300142101ec",
                    "speed": 1,
                    "price": 300,
                    "resetState": {
                      "status": "CALCULATED",
                      "location": "Sydney, Australia",
                      "dcfId": "5efbdd1ef4fa0300142101ec",
                      "speed": 1,
                      "price": 300
                    }
                  }
                ],
                "connectionsArray": [
                  {
                    "status": "CALCULATED",
                    "bandwidth": 50,
                    "duration": {
                      "value": 3,
                      "unit": "d"
                    },
                    "srcLocation": "Osaka, Japan",
                    "category": "datacenter",
                    "destLocation": "Tokyo, Japan",
                    "classOfService": "SILVER",
                    "srcCode": "JAP",
                    "destCode": "JAP",
                    "price": 11,
                    "priceOptions": [
                      {
                        "price": 11,
                        "duration": {
                          "from": null,
                          "to": null,
                          "unit": "d",
                          "value": 1
                        }
                      }
                    ],
                    "resetState": {
                      "status": "CALCULATED",
                      "bandwidth": 50,
                      "duration": {
                        "value": 3,
                        "unit": "d"
                      },
                      "srcLocation": "Osaka, Japan",
                      "category": "datacenter",
                      "destLocation": "Tokyo, Japan",
                      "classOfService": "SILVER",
                      "srcCode": "JAP",
                      "destCode": "JAP",
                      "price": 11,
                      "priceOptions": [
                        {
                          "price": 11,
                          "duration": {
                            "from": null,
                            "to": null,
                            "unit": "d",
                            "value": 1
                          }
                        }
                      ]
                    }
                  }
                ],
                "iodArray": [
                  {
                    "status": "CALCULATED",
                    "bandwidth": 10,
                    "duration": {
                      "value": 12,
                      "unit": "m"
                    },
                    "location": "Taipei, Taiwan",
                    "price": 100,
                    "priceOptions": [
                      {
                        "price": 7.23,
                        "duration": {
                          "from": null,
                          "to": null,
                          "unit": "d",
                          "value": 1
                        },
                        "code": "TAI"
                      }
                    ],
                    "resetState": {
                      "status": "CALCULATED",
                      "bandwidth": 10,
                      "duration": {
                        "value": 12,
                        "unit": "m"
                      },
                      "location": "Taipei Taiwan",
                      "price": 100,
                      "priceOptions": [
                        {
                          "price": 7.23,
                          "duration": {
                            "from": null,
                            "to": null,
                            "unit": "d",
                            "value": 1
                          },
                          "code": "TAI"
                        }
                      ]
                    }
                  }
                ],
                "cloudRouterArray": [
                  {
                    "status": "CALCULATED",
                    "duration": {
                      "value": 2,
                      "unit": "m"
                    },
                    "bandwidth": {
                      "value": 500,
                      "label": "500MB"
                    },
                    "sites": [
                      {
                        "category": "datacenter",
                        "location": "Buenos Aires Argentina",
                        "companyId": "undefined",
                        "rateLimit": {
                          "value": 100,
                          "unit": "mbps"
                        },
                        "priceRefId": 0
                      }
                    ],
                    "pricedSites": [
                      {
                        "selectedClassOfService": "BRONZE",
                        "priceRefId": 0,
                        "prices": {
                          "BRONZE": {
                            "hourlyCost": 0.2397,
                            "hourlyCostAmountSaved": null,
                            "dailyCost": 5.7528,
                            "monthlyCost": 174.981
                          },
                          "SILVER": {
                            "hourlyCost": 0.2397,
                            "hourlyCostAmountSaved": null,
                            "dailyCost": 5.7528,
                            "monthlyCost": 174.981
                          },
                          "GOLD": {
                            "hourlyCost": 0.2397,
                            "hourlyCostAmountSaved": null,
                            "dailyCost": 5.7528,
                            "monthlyCost": 174.981
                          }
                        },
                        "site": {
                          "portId": null,
                          "dcfId": "62426d15ff842c00151d9f02",
                          "discountId": null,
                          "rateLimit": {
                            "unit": "MBPS",
                            "rate": 100
                          },
                          "providerInfo": {
                            "dcfName": "TEST_CR TICTAC DCF",
                            "dcfId": "62426d15ff842c00151d9f02",
                            "metroId": "77d9f1fbbcaa906f3cddb6d1",
                            "city": "Buenos Aires",
                            "country": "AR",
                            "countryDisplayName": "Argentina"
                          },
                          "type": "COMPANY",
                          "displayName": "Data Center"
                        }
                      }
                    ],
                    "baseL3vpnCost": 100,
                    "price": 449.98,
                    "resetState": {
                      "status": "CALCULATED",
                      "duration": {
                        "value": 2,
                        "unit": "m"
                      },
                      "bandwidth": {
                        "value": 500,
                        "label": "500MB"
                      },
                      "sites": [
                        {
                          "category": "datacenter",
                          "location": "Buenos Aires Argentina",
                          "companyId": "undefined",
                          "rateLimit": {
                            "value": 100,
                            "unit": "mbps"
                          },
                          "priceRefId": 0
                        }
                      ],
                      "pricedSites": [
                        {
                          "selectedClassOfService": "BRONZE",
                          "priceRefId": 0,
                          "prices": {
                            "BRONZE": {
                              "hourlyCost": 0.2397,
                              "hourlyCostAmountSaved": null,
                              "dailyCost": 5.7528,
                              "monthlyCost": 174.981
                            },
                            "SILVER": {
                              "hourlyCost": 0.2397,
                              "hourlyCostAmountSaved": null,
                              "dailyCost": 5.7528,
                              "monthlyCost": 174.981
                            },
                            "GOLD": {
                              "hourlyCost": 0.2397,
                              "hourlyCostAmountSaved": null,
                              "dailyCost": 5.7528,
                              "monthlyCost": 174.981
                            }
                          },
                          "site": {
                            "portId": null,
                            "dcfId": "62426d15ff842c00151d9f02",
                            "discountId": null,
                            "rateLimit": {
                              "unit": "MBPS",
                              "rate": 100
                            },
                            "providerInfo": {
                              "dcfName": "TEST_CR TICTAC DCF",
                              "dcfId": "62426d15ff842c00151d9f02",
                              "metroId": "77d9f1fbbcaa906f3cddb6d1",
                              "city": "Buenos Aires",
                              "country": "AR",
                              "countryDisplayName": "Argentina"
                            },
                            "type": "COMPANY"
                          },
                          "displayName": "Data Center"
                        }
                      ],
                      "baseL3vpnCost": 100,
                      "price": 449.98
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": "The PDF file that is generated.",
            "headers": {}
          }
        },
        "tags": ["Pricing"],
        "description": "Generate a PDF with pricing information.",
        "operationId": "generate-pdf",
        "summary": "Generate PDF"
      }
    },
    "/v2/support-tickets": {
      "get": {
        "summary": "Get support tickets for the logged in users company",
        "tags": ["Support Tickets"],
        "description": "Get a list of support tickets.",
        "operationId": "GetSupportTicketsList",
        "parameters": [
          {
            "description": "Criteria for searching support tickets.",
            "in": "query",
            "name": "status",
            "required": true,
            "example": "open",
            "schema": {
              "type": "string",
              "enum": ["open", "closed"]
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "The \"page\" of results from a query.",
            "example": 1
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            },
            "description": "The number of results to be returned in a query.",
            "example": 200
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of support tickets.",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "INC000001234567",
                    "name": "Ticket Name Label",
                    "description": "This is the description of the ticket",
                    "priority": ["Low", "Medium", "High", "Critical"],
                    "status": "Acknowledged",
                    "ticketType": "Incident",
                    "creationDate": "2023-01-01T01:02:03.000+0000",
                    "notes": [
                      {
                        "id": "category",
                        "text": "Console Connect",
                        "@type": "faultsymptom"
                      },
                      {
                        "id": "item",
                        "text": "Billing",
                        "@type": "faultsymptom"
                      },
                      {
                        "id": "type",
                        "text": "Cloud",
                        "@type": "faultsymptom"
                      },
                      {
                        "id": "Email-Open Ticket",
                        "text": "An example note for communication about the ticket",
                        "worklogId": "WLG000012345678",
                        "@type": "worklog"
                      }
                    ],
                    "relatedParty": [
                      {
                        "name": "Contact Name",
                        "phone": "+123456789",
                        "email": "contact.name@emaildomain.com"
                      }
                    ],
                    "relatedEntity": [
                      {
                        "name": "AAA111",
                        "role": "customerId",
                        "@type": "RelatedEntity",
                        "@referredType": "Profile"
                      }
                    ],
                    "channel": {
                      "name": "Phone",
                      "@type": "Customer"
                    },
                    "@type": "troubleTicket"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Throws an error for an unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "401,",
                    "name": "Error",
                    "message": "Support Ticket: ticketId does not exist or Company: companyId does not have permission to view it."
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create support ticket",
        "tags": ["Support Tickets"],
        "description": "Create a support ticket for the logged in users company.",
        "operationId": "CreateSupportTicket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Ticket Name Label"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is the description of the ticket"
                  },
                  "issueType": {
                    "type": "string",
                    "enum": [
                      "Application",
                      "Circuit Down",
                      "Circuit Flapping",
                      "Circuit taking errors",
                      "High Latency",
                      "Operational Request",
                      "Others",
                      "Packet Loss/Drops",
                      "Request Reason of Outage",
                      "Slow Response",
                      "Unstable"
                    ]
                  },
                  "service": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "SR12345"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Port",
                          "CloudRouter",
                          "Internet on Demand",
                          "Connection (L2)",
                          "Non-Console Service"
                        ],
                        "example": "Non-Console Service"
                      }
                    }
                  },
                  "customerContact": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Contact Name"
                      },
                      "phone": {
                        "type": "string",
                        "example": "+123456789"
                      },
                      "email": {
                        "type": "string",
                        "example": "contact.name@emaildomain.com"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Console_Service": {
                  "summary": "Creating a ticket for a Console Connect Service",
                  "description": "An example payload when raising a ticket for a service available in the /support-tickets/services list.\n",
                  "value": {
                    "name": "My ConsoleConnect speed issue",
                    "description": "My port has slow speeds between 8am and 9am GMT+7",
                    "issueType": "Slow Response",
                    "service": {
                      "id": "6631ce03ebae12a6ab633333",
                      "type": "Connection (L2)"
                    },
                    "customerContact": {
                      "name": "Contact Name",
                      "phone": "+123456789",
                      "email": "contact.name@emaildomain.com"
                    }
                  }
                },
                "Non-Console_Service": {
                  "summary": "Creating a ticket for a Non-Console Connect Service",
                  "description": "An example payload when raising a ticket for a service that is not available in the /support-tickets/services list.\n",
                  "value": {
                    "name": "My PCCW service latency issue",
                    "description": "My connection has high latency since 5/March",
                    "issueType": "High Latency",
                    "service": {
                      "id": "SR54321",
                      "type": "Non-Console Service"
                    },
                    "customerContact": {
                      "name": "Contact Name",
                      "phone": "+123456789",
                      "email": "contact.name@emaildomain.com"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a single support ticket.",
            "content": {
              "application/json": {
                "example": {
                  "id": "INC000001234567",
                  "name": "Ticket Name Label",
                  "description": "This is the description of the ticket",
                  "priority": ["Low", "Medium", "High", "Critical"],
                  "status": "Acknowledged",
                  "ticketType": "Incident",
                  "creationDate": "2023-01-01T01:02:03.000+0000",
                  "notes": [
                    {
                      "id": "category",
                      "text": "Console Connect",
                      "@type": "faultsymptom"
                    },
                    {
                      "id": "item",
                      "text": "Billing",
                      "@type": "faultsymptom"
                    },
                    {
                      "id": "type",
                      "text": "Cloud",
                      "@type": "faultsymptom"
                    },
                    {
                      "id": "Email-Open Ticket",
                      "text": "An example note for communication about the ticket",
                      "worklogId": "WLG000012345678",
                      "@type": "worklog"
                    }
                  ],
                  "relatedParty": [
                    {
                      "name": "Contact Name",
                      "phone": "+123456789",
                      "email": "contact.name@emaildomain.com"
                    }
                  ],
                  "relatedEntity": [
                    {
                      "name": "AAA111",
                      "role": "customerId",
                      "@type": "RelatedEntity",
                      "@referredType": "Profile"
                    }
                  ],
                  "channel": {
                    "name": "Phone",
                    "@type": "Customer"
                  },
                  "@type": "troubleTicket"
                }
              }
            }
          },
          "400": {
            "description": "Throws an error for an invalid ticket id.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "404,",
                    "name": "Error",
                    "message": "Support Ticket: ticketId is not valid."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Throws an error for an unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "401,",
                    "name": "Error",
                    "message": "Support Ticket: ticketId does not exist or Company: companyId does not have permission to view it."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/support-tickets/{id}": {
      "get": {
        "summary": "Get support ticket by Id",
        "tags": ["Support Tickets"],
        "description": "Get a single support ticket.",
        "operationId": "GetSupportTicketById",
        "parameters": [
          {
            "description": "The id of the support ticket.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "INC000001234567"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single support ticket.",
            "content": {
              "application/json": {
                "example": {
                  "id": "INC000001234567",
                  "name": "Ticket Name Label",
                  "description": "This is the description of the ticket",
                  "priority": ["Low", "Medium", "High", "Critical"],
                  "status": "Acknowledged",
                  "ticketType": "Incident",
                  "creationDate": "2023-01-01T01:02:03.000+0000",
                  "notes": [
                    {
                      "id": "category",
                      "text": "Console Connect",
                      "@type": "faultsymptom"
                    },
                    {
                      "id": "item",
                      "text": "Billing",
                      "@type": "faultsymptom"
                    },
                    {
                      "id": "type",
                      "text": "Cloud",
                      "@type": "faultsymptom"
                    },
                    {
                      "id": "Email-Open Ticket",
                      "text": "An example note for communication about the ticket",
                      "worklogId": "WLG000012345678",
                      "@type": "worklog"
                    }
                  ],
                  "relatedParty": [
                    {
                      "name": "Contact Name",
                      "phone": "+123456789",
                      "email": "contact.name@emaildomain.com"
                    }
                  ],
                  "relatedEntity": [
                    {
                      "name": "AAA111",
                      "role": "customerId",
                      "@type": "RelatedEntity",
                      "@referredType": "Profile"
                    }
                  ],
                  "channel": {
                    "name": "Phone",
                    "@type": "Customer"
                  },
                  "@type": "troubleTicket"
                }
              }
            }
          },
          "400": {
            "description": "Throws an error for an invalid ticket id.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "404,",
                    "name": "Error",
                    "message": "Support Ticket: ticketId is not valid."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Throws an error for an unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "401,",
                    "name": "Error",
                    "message": "Support Ticket: ticketId does not exist or Company: companyId does not have permission to view it."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Throws an error for a support ticket that does not exist.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "404,",
                    "name": "Error",
                    "message": "Support Ticket: ticketId does not exist."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/support-tickets/services": {
      "get": {
        "summary": "List Console Services",
        "tags": ["Support Tickets"],
        "description": "Provides a list of Console Connect services that a support ticket can be created for.",
        "operationId": "GetSupportTicketConsoleServices",
        "responses": {
          "200": {
            "description": "Returns the resulting with the new note.",
            "content": {
              "application/json": {
                "example": [
                  {
                    "type": "Port",
                    "value": "6631ce03ebae12a6ab622222",
                    "label": "Sydney Port"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Throws an error for an unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "401,",
                    "name": "Error",
                    "message": "Support Ticket: ticketId does not exist or Company: companyId does not have permission to view it."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/support-tickets/{id}/addNote": {
      "post": {
        "summary": "Add Note to support ticket",
        "operationId": "AddNoteToSupportTicket",
        "tags": ["Support Tickets"],
        "description": "Adds a note to an existing support ticket.",
        "parameters": [
          {
            "description": "The id of the support ticket.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "INC000001234567"
          }
        ],
        "requestBody": {
          "description": "The note text.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupportTicketNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the resulting with the new note.",
            "content": {
              "application/json": {
                "example": {
                  "id": "INC000001234567",
                  "name": "Ticket Name Label",
                  "description": "This is the description of the ticket",
                  "priority": ["Low", "Medium", "High", "Critical"],
                  "status": "Acknowledged",
                  "ticketType": "Incident",
                  "creationDate": "2023-01-01T01:02:03.000+0000",
                  "notes": [
                    {
                      "id": "category",
                      "text": "Console Connect",
                      "@type": "faultsymptom"
                    },
                    {
                      "id": "item",
                      "text": "Billing",
                      "@type": "faultsymptom"
                    },
                    {
                      "id": "type",
                      "text": "Cloud",
                      "@type": "faultsymptom"
                    },
                    {
                      "id": "Email-Open Ticket",
                      "text": "An example note for communication about the ticket",
                      "worklogId": "WLG000012345678",
                      "@type": "worklog"
                    }
                  ],
                  "relatedParty": [
                    {
                      "name": "Contact Name",
                      "phone": "+123456789",
                      "email": "contact.name@emaildomain.com"
                    }
                  ],
                  "relatedEntity": [
                    {
                      "name": "AAA111",
                      "role": "customerId",
                      "@type": "RelatedEntity",
                      "@referredType": "Profile"
                    }
                  ],
                  "channel": {
                    "name": "Phone",
                    "@type": "Customer"
                  },
                  "@type": "troubleTicket"
                }
              }
            }
          },
          "400": {
            "description": "Throws an error for an malformed/bad request.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid-ticket-id": {
                    "summary": "Invalid ticket Id",
                    "description": "The provided ticket Id is not valid.",
                    "value": {
                      "error": {
                        "statusCode": "404,",
                        "name": "Error",
                        "message": "Support Ticket: ticketId is not valid."
                      }
                    }
                  },
                  "invalid-note": {
                    "summary": "Invalid note data",
                    "description": "The note data provided in the body is invalid.",
                    "value": {
                      "error": {
                        "statusCode": "400,",
                        "name": "Error",
                        "message": "Support Ticket Note is invalid: Ensure body includes a { noteText: 'text' } with a text size of >=1 characters and <= 4000 characters."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Throws an error for an unauthorized request.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "401,",
                    "name": "Error",
                    "message": "Support Ticket: ticketId does not exist or Company: companyId does not have permission to view it."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Throws an error for a support ticket that does not exist.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "statusCode": "404,",
                    "name": "Error",
                    "message": "Support Ticket: ticketId does not exist."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/cad/report/dns/describeDomainOverview:": {
      "post": {
        "operationId": "post-cad-report-dns-describe-domain-overview",
        "tags": ["Anti-DDoS"],
        "summary": "Describe Domain Overview",
        "description": "Retrieve a domain overview data for Anti-DDoS service.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescribeDomainOverviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeDomainOverviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters"
          },
          "404": {
            "description": "Not Found - Domain not found"
          }
        }
      }
    },
    "/v1/cad/report/dns/describeDomainStatusCodeList": {
      "post": {
        "operationId": "post-cad-report-dns-describe-domain-status-code-list",
        "tags": ["Anti-DDoS"],
        "summary": "Describe Domain Status Code List",
        "description": "Retrieve a list of domain status code data for Anti-DDoS service.",
        "requestBody": {
          "description": "Request body for describing domain status codes",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescribeDomainStatusCodeListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeDomainStatusCodeListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters"
          },
          "404": {
            "description": "Not Found - Domain not found"
          }
        }
      }
    },
    "/v1/cad/report/dns/describeDomainQPSList": {
      "post": {
        "operationId": "post-cad-report-dns-describe-domain-qps-list",
        "tags": ["Anti-DDoS"],
        "summary": "Describe domain QPS List",
        "description": "Retrieve DNS Domain QPS Report",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescribeDomainQPSListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeDomainQPSListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/cad/report/describeDomainAttackEvents": {
      "post": {
        "operationId": "post-cad-report-dns-describe-domain-attack-events",
        "tags": ["Anti-DDoS"],
        "summary": "Describe Domain Attack Events",
        "requestBody": {
          "description": "Request body for Describe Domain Attack Events",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescribeDomainAttackEventsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DescribeDomainAttackEventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters"
          },
          "404": {
            "description": "Not Found - Domain not found"
          }
        }
      }
    },
    "/app-user/{id}/iot-sim-pools": {
      "get": {
        "summary": "Lists all Edge SIM SIMPools.",
        "tags": ["Edge SIM"],
        "description": "List Edge SIM SIMPools for the logged-in user's company based on the given Company Id.",
        "operationId": "ListEdgeSIMPools",
        "parameters": [
          {
            "description": "Company Id of currently logged in user.",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "1244-125684dwd-ddfef-23423235253",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter string object containing keys and properties to filter by.",
            "in": "query",
            "example": "{ fields: asn | [\"asn\",\"orderId\"], include: asn | [\"asn\",\"orderId\"], limit: 10, order: asc | desc, skip: 10, where: {\"apnId\":\"238094-4546-2323-5687879-234\"}}",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all Edge SIM SIMPools.",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "string,",
                    "name": "string,",
                    "apnId": "string,",
                    "companyId": "string,",
                    "subnet": "string,",
                    "firewall": "ENABLED,",
                    "status": "CREATED,",
                    "error": "string,",
                    "primaryDNS": "string,",
                    "secondaryDNS": "string,",
                    "defaultPrimaryDNS": "string,",
                    "defaultSecondaryDNS": "string,",
                    "useDefaultDNS": "true,",
                    "customFirewallEnabled": "true,",
                    "customFirewallPolicies": "string,",
                    "company_id": "string,",
                    "apn_id": "string,",
                    "created_at": "2024-08-16T08:46:45.476Z,",
                    "updated_at": "2024-08-16T08:46:45.476Z"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/multiple"
                }
              }
            }
          },
          "404": {
            "description": "Throws an error for not found Edge SIM SIMPools under Company Id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchemaExtended"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new instance of an Edge SIM SIMPool.",
        "operationId": "CreatEdgeSIMPoolInstance",
        "tags": ["Edge SIM"],
        "description": "Creates a new instance of an Edge SIM SIMPool under current Company Id.",
        "parameters": [
          {
            "description": "Company Id of currently logged in user.",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "1244-125684dwd-ddfef-23423235253",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Field contains Information on Edge SIM SIMPool to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/single"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an Edge SIM SIMPools.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/single"
                },
                "example": {
                  "id": "string,",
                  "name": "string,",
                  "apnId": "string,",
                  "companyId": "string,",
                  "subnet": "string,",
                  "firewall": "ENABLED,",
                  "status": "CREATED,",
                  "error": "string,",
                  "primaryDNS": "string,",
                  "secondaryDNS": "string,",
                  "defaultPrimaryDNS": "string,",
                  "defaultSecondaryDNS": "string,",
                  "useDefaultDNS": "true,",
                  "customFirewallEnabled": "true,",
                  "customFirewallPolicies": "string,",
                  "company_id": "string,",
                  "apn_id": "string,",
                  "created_at": "2024-08-16T08:46:45.476Z,",
                  "updated_at": "2024-08-16T08:46:45.476Z"
                }
              }
            }
          },
          "400": {
            "description": "Throws an error for not found Edge SIM SIMPools under Company Id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchemaExtended"
                }
              }
            }
          }
        }
      }
    },
    "/app-user/{id}/iot-sim-pools/{iotSimPoolId}": {
      "put": {
        "summary": "Update a related item by id for Edge SIM SIMPool.",
        "tags": ["Edge SIM"],
        "description": "Updates a related item by id on respective Edge SIM SIMPool for the logged-in user's company based on the given Company Id.",
        "operationId": "UpdateEdgeSIMPoolItemById",
        "parameters": [
          {
            "description": "Company Id of currently logged in user.",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "1244-125684dwd-ddfef-23423235253",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Edge SIM SimPool Id for the respective Edge SIM SIMPool.",
            "in": "path",
            "name": "iotSimPoolId",
            "required": true,
            "example": "apnId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Field contains Information on Edge SIM SIMPool to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/single"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the respective Edge SIM SIMPool.",
            "content": {
              "application/json": {
                "example": {
                  "id": "string,",
                  "name": "string,",
                  "apnId": "string,",
                  "companyId": "string,",
                  "subnet": "string,",
                  "firewall": "ENABLED,",
                  "status": "CREATED,",
                  "error": "string,",
                  "primaryDNS": "string,",
                  "secondaryDNS": "string,",
                  "defaultPrimaryDNS": "string,",
                  "defaultSecondaryDNS": "string,",
                  "useDefaultDNS": "true,",
                  "customFirewallEnabled": "true,",
                  "customFirewallPolicies": "string,",
                  "company_id": "string,",
                  "apn_id": "string,",
                  "created_at": "2024-08-16T08:46:45.476Z,",
                  "updated_at": "2024-08-16T08:46:45.476Z"
                },
                "schema": {
                  "$ref": "#/components/schemas/single"
                }
              }
            }
          },
          "404": {
            "description": "Throws an error for not found Foreign Key on Edge SIM SIMPool under Company Id. /app-user/{id}/iot-sim-pools/{destSimPoolId}/sims",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchemaExtended"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a related item from the respective Edge SIM SIMPool by Id.",
        "tags": ["Edge SIM"],
        "description": "Deletes a related item from the respective Edge SIM SIMPool by Id from logged-in user's company based on the given Company Id.",
        "operationId": "DeleteEdgeSIMPoolItemById",
        "parameters": [
          {
            "description": "Company Id of currently logged in user.",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "1244-125684dwd-ddfef-23423235253",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Iot SimPool Id for the respective Edge SIM SIMPool.",
            "in": "path",
            "name": "iotSimPoolId",
            "required": true,
            "example": "apnId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successfully executed."
          },
          "400": {
            "description": "Throws an error for not found Foreign Key on Edge SIM SIMPools under Company Id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchemaExtended"
                }
              }
            }
          }
        }
      }
    },
    "/app-user/{id}/iot-sim-pools/{destinationSimPoolId}/sims": {
      "put": {
        "summary": "Adds new SIM to an Edge SIM SIMPool.",
        "operationId": "AddSIMToEdgeSIMPool",
        "tags": ["Edge SIM"],
        "description": "Updates a related item by id on respective Edge SIM SIMPool for the logged-in user's company based on the given Company Id.",
        "parameters": [
          {
            "description": "Company Id of currently logged in user.",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "1244-125684dwd-ddfef-23423235253",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Destination SIMPool Id where to inject the respective Edge SIM SIMs.",
            "in": "path",
            "name": "destinationSimPoolId",
            "required": true,
            "example": "apnId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Field contains Information on Edge SIM SIMPool to be created.",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "sims": {
                    "type": "array",
                    "description": "An array of SIMPool Ids to be moved.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request was successfully executed."
          },
          "400": {
            "description": "Throws an error for not found Foreign Key on Edge SIM SIMPools under Company Id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchemaExtended"
                }
              }
            }
          }
        }
      }
    },
    "/app-user/{id}/iot-sim-cache": {
      "get": {
        "summary": "Get a list of Edge SIMs for the logged in users company",
        "tags": ["Edge SIM"],
        "description": "Get a list of Edge SIM.",
        "operationId": "GetEdgeSIMList",
        "parameters": [
          {
            "description": "Company Id of currently logged in user.",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "1244-125684dwd-ddfef-23423235253",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter string object containing keys and properties to filter by.",
            "in": "query",
            "example": "{ fields: asn | [\"asn\",\"orderId\"], include: asn | [\"asn\",\"orderId\"], limit: 10, order: asc | desc, skip: 10, where: {\"apnId\":\"238094-4546-2323-5687879-234\"}}",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Edge SIMs.",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "string",
                    "iotSimPoolId": "string",
                    "iotOrderId": "string",
                    "state": "string",
                    "iccid": "string",
                    "imsi": "string",
                    "msisdn": "string",
                    "detectedImei": "string",
                    "ipAddress": "string",
                    "companyId": "string",
                    "label": "string",
                    "status": "string",
                    "simTransferId": "string",
                    "createdAt": "2024-08-13T09:38:50.268Z",
                    "updatedAt": "2024-08-13T09:38:50.268Z",
                    "simProvider": "string",
                    "company_id": "string",
                    "iot_order_id": "string",
                    "created_at": "2024-08-13T09:38:50.268Z",
                    "updated_at": "2024-08-13T09:38:50.268Z",
                    "iot_sim_pool_id": "string"
                  }
                ],
                "schema": {
                  "$ref": "#/components/schemas/getAll"
                }
              }
            }
          },
          "401": {
            "description": "Throws an error for not found Keys or SIMs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not-valid"
                }
              }
            }
          }
        }
      }
    },
    "/app-user/{id}/iot-sim-cache/{foreignKey}": {
      "get": {
        "summary": "Get related item of Edge SIM label for the logged in users company based on the given User ID.",
        "tags": ["Edge SIM"],
        "description": "Get single Edge SIM.",
        "operationId": "GetSingleEdgeSIM",
        "parameters": [
          {
            "description": "User ID of currently logged in user.",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "1244-125684dwd-ddfef-23423235253",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Foreign Key to search with the Edge SIM fields.",
            "in": "path",
            "example": "iot_order_id",
            "name": "foreignKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a related item of Edge SIM.",
            "content": {
              "application/json": {
                "example": {
                  "id": "string",
                  "iotSimPoolId": "string",
                  "iotOrderId": "string",
                  "state": "string",
                  "iccid": "string",
                  "imsi": "string",
                  "msisdn": "string",
                  "detectedImei": "string",
                  "ipAddress": "string",
                  "companyId": "string",
                  "label": "string",
                  "status": "string",
                  "simTransferId": "string",
                  "createdAt": "2024-08-13T09:38:50.268Z",
                  "updatedAt": "2024-08-13T09:38:50.268Z",
                  "simProvider": "string",
                  "company_id": "string",
                  "iot_order_id": "string",
                  "created_at": "2024-08-13T09:38:50.268Z",
                  "updated_at": "2024-08-13T09:38:50.268Z",
                  "iot_sim_pool_id": "string"
                },
                "schema": {
                  "$ref": "#/components/schemas/getAll"
                }
              }
            }
          },
          "404": {
            "description": "Throws an error for not found Keys or SIMs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not-valid"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Edge SIM label",
        "operationId": "UpdateEdgeSIMLabel",
        "tags": ["Edge SIM"],
        "description": "Update Edge SIM label / Status based on a foreign key present on the SIM .",
        "parameters": [
          {
            "description": "User ID of currently logged in user.",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "1244-125684dwd-ddfef-23423235253",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Foreign key on Edge SIM to return or expand.",
            "in": "path",
            "example": "iot_order_id",
            "name": "foreignKey",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a related item of Edge SIM.",
            "content": {
              "application/json": {
                "example": {
                  "id": "string",
                  "iotSimPoolId": "string",
                  "iotOrderId": "string",
                  "state": "string",
                  "iccid": "string",
                  "imsi": "string",
                  "msisdn": "string",
                  "detectedImei": "string",
                  "ipAddress": "string",
                  "companyId": "string",
                  "label": "string",
                  "status": "string",
                  "simTransferId": "string",
                  "createdAt": "2024-08-13T09:38:50.268Z",
                  "updatedAt": "2024-08-13T09:38:50.268Z",
                  "simProvider": "string",
                  "company_id": "string",
                  "iot_order_id": "string",
                  "created_at": "2024-08-13T09:38:50.268Z",
                  "updated_at": "2024-08-13T09:38:50.268Z",
                  "iot_sim_pool_id": "string"
                }
              }
            }
          },
          "400": {
            "description": "Throws an error for not found Keys or SIMs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not-valid"
                }
              }
            }
          }
        }
      }
    },
    "/v1/cad/identity/signedCompany": {
      "get": {
        "tags": ["Anti-DDoS"],
        "summary": "Retrieve signed company information based on the user's Insight reference ID",
        "description": "This endpoint retrieves signed company information for a specific Insight ID provided by the identity API.",
        "operationId": "GetSignedCompanyByInsightRefId",
        "responses": {
          "200": {
            "description": "A successful response containing the signed company information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignedCompanyResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested company information could not be found."
          },
          "500": {
            "description": "An internal server error occurred."
          }
        }
      }
    },
    "/mefApi/sonata/geographicAddressManagement/v7/geographicAddressValidation": {
      "post": {
        "description": "This operation creates a GeographicAddressValidation entity.",
        "operationId": "createGeographicAddressValidation",
        "parameters": [
          {
            "description": "The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\nReference: MEF 79 (Sn 8.8)",
            "in": "query",
            "name": "buyerId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\nReference: MEF 79 (Sn 8.8)",
            "in": "query",
            "name": "sellerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/GeographicAddressValidation_Create"
              }
            }
          },
          "description": "The GeographicAddressValidation to be created",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeographicAddressValidation"
                }
              }
            },
            "description": "OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)"
          },
          "400": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable entity due to the business validation problems"
          },
          "500": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Creates a GeographicAddressValidation",
        "tags": ["MEF-Sonata"],
        "x-codegen-request-body-name": "geographicAddressValidation"
      }
    },
    "/mefApi/sonata/geographicAddressManagement/v7/geographicAddress/{id}": {
      "get": {
        "description": "This operation retrieves a GeographicAddress entity.",
        "operationId": "retrieveGeographicAddress",
        "parameters": [
          {
            "description": "Identifier of the GeographicAddress",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\nReference: MEF 79 (Sn 8.8)",
            "in": "query",
            "name": "buyerId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when responding entity  represents more than one Seller.\nReference: MEF 79 (Sn 8.8)",
            "in": "query",
            "name": "sellerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeographicAddress"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieves a GeographicAddress by ID",
        "tags": ["MEF-Sonata"]
      }
    },
    "/mefApi/sonata/productOrderingManagement/v10/productOrder": {
      "post": {
        "description": "This operation creates a ProductOrder entity.",
        "operationId": "createProductOrder",
        "parameters": [
          {
            "description": "The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\nReference: MEF 79 (Sn 8.8)",
            "in": "query",
            "name": "buyerId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity represents more than one Seller.\nReference: MEF 79 (Sn 8.8)",
            "in": "query",
            "name": "sellerId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ProductOrder_Create"
              }
            }
          },
          "description": "The ProductOrder to be created",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProductOrder"
                }
              }
            },
            "description": "Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)"
          },
          "400": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  }
                }
              }
            },
            "description": "Unprocessable entity due to the business validation problems"
          },
          "500": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Creates a ProductOrder",
        "tags": ["MEF-Sonata"],
        "x-codegen-request-body-name": "productOrder"
      }
    },
    "/mefApi/sonata/quoteManagement/v8/quote": {
      "post": {
        "description": "This operation creates a Quote entity.",
        "operationId": "createQuote",
        "parameters": [
          {
            "description": "The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\nReference: MEF 79 (Sn 8.8)",
            "in": "query",
            "name": "buyerId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity\n represents more than one Seller.\n\nReference: MEF 79 (Sn 8.8)",
            "in": "query",
            "name": "sellerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Quote_Create"
              }
            }
          },
          "description": "The Quote to be created",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            },
            "description": "Created  (https://tools.ietf.org/html/rfc7231#section-6.3.2)"
          },
          "400": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Error422"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable entity due to the business validation problems in the Quote or one of the Quote items"
          },
          "500": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Send request to perform a quotation",
        "tags": ["MEF-Sonata"],
        "x-codegen-request-body-name": "quote"
      }
    },
    "/mefApi/sonata/quoteManagement/v8/quote/{id}": {
      "get": {
        "description": "This operation retrieves a Quote entity. Attribute selection is enabled for all first level attributes.",
        "operationId": "retrieveQuote",
        "parameters": [
          {
            "description": "Identifier of the Quote",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\nReference: MEF 79 (Sn 8.8)",
            "in": "query",
            "name": "buyerId",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity\n represents more than one Seller.\n\nReference: MEF 79 (Sn 8.8)",
            "in": "query",
            "name": "sellerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            },
            "description": "OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)"
          },
          "400": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            },
            "description": "Not Found"
          },
          "500": {
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieves a Quote by ID",
        "tags": ["MEF-Sonata"]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api-key": {
        "description": "API Keys are provisioned by Support against your Console Connect User Account. Email ***[Support](mailto:support@consoleconnect.com)*** to request a key.\n\nHere is an example request using an API Key:\n\n```\ncurl -X GET https://api.consoleconnect.com/api/auth/token \\\n-H \"Authorization: Bearer {api key}\"\n```\n",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API key"
      }
    },
    "schemas": {
      "Duration": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "The duration the service was ordered for, in conjunction with durationUnit. Max duration by unit is: days: 6; weeks: 3; month: 36; years: 3"
          },
          "unit": {
            "type": "string",
            "enum": ["d", "w", "m", "y"],
            "description": "The unit of duration the service was ordered for, in conjunction with duration. 'd' for days, 'w' for weeks, 'm' for months, 'y' for years."
          }
        }
      },
      "Discount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier."
          },
          "value": {
            "type": "number",
            "description": "The value in conjunction with the `discountType`."
          },
          "discountType": {
            "type": "string",
            "description": "Type of discount.",
            "default": "percentage"
          },
          "marketingCode": {
            "type": "string",
            "description": "Unique discount code."
          },
          "duration": {
            "type": "string",
            "description": "How long the discount applies, e.g., once, recurring",
            "default": "recurring"
          },
          "applicableProducts": {
            "type": "array",
            "description": "The list of products to which this discount may be applied. If empty, discount is general and can be applied to anything.",
            "items": {
              "type": "string",
              "enum": ["PORT", "IO-D", "L2", "L3VPN", "L3VPN-SITE", "EDGE"]
            }
          },
          "applicableDcfs": {
            "type": "array",
            "description": "The list of DCF IDs to which this discount may be applied. If empty, discount is general and can be applied to anything.",
            "items": {
              "type": "string"
            }
          },
          "applicableMetros": {
            "type": "array",
            "description": "The list of Metro IDs to which this discount may be applied. If empty, discount is general and can be applied to anything.",
            "items": {
              "type": "string"
            }
          },
          "deletedAt": {
            "type": "string",
            "description": "",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "description": "",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "description": "",
            "readOnly": true
          }
        }
      },
      "BaseItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of product.",
            "enum": ["PORT", "CONNECTION"]
          },
          "price": {
            "type": "number",
            "description": "The total cost of the duration."
          },
          "preAuthAmount": {
            "type": "number",
            "description": "The amount that will be charged when the user places their order when the duration is less than a month, otherwise it is the monthly cost."
          },
          "basicTotalAmount": {
            "type": "number",
            "description": "The total cost of the duration.",
            "nullable": true
          },
          "basicMonthlyAmount": {
            "type": "number",
            "description": "The monthly cost.",
            "nullable": true
          },
          "amountSaved": {
            "type": "number",
            "description": "The amount saved monthly.",
            "nullable": true
          },
          "amountSavedTotal": {
            "type": "number",
            "description": "The total amount saved with the duration."
          },
          "crossConnectAmount": {
            "nullable": true,
            "type": "number",
            "description": "The Cross Connect add-on monthly cost."
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "priceCalculatorAttributes": {
            "type": "object",
            "properties": {
              "discountIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "discounts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          },
          "formula": {
            "description": "Used in calculating for the total cost.",
            "type": "string",
            "nullable": true
          },
          "factors": {
            "description": "List of values to use in conjunction with `formula` to calculate for the total cost.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "number": {
                  "type": "integer"
                },
                "ref": {
                  "type": "object",
                  "nullable": true
                }
              }
            },
            "nullable": true
          }
        }
      },
      "DCF": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "popId": {
            "type": "string",
            "nullable": true
          },
          "regionIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "metroIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "PortItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseItem"
          },
          {
            "type": "object",
            "properties": {
              "entity": {
                "type": "object",
                "properties": {
                  "dcf": {
                    "$ref": "#/components/schemas/DCF"
                  },
                  "speed": {
                    "type": "number",
                    "description": "The speed of the port in Mbps, e.g., 1000 = 1000Mbps or 1Gbps, 10000 = 10Gbps"
                  },
                  "discountId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ConnectionItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseItem"
          },
          {
            "type": "object",
            "properties": {
              "entity": {
                "type": "object",
                "properties": {
                  "srcDcf": {
                    "$ref": "#/components/schemas/DCF"
                  },
                  "destDcf": {
                    "$ref": "#/components/schemas/DCF"
                  },
                  "duration": {
                    "$ref": "#/components/schemas/Duration"
                  },
                  "bandwidth": {
                    "type": "number",
                    "description": "The required bandwidth of the connection in Mbps, e.g., 30 = 30Mbps, 100 = 100Mbps"
                  },
                  "classOfService": {
                    "type": "string",
                    "enum": ["GOLD", "SILVER", "BRONZE"],
                    "description": "The class of service for the connection."
                  },
                  "discountId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "PortsConnectionsResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "description": "Returned by the pricing calculator.",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PortItem"
                },
                {
                  "$ref": "#/components/schemas/ConnectionItem"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "PORT": "#/components/schemas/PortItem",
                  "CONNECTION": "#/components/schemas/ConnectionItem"
                }
              }
            }
          }
        }
      },
      "ErrorResponseSchema": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ip-prices": {
        "type": "object",
        "description": "Ip Block options costs (chargable on top of the IO-D service charge)",
        "properties": {
          "ipv426Cost": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "description": ""
          },
          "ipv427Cost": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "description": ""
          },
          "ipv428Cost": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "description": ""
          },
          "ipv429Cost": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "description": ""
          },
          "ipv430Cost": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ],
            "description": ""
          }
        },
        "example": {
          "ipv426Cost": null,
          "ipv427Cost": null,
          "ipv428Cost": null,
          "ipv429Cost": 2,
          "ipv430Cost": 3
        }
      },
      "GiaPricing-Recurring": {
        "type": "object",
        "properties": {
          "contractTotals": {
            "type": "object",
            "description": "IO-D full duration of service charge rate and IP Block options usage duration charge rate.",
            "properties": {
              "giaCost": {
                "type": "number",
                "description": "IO-D full duration of service charge rate."
              },
              "ipCosts": {
                "$ref": "#/components/schemas/ip-prices"
              }
            }
          },
          "unitCosts": {
            "type": "object",
            "description": "IO-D service monthly cost and Ip Block options monthly cost",
            "properties": {
              "giaCost": {
                "type": "number",
                "description": "IO-D service monthly cost"
              },
              "ipCosts": {
                "$ref": "#/components/schemas/ip-prices"
              }
            }
          },
          "contractTotalsAmountSaved": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "unitCostsAmountSaved": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "burstRate": {
            "type": "number"
          },
          "duration": {
            "$ref": "#/components/schemas/Duration"
          }
        },
        "example": {
          "contractTotals": {
            "giaCost": 100,
            "ipCosts": {
              "ipv426Cost": 10,
              "ipv427Cost": 10,
              "ipv428Cost": 10,
              "ipv429Cost": 20,
              "ipv430Cost": 30
            }
          },
          "unitCosts": {
            "giaCost": "20,",
            "ipCosts": {
              "ipv426Cost": 1,
              "ipv427Cost": 1,
              "ipv428Cost": 1,
              "ipv429Cost": 2,
              "ipv430Cost": 3
            }
          },
          "contractTotalsAmountSaved": 0,
          "unitCostsAmountSaved": 0,
          "burstRate": 10,
          "duration": {
            "unit": "m",
            "value": 6
          }
        }
      },
      "GiaPricing-OneOff": {
        "type": "object",
        "properties": {
          "onceOff": {
            "type": "object",
            "description": "IO-D full duration of service charge rate and IP Block options usage duration charge rate.",
            "properties": {
              "giaCost": {
                "type": "number",
                "description": "IO-D full duration of service charge rate"
              },
              "ipCosts": {
                "$ref": "#/components/schemas/ip-prices"
              }
            }
          },
          "burstRate": {
            "type": "number"
          },
          "duration": {
            "$ref": "#/components/schemas/Duration"
          }
        },
        "example": {
          "onceOff": {
            "giaCost": 100,
            "ipCosts": null
          },
          "duration": {
            "unit": "d",
            "value": 6
          }
        }
      },
      "GiaPricing-NoPrice": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": ""
          }
        },
        "example": {
          "message": "Sorry! We can’t find a price for this rate limit. Please email support@consoleconnect.com to request a price."
        }
      },
      "CloudRouterPriceCalcSiteStandard": {
        "type": "object",
        "properties": {
          "priceRefId": {
            "type": "string",
            "description": "Price reference ID."
          },
          "portId": {
            "type": "string",
            "description": "The ID of the Port."
          },
          "dcfId": {
            "type": "string",
            "description": "The ID of the Data Center Facility."
          },
          "rateLimit": {
            "type": "object",
            "description": "",
            "properties": {
              "unit": {
                "description": "Unit of the rateLimit",
                "type": "string",
                "enum": ["Mbps", "Gbps"]
              },
              "value": {
                "description": "value of the rateLimit",
                "type": "number"
              }
            }
          },
          "classOfService": {
            "type": "object",
            "description": "",
            "properties": {
              "name": {
                "type": "string",
                "description": "",
                "enum": ["BRONZE", "SILVER", "GOLD"]
              },
              "value": {
                "type": "number",
                "description": ""
              }
            }
          },
          "discountId": {
            "type": "string",
            "description": ""
          }
        },
        "required": ["dcfId", "rateLimit", "classOfService"]
      },
      "CloudRouterPriceCalcSiteSIMPool": {
        "type": "object",
        "properties": {
          "priceRefId": {
            "type": "string",
            "description": "Price reference ID."
          },
          "simPool": {
            "type": "boolean",
            "description": "If true, site will be processed as an IoT SIM Pool site"
          }
        },
        "required": ["simPool"]
      },
      "CloudRouterPricingAddSiteStandard": {
        "type": "object",
        "properties": {
          "site": {
            "type": "object",
            "properties": {
              "portId": {
                "type": "string",
                "description": "The ID of the Port."
              },
              "rateLimit": {
                "type": "object",
                "properties": {
                  "unit": {
                    "type": "string",
                    "description": ""
                  },
                  "value": {
                    "type": "number",
                    "description": ""
                  }
                }
              },
              "classOfService": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "enum": ["BRONZE", "SILVER", "GOLD"],
                    "description": ""
                  },
                  "value": {
                    "type": "number",
                    "description": ""
                  }
                }
              },
              "discountId": {
                "type": "string",
                "nullable": true,
                "description": "The ID of the discount code applied."
              },
              "simPool": {
                "type": "boolean",
                "description": "If true, site will be processed as an IoT SIM Pool site"
              }
            },
            "required": ["portId", "rateLimit", "classOfService"]
          }
        }
      },
      "CloudRouterPricingAddSiteSIMPool": {
        "type": "object",
        "properties": {
          "site": {
            "type": "object",
            "properties": {
              "simPoolId": {
                "type": "string",
                "description": ""
              }
            },
            "required": ["simPoolId"]
          }
        }
      },
      "RateLimit": {
        "type": "object",
        "description": "",
        "properties": {
          "rate": {
            "type": "number",
            "description": ""
          },
          "unit": {
            "type": "string",
            "description": ""
          },
          "value": {
            "type": "number",
            "description": ""
          }
        }
      },
      "CloudRouterClassOfService": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "enum": ["BRONZE", "SILVER", "GOLD"]
          },
          "value": {
            "type": "string",
            "description": ""
          }
        }
      },
      "CloudRouterSitePricing": {
        "type": "object",
        "properties": {
          "l3vpnId": {
            "type": "string",
            "description": ""
          },
          "baseL3vpnCost": {
            "type": "number",
            "description": ""
          },
          "totalContractCost": {
            "type": "number",
            "description": ""
          },
          "totalHourlySiteCost": {
            "type": "number",
            "description": ""
          },
          "totalMonthlySiteCost": {
            "type": "number",
            "description": ""
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "sites": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "site": {
                  "type": "object",
                  "description": "",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": ""
                    },
                    "companyId": {
                      "type": "string",
                      "description": ""
                    },
                    "l3vpnId": {
                      "type": "string",
                      "description": ""
                    },
                    "name": {
                      "type": "string",
                      "description": ""
                    },
                    "type": {
                      "type": "string",
                      "description": ""
                    },
                    "portId": {
                      "type": "string",
                      "description": ""
                    },
                    "slVlanId": {
                      "type": "string",
                      "description": ""
                    },
                    "rateLimit": {
                      "$ref": "#/components/schemas/RateLimit"
                    },
                    "mtu": {
                      "type": "string",
                      "description": ""
                    },
                    "classOfService": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "$ref": "#/components/schemas/CloudRouterClassOfService"
                      }
                    },
                    "redundancySiteType": {
                      "type": "string",
                      "description": ""
                    },
                    "redundancyLinkedSiteId": {
                      "type": "string",
                      "description": ""
                    },
                    "status": {
                      "type": "string",
                      "description": ""
                    },
                    "simPoolId": {
                      "type": "string",
                      "description": ""
                    },
                    "company_id": {
                      "type": "string",
                      "description": ""
                    },
                    "l3vpn_id": {
                      "type": "string",
                      "description": ""
                    },
                    "deleted_at": {
                      "type": "string",
                      "description": ""
                    },
                    "created_at": {
                      "type": "string",
                      "description": ""
                    },
                    "updated_at": {
                      "type": "string",
                      "description": ""
                    },
                    "discountId": {
                      "type": "string",
                      "description": ""
                    },
                    "priceRefId": {
                      "type": "string",
                      "description": ""
                    },
                    "providerInfo": {
                      "type": "object",
                      "description": "",
                      "properties": {
                        "portName": {
                          "type": "string",
                          "description": ""
                        },
                        "portId": {
                          "type": "string",
                          "description": ""
                        },
                        "portPartner": {
                          "type": "object",
                          "description": "",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": ""
                            },
                            "regionName": {
                              "type": "string",
                              "description": ""
                            },
                            "regionNames": {
                              "type": "string",
                              "description": ""
                            },
                            "zone": {
                              "type": "string",
                              "description": ""
                            },
                            "connectionSpeeds": {
                              "type": "array",
                              "description": ""
                            },
                            "vlanId": {
                              "type": "string",
                              "description": ""
                            },
                            "partnerPort": {
                              "type": "string",
                              "description": ""
                            }
                          }
                        },
                        "companyId": {
                          "type": "string",
                          "description": ""
                        },
                        "dcfName": {
                          "type": "string",
                          "description": ""
                        },
                        "dcfId": {
                          "type": "string",
                          "description": ""
                        },
                        "metroId": {
                          "type": "string",
                          "description": ""
                        },
                        "city": {
                          "type": "string",
                          "description": ""
                        },
                        "country": {
                          "type": "string",
                          "description": ""
                        }
                      }
                    },
                    "hourlyCost": {
                      "type": "number",
                      "description": ""
                    },
                    "dailyCost": {
                      "type": "number",
                      "description": ""
                    },
                    "monthlyCost": {
                      "type": "number",
                      "description": ""
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LoopBackFilter": {
        "type": "object",
        "properties": {
          "where": {
            "type": "object",
            "description": "The criteria of properties to search for.",
            "example": {
              "company.addresses.city": "Sydney"
            }
          },
          "skip": {
            "type": "integer",
            "description": "The \"page\" of results from a query. accepted",
            "example": 5
          },
          "limit": {
            "type": "integer",
            "description": "The number of results to be returned in a query. This should be a small value for quicker load times.",
            "example": 10
          }
        }
      },
      "AddressWithGeo": {
        "type": "object",
        "properties": {
          "geo": {
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "items": {
                  "type": "number"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "registered": {
            "type": "boolean"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "A [2-letter, ISO2 country code](https://www.iban.com/country-codes).",
            "example": "AU"
          },
          "zip": {
            "type": "string",
            "description": "The ZIP or Post code for the location."
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Speed": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Text representation of the supported Port Speed."
          },
          "value": {
            "type": "integer",
            "description": "The integer value of the Port Speed represented in Mbps."
          }
        },
        "example": {
          "name": "10000 Mbps",
          "value": 10000
        }
      },
      "DataCenterFacility": {
        "properties": {
          "system": {
            "properties": {
              "welcomeMessage": {
                "type": "string",
                "nullable": true
              }
            },
            "type": "object"
          },
          "company": {
            "properties": {
              "privacy": {
                "properties": {
                  "network": {
                    "properties": {
                      "mode": {
                        "type": "string"
                      },
                      "blackListIds": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "whiteListIds": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "community": {
                    "properties": {
                      "mode": {
                        "type": "string"
                      },
                      "blackListIds": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "whiteListIds": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "industry": {
                "type": "string",
                "nullable": true
              },
              "partnerType": {
                "type": "string",
                "nullable": true
              },
              "companySize": {
                "type": "string",
                "nullable": true
              },
              "dateFounded": {
                "type": "string",
                "nullable": true
              },
              "registeredName": {
                "type": "string",
                "nullable": true
              },
              "businessRegistrationCertReference": {
                "type": "string",
                "nullable": true
              },
              "businessRegistrationCertUploadedAt": {
                "type": "string",
                "nullable": true
              },
              "businessRegistrationCertRejectedReason": {
                "type": "string",
                "nullable": true
              },
              "clientId": {
                "type": "string",
                "nullable": true
              },
              "first": {
                "type": "string",
                "nullable": true
              },
              "last": {
                "type": "string",
                "nullable": true
              },
              "address": {
                "type": "string",
                "nullable": true
              },
              "city": {
                "type": "string",
                "nullable": true
              },
              "state": {
                "type": "string",
                "nullable": true
              },
              "zip": {
                "type": "string",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "nullable": true
              },
              "fax": {
                "type": "string",
                "nullable": true
              },
              "addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddressWithGeo"
                }
              },
              "businessType": {
                "type": "string"
              },
              "regionalInternetRegistry": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "businessRegistrationCertVerified": {
                "type": "string"
              },
              "website": {
                "type": "string"
              },
              "emailDomains": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "businessDevelopmentManagerTypePreference": {
                "type": "string"
              },
              "isIoTDemoCompany": {
                "type": "boolean"
              }
            },
            "type": "object",
            "description": "A set of business-related properties for the DCF."
          },
          "dataCenterFacility": {
            "properties": {
              "airportCodes": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "speeds": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Speed"
                }
              },
              "metroId": {
                "type": "string",
                "description": "An ObjectId used to lookup the Metro this DCF belongs to."
              },
              "ready": {
                "type": "boolean",
                "description": "Whether the DCF can accept new Physical Ports."
              },
              "id": {
                "type": "string",
                "nullable": true
              },
              "nniReady": {
                "type": "boolean",
                "description": "Whether the DCF can accept Hybrid NNI Ports."
              },
              "brandId": {
                "type": "string"
              },
              "canBundleCrossConnect": {
                "type": "boolean"
              }
            },
            "type": "object",
            "description": "A set of properties related to the DCF's operational status."
          },
          "cloudProviderDetails": {
            "properties": {
              "asn": {
                "properties": {
                  "range": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "bgpAuthority": {
                "type": "string"
              },
              "companyType": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "stats": {
            "properties": {
              "members": {
                "type": "number"
              },
              "interconnections": {
                "type": "number"
              },
              "followers": {
                "type": "number"
              },
              "following": {
                "type": "number"
              },
              "privateArticles": {
                "type": "number"
              },
              "privateEvents": {
                "type": "number"
              },
              "privatePosts": {
                "type": "number"
              },
              "articles": {
                "type": "number"
              },
              "events": {
                "type": "number"
              },
              "posts": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "overviewImage": {
            "type": "string",
            "nullable": true
          },
          "businessRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "signedCompanyRefId": {
            "type": "string",
            "nullable": true
          },
          "accountManagerEmail": {
            "type": "string",
            "nullable": true
          },
          "accountManagerId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "description": "A human-friendly identifier unique to the DCF. Some of our endpoints accept this value as a parameter."
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          },
          "groups": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "headline": {
            "type": "string"
          },
          "background": {
            "type": "string",
            "nullable": true
          },
          "avatarId": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The name of the DCF for display purposes.",
            "example": "Console Connect - Hermes House"
          },
          "type": {
            "type": "string"
          },
          "popIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "costbookLocationId": {
            "type": "string"
          },
          "provider": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "verifiedIdentity": {
            "type": "boolean"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isCloudProvider": {
            "type": "boolean"
          },
          "l3CostbookLocationId": {
            "type": "string"
          },
          "nnis": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "bundleCrossConnectChargeId": {
            "type": "string"
          },
          "signedCompanyVerified": {
            "type": "boolean"
          },
          "companies": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "type": "string",
            "description": "An ObjectId unique to the DCF. A large portion of our endpoints use this value as a parameter or property.",
            "example": "507f1f77bcf86cd799439011"
          },
          "online": {
            "type": "boolean"
          }
        },
        "type": "object",
        "example": {
          "id": "507f1f77bcf86cd799439011",
          "name": "Console Connect - Hermes House",
          "username": "pccwg-hermes-house",
          "company": {
            "addresses": [
              {
                "street": "5/F, Hermes House,10 Middle Road,Tsim Sha Tsui",
                "city": "Hong Kong",
                "country": "CN"
              }
            ]
          },
          "dataCenterFacility": {
            "metroId": "507f1f77bcf86cd799439011",
            "ready": true,
            "nniReady": true
          }
        }
      },
      "NotFoundErrorResponseSchema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "statusCode": {
                "type": "string",
                "description": "The HTTP status code of the error"
              },
              "name": {
                "type": "string",
                "description": "The name of the error"
              },
              "message": {
                "type": "string",
                "description": "The detailed message of the error"
              }
            }
          }
        }
      },
      "CompanyModel": {
        "example": {
          "name": "Foo International",
          "businessRegistrationNumber": "EXAMPLE-321",
          "company": {
            "addresses": [
              {
                "primary": true,
                "country": "US",
                "address": "17 Anywhere Pl",
                "city": "Major City",
                "state": "OH",
                "zip": "44101"
              }
            ],
            "emailDomains": ["foo.co"],
            "businessType": "Data Center"
          }
        }
      },
      "Company": {
        "properties": {
          "officeAddress": {
            "type": "string",
            "nullable": true
          },
          "system": {
            "properties": {
              "welcomeMessage": {
                "type": "string",
                "nullable": true
              }
            },
            "type": "object"
          },
          "company": {
            "properties": {
              "industry": {
                "type": "string",
                "nullable": true
              },
              "partnerType": {
                "type": "string",
                "nullable": true
              },
              "companySize": {
                "type": "string",
                "nullable": true
              },
              "dateFounded": {
                "type": "string",
                "nullable": true
              },
              "clientId": {
                "type": "string",
                "nullable": true
              },
              "first": {
                "type": "string",
                "nullable": true
              },
              "last": {
                "type": "string",
                "nullable": true
              },
              "address": {
                "type": "string",
                "nullable": true
              },
              "city": {
                "type": "string",
                "nullable": true
              },
              "state": {
                "type": "string",
                "nullable": true
              },
              "zip": {
                "type": "string",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "nullable": true
              },
              "fax": {
                "type": "string",
                "nullable": true
              },
              "website": {
                "type": "string"
              },
              "businessType": {
                "type": "string"
              },
              "registeredName": {
                "type": "string"
              },
              "addresses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddressWithGeo"
                }
              },
              "isIoTDemoCompany": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "cloudProviderDetails": {
            "properties": {
              "asn": {
                "properties": {
                  "range": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "bgpAuthority": {
                "type": "string"
              },
              "companyType": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "stats": {
            "properties": {
              "members": {
                "type": "number"
              },
              "interconnections": {
                "type": "number"
              },
              "followers": {
                "type": "number"
              },
              "following": {
                "type": "number"
              },
              "privateArticles": {
                "type": "number"
              },
              "privateEvents": {
                "type": "number"
              },
              "privatePosts": {
                "type": "number"
              },
              "articles": {
                "type": "number"
              },
              "events": {
                "type": "number"
              },
              "posts": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "overviewImage": {
            "type": "string",
            "nullable": true
          },
          "accountManagerEmail": {
            "type": "string",
            "nullable": true
          },
          "accountManagerId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          },
          "deleted": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          },
          "displayOrder": {
            "type": "number"
          },
          "groups": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string"
          },
          "headline": {
            "type": "string",
            "nullable": true
          },
          "background": {
            "type": "string"
          },
          "avatarId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "oldAvatarId": {
            "type": "string"
          },
          "verifiedIdentity": {
            "type": "boolean"
          },
          "portsActive": {
            "type": "number"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isCloudProvider": {
            "type": "boolean"
          },
          "signedCompanyRefId": {
            "type": "number"
          },
          "signedCompanyVerified": {
            "type": "boolean"
          },
          "businessRegistrationNumber": {
            "type": "string"
          },
          "companies": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "online": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Metro": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "regionIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "ready": {
            "type": "boolean"
          },
          "canCreateController": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "Port_ordersModel": {
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "portName": {
                  "type": "string"
                },
                "message": {
                  "type": "string",
                  "nullable": true
                },
                "dcpCompanyId": {
                  "type": "string",
                  "nullable": true
                },
                "locationId": {
                  "type": "string",
                  "nullable": true
                },
                "speed": {
                  "$ref": "#/components/schemas/Speed"
                },
                "requestedLocation": {
                  "type": "string",
                  "nullable": true
                },
                "paymentType": {
                  "type": "string"
                },
                "createdPortId": {
                  "type": "string"
                },
                "portId": {
                  "type": "string",
                  "nullable": true
                },
                "popId": {
                  "type": "string"
                },
                "billingId": {
                  "type": "string"
                },
                "externalId": {
                  "type": "string",
                  "nullable": true
                },
                "salesRecordId": {
                  "type": "string",
                  "nullable": true
                },
                "paymentTransactionId": {
                  "type": "string",
                  "nullable": true
                },
                "payg": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string"
                },
                "isEdgePort": {
                  "type": "boolean"
                },
                "cancelled": {
                  "type": "boolean"
                },
                "cancelledAt": {
                  "type": "string",
                  "nullable": true
                },
                "loaSentAt": {
                  "type": "string",
                  "nullable": true
                },
                "edgePayload": {
                  "type": "string",
                  "nullable": true
                },
                "statusDetail": {
                  "type": "string"
                },
                "updatedBy": {
                  "type": "string"
                },
                "createdBy": {
                  "type": "string"
                },
                "deletedBy": {
                  "type": "string",
                  "nullable": true
                },
                "type": {
                  "type": "string"
                },
                "dataCenterFacilityId": {
                  "type": "string"
                },
                "metroId": {
                  "type": "string"
                },
                "companyId": {
                  "type": "string"
                },
                "deleted": {
                  "type": "boolean"
                },
                "deletedAt": {
                  "type": "string",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                },
                "cancelledBy": {
                  "type": "string",
                  "nullable": true
                },
                "company": {
                  "$ref": "#/components/schemas/Company"
                },
                "dataCenterFacility": {
                  "$ref": "#/components/schemas/DataCenterFacility"
                },
                "metro": {
                  "$ref": "#/components/schemas/Metro"
                },
                "capabilities": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "Port_orderModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier."
          },
          "billingId": {
            "type": "string",
            "description": "The ID of the subscription."
          },
          "createdPortId": {
            "type": "string",
            "description": "The ID of the created port."
          },
          "popId": {
            "type": "string",
            "description": "The ID of the PoP."
          },
          "discountId": {
            "type": "string",
            "nullable": true,
            "description": "The ID of the discount code applied."
          },
          "salesRecordId": {
            "type": "string",
            "description": "The ID of the sales record."
          },
          "paymentTransactionId": {
            "type": "string",
            "nullable": true,
            "description": "The ID of the payment transaction."
          },
          "dataCenterFacilityId": {
            "type": "string",
            "description": "The ID of the Data Center Facility which this port order belongs to."
          },
          "crossConnectId": {
            "type": "string",
            "nullable": true,
            "description": "The ID of the Cross Connect which this port order belongs to."
          },
          "metroId": {
            "type": "string",
            "description": "The ID of the Metro which this port order belongs to."
          },
          "companyId": {
            "type": "string",
            "description": "The ID of the Company which this port order belongs to."
          },
          "portName": {
            "type": "string",
            "description": "The name of the created port."
          },
          "speed": {
            "$ref": "#/components/schemas/Speed"
          },
          "durationUnit": {
            "type": "string",
            "enum": ["y", "m"],
            "description": "The unit of duration.\n| Enum | Description |\n| --- | --- |\n| y | Year |\n| m | Month |"
          },
          "status": {
            "type": "string",
            "description": "The status of the Port Order.",
            "enum": [
              "created",
              "processing",
              "allocated",
              "loa_sent",
              "setup_xc",
              "done",
              "cancelling",
              "cancelled",
              "error"
            ]
          },
          "paymentType": {
            "type": "string",
            "enum": ["invoice", "plan", "creditcard"]
          },
          "payg": {
            "type": "boolean",
            "description": "If Pay-As-You-Go."
          },
          "loaStatus": {
            "type": "string",
            "enum": ["TODO", "READY", "ERROR"]
          },
          "loaSentAt": {
            "type": "string",
            "nullable": true
          },
          "isEdgePort": {
            "type": "boolean",
            "description": "If an Edge Port Order."
          },
          "edgePayload": {
            "type": "object",
            "nullable": true,
            "description": "Payload object for Edge Port Order."
          },
          "requestSource": {
            "type": "string",
            "description": "The source of the request in which this order was placed."
          },
          "type": {
            "type": "string",
            "default": "PHYSICAL",
            "description": "The type of the port."
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "dataCenterFacility": {
            "$ref": "#/components/schemas/DataCenterFacility"
          },
          "metro": {
            "$ref": "#/components/schemas/Metro"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "capabilities": {
            "type": "object"
          },
          "updatedAt": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "cancelled": {
            "type": "boolean"
          },
          "cancelledAt": {
            "type": "string"
          },
          "cancelledBy": {
            "type": "string",
            "nullable": true
          },
          "isEdgeOrder": {
            "type": "boolean",
            "default": false
          },
          "controller": {
            "type": "object",
            "properties": {
              "asn": {
                "type": "number",
                "nullable": true
              },
              "cerAsn": {
                "type": "number",
                "nullable": true
              },
              "cerIp": {
                "properties": {
                  "ipv4": {
                    "type": "number",
                    "nullable": true
                  },
                  "ipv6": {
                    "type": "number",
                    "nullable": true
                  }
                },
                "type": "object"
              },
              "id": {
                "type": "string",
                "nullable": true
              },
              "ip": {
                "properties": {
                  "ipv4": {
                    "type": "number",
                    "nullable": true
                  },
                  "ipv6": {
                    "type": "number",
                    "nullable": true
                  }
                },
                "type": "object"
              },
              "serviceLayerId": {
                "type": "string",
                "nullable": true
              },
              "vlan": {
                "type": "number",
                "nullable": true
              }
            }
          },
          "createdAt": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string"
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PortModel": {
        "example": {
          "tags": {
            "items": {},
            "type": "array"
          }
        },
        "properties": {
          "dcpCompanyId": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "speed": {
            "type": "number",
            "default": 1000
          },
          "speedOverprovisioningFactor": {
            "type": "number",
            "default": 1
          },
          "singleService": {
            "type": "boolean",
            "default": false
          },
          "tags": {
            "type": "array",
            "items": {}
          },
          "locationId": {
            "type": "string"
          },
          "dataCenterFacilityId": {
            "type": "string"
          },
          "popId": {
            "type": "string"
          },
          "metroId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVATING",
              "READY",
              "ACTIVE",
              "DISABLING",
              "DISABLED",
              "DELETING",
              "DELETED",
              "UNKNOWN",
              "ONBOARDING"
            ]
          },
          "serviceStatus": {
            "description": "The ServiceStatus field controls whether a port is 'OPEN' or 'CLOSED' for creating new services, or, updating existing services already configured. This refines controls on ports where port.status=='ACTIVE' to enable an end of life cycle.",
            "type": "string",
            "default": "OPEN",
            "enum": ["OPEN", "CLOSED"]
          },
          "linkState": {
            "type": "string",
            "enum": ["UP", "DOWN", "NOTFOUND", "UNKNOWN"]
          },
          "linkStateUpSince": {
            "type": "string",
            "format": "date-time"
          },
          "linkStateSyncedAt": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "default": "PHYSICAL",
            "enum": ["PHYSICAL", "DCP", "NNI", "EDGE"]
          },
          "isEdgePort": {
            "type": "boolean",
            "default": false
          },
          "edgePayload": {
            "type": "object"
          },
          "mediaType": {
            "type": "string",
            "default": "SMF",
            "enum": ["SMF", "MMF", "COPPER"]
          },
          "partner": {
            "type": "object"
          },
          "asnId": {
            "type": "string"
          },
          "ip": {
            "type": "object"
          },
          "capabilities": {
            "type": "object"
          },
          "activeChangedAt": {
            "type": "string",
            "format": "date-time"
          },
          "firstActiveAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "default": false
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "importedAt": {
            "type": "string",
            "format": "date-time"
          },
          "importer": {
            "type": "string"
          },
          "salesRecordId": {
            "type": "string"
          },
          "paymentType": {
            "type": "string",
            "enum": ["invoice", "creditcard", "plan"]
          },
          "payg": {
            "type": "boolean"
          },
          "billingId": {
            "type": "string"
          },
          "vlanRanges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "start": {
                  "type": "number"
                },
                "end": {
                  "type": "number"
                }
              }
            }
          },
          "externalId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConnectionModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["LAYER2", "CLOUD", "LAYER2_GROUP"],
            "description": "This should always be 'LAYER2'"
          },
          "name": {
            "type": "string",
            "description": "The name of the connection"
          },
          "srcPortId": {
            "type": "string",
            "description": "The source port id"
          },
          "speed": {
            "$ref": "#/components/schemas/Speed"
          },
          "destMetroId": {
            "type": "string",
            "description": "The id of the destination metro"
          },
          "destCompany": {
            "type": "string",
            "description": "some other description here"
          },
          "destPortId": {
            "type": "string",
            "description": "The port id of the connection z-end"
          },
          "paymentType": {
            "type": "string",
            "enum": ["creditcard", "invoice"],
            "description": "The payment method"
          },
          "partner": {
            "type": "object",
            "properties": {
              "destPortIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "account": {
                "type": "string",
                "description": "The account number/id for the CLOUD partner account"
              }
            }
          }
        }
      },
      "EdgeOrderResponse": {
        "properties": {
          "id": {
            "type": "string"
          },
          "portName": {
            "type": "string"
          },
          "speed": {
            "properties": {
              "value": {
                "type": "number"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "paymentType": {
            "type": "string",
            "default": "invoice"
          },
          "discountId": {
            "type": "string"
          },
          "billingId": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "salesRecordId": {
            "type": "string"
          },
          "paymentTransactionId": {
            "type": "string"
          },
          "payg": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "reserved",
              "created",
              "processing",
              "pending",
              "allocated",
              "loa_sent",
              "setup_xc",
              "done",
              "cancelling",
              "cancelled",
              "error"
            ]
          },
          "isEdgePort": {
            "type": "boolean",
            "default": true
          },
          "cancelled": {
            "type": "boolean"
          },
          "requestSource": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "tags": {
            "type": "array"
          },
          "type": {
            "type": "string",
            "default": "PHYSICAL"
          },
          "dataCenterFacilityId": {
            "type": "string"
          },
          "metroId": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "crossConnectId": {
            "type": "string"
          },
          "deleted": {
            "type": "string",
            "default": false
          },
          "deletedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "company": {
            "type": "object"
          },
          "dataCenterFacility": {
            "type": "object"
          }
        },
        "example": {
          "id": "663cb272ce0ce92034c111111",
          "portName": "PORT_1",
          "speed": {
            "value": 1000,
            "name": "1000 Mbps"
          },
          "paymentType": "invoice",
          "discountId": null,
          "billingId": "663ca271ce0ce92034c11111",
          "externalId": null,
          "salesRecordId": null,
          "paymentTransactionId": null,
          "payg": true,
          "status": "created",
          "isEdgePort": true,
          "cancelled": false,
          "requestSource": "CONSOLE_APP",
          "createdBy": "bk",
          "tags": [],
          "type": "PHYSICAL",
          "dataCenterFacilityId": "63ce2dsdb423cc0015f11111",
          "metroId": "77d9f1fcbcaa906f3cd11111",
          "companyId": "62ff65219195c7001521e9bc",
          "crossConnectId": null,
          "deleted": false,
          "deletedAt": null,
          "createdAt": "2024-05-09T11:24:33.969Z",
          "updatedAt": "2024-05-09T11:24:34.176Z",
          "company": {
            "system": {
              "welcomeMessage": null
            },
            "company": {
              "partnerType": null,
              "isIoTDemoCompany": false,
              "website": null,
              "industry": null,
              "businessType": "Enterprise",
              "companySize": null,
              "dateFounded": null,
              "registeredName": null,
              "clientId": null,
              "first": null,
              "last": null,
              "address": null,
              "city": null,
              "state": null,
              "zip": null,
              "addresses": [
                {
                  "geo": {
                    "type": "Point",
                    "coordinates": []
                  },
                  "registered": true,
                  "address": "Example address, Australia",
                  "city": "Brisbane City",
                  "state": "Queensland",
                  "zip": null,
                  "country": "AU",
                  "email": null,
                  "phone": null,
                  "primary": true
                }
              ],
              "phone": null,
              "fax": null
            },
            "cloudProviderDetails": {
              "asn": {
                "range": []
              },
              "companyType": "DCP",
              "bgpAuthority": "PCCWGLOBAL"
            },
            "stats": {
              "posts": 0,
              "events": 0,
              "articles": 0,
              "privatePosts": 0,
              "privateEvents": 0,
              "privateArticles": 0,
              "following": 2,
              "followers": 0,
              "interconnections": 0,
              "members": 24
            },
            "businessRegistrationNumber": null,
            "accountManagerEmail": null,
            "accountManagerId": null,
            "type": "COMPANY",
            "name": "Test Company",
            "avatarId": null,
            "background": null,
            "overviewImage": null,
            "headline": null,
            "summary": null,
            "location": null,
            "groups": [],
            "displayOrder": -299,
            "status": "ACTIVE",
            "tags": ["promoted"],
            "categories": ["Developer tools", "SaaS"],
            "verified": true,
            "verifiedIdentity": true,
            "deleted": false,
            "deletedAt": null,
            "isCloudProvider": false,
            "signedCompanyRefId": 31,
            "username": "test",
            "bundleCrossConnectChargeId": null,
            "updatedAt": "2024-04-24T12:10:35.701Z",
            "createdAt": "2022-08-19T10:27:17.246Z",
            "signedCompanyVerified": true,
            "portsActive": 36,
            "companies": [],
            "id": "62ff65129195c7031541e9bc",
            "online": false
          },
          "dataCenterFacility": {
            "system": {
              "welcomeMessage": null
            },
            "company": {
              "privacy": {
                "network": {
                  "mode": "PUBLIC",
                  "blackListIds": [],
                  "whiteListIds": []
                },
                "community": {
                  "mode": "PUBLIC",
                  "blackListIds": [],
                  "whiteListIds": []
                }
              },
              "partnerType": null,
              "website": "consoleconnect.com",
              "emailDomains": [],
              "industry": null,
              "businessType": null,
              "companySize": null,
              "dateFounded": null,
              "registeredName": null,
              "businessRegistrationCertReference": null,
              "businessRegistrationCertUploadedAt": null,
              "businessRegistrationCertVerified": "UNVERIFIED",
              "businessRegistrationCertRejectedReason": null,
              "regionalInternetRegistry": [],
              "clientId": null,
              "first": null,
              "last": null,
              "address": null,
              "city": null,
              "state": null,
              "zip": null,
              "addresses": [
                {
                  "geo": {
                    "type": "Point",
                    "coordinates": [22.286685943603516, 114.2105712890625]
                  },
                  "registered": false,
                  "address": "Example address, Hong Kong",
                  "city": "Hong Kong",
                  "state": null,
                  "zip": null,
                  "country": "HK",
                  "email": null,
                  "phone": null
                },
                {
                  "geo": {
                    "type": "Point",
                    "coordinates": [22.286685943603516, 114.2105712890625]
                  },
                  "registered": false,
                  "address": "Example address, Hong Kong",
                  "city": "Hong Kong",
                  "state": null,
                  "zip": null,
                  "country": "HK",
                  "email": null,
                  "phone": null
                },
                {
                  "geo": {
                    "type": "Point",
                    "coordinates": [22.286685943603516, 114.2105712890625]
                  },
                  "primary": true,
                  "registered": false,
                  "address": "Example address, Example address",
                  "city": "Hong Kong",
                  "state": null,
                  "zip": null,
                  "country": "CN",
                  "email": null,
                  "phone": null
                }
              ],
              "phone": null,
              "fax": null,
              "businessDevelopmentManagerTypePreference": ""
            }
          }
        }
      },
      "EdgePayloadRequest": {
        "properties": {
          "portName": {
            "type": "string",
            "description": "The name of the port"
          },
          "speed": {
            "type": "string",
            "description": "The port speed in Mbps. Must be >= 100."
          },
          "paymentType": {
            "type": "string",
            "default": "invoice",
            "description": "paymentType invoice is the only one currently supported"
          },
          "edgePayload": {
            "type": "object",
            "description": "Includes all edge related informations, form params etc.",
            "properties": {
              "draftOrderId": {
                "type": "string",
                "description": "The draft order ID refers to an existing draft order. When passed here, the API will, after successfully creating the order, clean up and delete the used draft order record. Draft orders are supposed to be removed after their data has been used to create an order. If the draft order ID is not passed, the API will not remove any draft order and will create the order from scratch as usual.."
              },
              "country": {
                "type": "object",
                "properties": {
                  "iso": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "formattedAddress": {
                "type": "string"
              },
              "latitude": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              },
              "bandwidth": {
                "type": "string"
              },
              "bandwidthUnit": {
                "type": "string"
              },
              "contractTerm": {
                "type": "string"
              },
              "contractTermUnit": {
                "type": "string"
              },
              "interval": {
                "type": "string"
              },
              "lastMileProvider": {
                "type": "string"
              },
              "lastMileProviderKey": {
                "type": "string"
              },
              "mrc": {
                "type": "string"
              },
              "mrcCurrency": {
                "type": "string"
              },
              "nrc": {
                "type": "string"
              },
              "nrcCurrency": {
                "type": "string"
              },
              "quoteKey": {
                "type": "string"
              },
              "shieldPortId": {
                "type": "string"
              },
              "tcv": {
                "type": "string"
              },
              "tcvCurrency": {
                "type": "string"
              },
              "trc": {
                "type": "string"
              },
              "trcCurrency": {
                "type": "string"
              },
              "vendorName": {
                "type": "string"
              },
              "metro": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              },
              "siteContacts": {
                "type": "object",
                "properties": {
                  "primarySiteContactName": {
                    "type": "string"
                  },
                  "primarySiteContactPhone": {
                    "type": "string"
                  },
                  "primarySiteContactEmail": {
                    "type": "string"
                  },
                  "primarySitePhonePrefix": {
                    "type": "string"
                  },
                  "secondarySiteContactName": {
                    "type": "string"
                  },
                  "secondarySiteContactPhone": {
                    "type": "string"
                  },
                  "secondarySiteContactEmail": {
                    "type": "string"
                  },
                  "secondarySitePhonePrefix": {
                    "type": "string"
                  },
                  "demarcationPoint": {
                    "type": "string"
                  },
                  "siteAccess": {
                    "type": "string"
                  },
                  "interfaceType": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "example": {
          "name": "PORT_1",
          "speed": 500,
          "paymentType": "invoice",
          "edgePayload": {
            "country": {
              "iso": "HK",
              "name": "Hong Kong"
            },
            "formattedAddress": "Example address Hong Kong",
            "latitude": "22.3139685",
            "longitude": "114.2162923",
            "bandwidth": "1",
            "bandwidthUnit": "Gbps",
            "contractTerm": "12",
            "contractTermUnit": "month",
            "interval": "6 weeks",
            "lastMileProvider": "Not Provided",
            "lastMileProviderKey": "NOT_PROVIDED",
            "mrc": "388.36",
            "mrcCurrency": "USD",
            "nrc": "0.00",
            "nrcCurrency": "USD",
            "quoteKey": "2ca01131-a933-4093-90b7-831ce10b38a",
            "shieldPortId": "63d844a122bf55015a80d1c",
            "tcv": "4660.21",
            "tcvCurrency": "USD",
            "trc": "4660.32",
            "trcCurrency": "USD",
            "vendorName": "HKT",
            "metro": {
              "id": "123",
              "name": "Hong Kong",
              "country": "hk"
            },
            "siteContacts": {
              "primarySiteContactName": "name",
              "primarySiteContactPhone": "312312",
              "primarySiteContactEmail": "test@example.com",
              "primarySitePhonePrefix": "+852",
              "secondarySiteContactName": "test",
              "secondarySiteContactPhone": "+852",
              "secondarySiteContactEmail": "test@example.com",
              "secondarySitePhonePrefix": "+852",
              "demarcationPoint": "demarcationPoint",
              "siteAccess": "siteAccess",
              "interfaceType": "test"
            }
          }
        }
      },
      "EdgeOrder": {
        "type": "object",
        "properties": {
          "country": {
            "type": "object",
            "description": "Country object for Quote ",
            "properties": {
              "name": {
                "type": "string",
                "description": ""
              },
              "iso": {
                "type": "string",
                "description": ""
              }
            }
          },
          "bandwidth": {
            "type": "string",
            "description": "A desired bandwidth value for the order."
          },
          "bandwidthUnit": {
            "type": "string",
            "description": "An unit for a bandidth, can be Mbps or Gbps."
          },
          "contract-term": {
            "type": "string",
            "description": "A number of months/years of contract duration."
          },
          "contractTermUnit": {
            "type": "string",
            "description": "A duration unit for a contract."
          },
          "formatted-address": {
            "type": "string",
            "description": "An address format used for Google Places API."
          },
          "postCode": {
            "type": "string",
            "description": "Postcode used in address when a Singapore location is choosen.",
            "nullable": true
          },
          "withMetro": {
            "type": "string",
            "description": "Include metro details for the Quote/Order",
            "default": true
          }
        },
        "required": [
          "country",
          "bandwidth",
          "bandwidthUnit",
          "contractTermUnit",
          "formatted-address",
          "contract-term"
        ],
        "example": {
          "country": {
            "name": "Hong Kong",
            "iso": "HK"
          },
          "bandwidth": "200",
          "bandwidthUnit": "Mbps",
          "contract-term": "12",
          "contractTermUnit": "month",
          "formatted-address": "Example address, Hongkong",
          "postCode": "",
          "withMetro": true
        }
      },
      "EdgePriceResponse": {
        "type": "object",
        "properties": {
          "addressResult": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "country": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": ""
                  },
                  "iso": {
                    "type": "string",
                    "description": ""
                  }
                }
              },
              "formattedAddress": {
                "type": "string"
              },
              "latitude": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bandwidth": {
                  "type": "string"
                },
                "bandwidthUnit": {
                  "type": "string"
                },
                "contractTerm": {
                  "type": "string"
                },
                "contractTermUnit": {
                  "type": "string"
                },
                "interval": {
                  "type": "string"
                },
                "lastMileProvider": {
                  "type": "string"
                },
                "lastMileProviderKey": {
                  "type": "string"
                },
                "mrc": {
                  "type": "string"
                },
                "mrcCurrency": {
                  "type": "string"
                },
                "nrc": {
                  "type": "string"
                },
                "nrcCurrency": {
                  "type": "string"
                },
                "quoteKey": {
                  "type": "string"
                },
                "shieldPortId": {
                  "type": "string"
                },
                "tcv": {
                  "type": "string"
                },
                "tcvCurrency": {
                  "type": "string"
                },
                "trc": {
                  "type": "string"
                },
                "trcCurrency": {
                  "type": "string"
                },
                "vendorName": {
                  "type": "string"
                },
                "metro": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "example": {
          "formatted-address": "Example address, Hong Kong",
          "addressResult": {
            "city": "Kowloon",
            "country": {
              "iso": "HK",
              "name": "Hong Kong"
            },
            "formattedAddress": "Example address, Hong Kong",
            "latitude": 22.3139685,
            "longitude": 114.2162923
          },
          "data": []
        }
      },
      "EdgeEnquiryParams": {
        "properties": {
          "country": {
            "type": "object",
            "properties": {
              "iso": {
                "type": "string",
                "example": "USA"
              }
            }
          },
          "postCode": {
            "type": "string"
          },
          "bandwidth": {
            "type": "string"
          },
          "bandwidthUnit": {
            "type": "string"
          },
          "contractTermUnit": {
            "type": "string"
          },
          "contract-term": {
            "type": "string"
          },
          "formatted-address": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "nullable": true,
            "description": "User obhect with a valid id and name to link statistics with actual record in database",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "country": {
            "iso": "GB"
          },
          "postCode": "xyz",
          "bandwidth": 10,
          "bandwidthUnit": "Gbps",
          "contractTermUnit": "months",
          "contract-term": 24,
          "formatted-address": "Installation address"
        }
      },
      "EdgePayloadNonSensitive": {
        "required": ["shieldPortId", "quoteKey"],
        "properties": {
          "country": {
            "type": "object",
            "properties": {
              "iso": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "formattedAddress": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "bandwidth": {
            "type": "string"
          },
          "bandwidthUnit": {
            "type": "string"
          },
          "contractTerm": {
            "type": "string"
          },
          "contractTermUnit": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "lastMileProvider": {
            "type": "string"
          },
          "lastMileProviderKey": {
            "type": "string"
          },
          "mrc": {
            "type": "string"
          },
          "mrcCurrency": {
            "type": "string"
          },
          "nrc": {
            "type": "string"
          },
          "nrcCurrency": {
            "type": "string"
          },
          "quoteKey": {
            "type": "string"
          },
          "shieldPortId": {
            "type": "string"
          },
          "tcv": {
            "type": "string"
          },
          "tcvCurrency": {
            "type": "string"
          },
          "trc": {
            "type": "string"
          },
          "trcCurrency": {
            "type": "string"
          },
          "vendorName": {
            "type": "string"
          },
          "metro": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "siteContacts": {
            "type": "object",
            "properties": {
              "primarySiteContactName": {
                "type": "string"
              },
              "primarySiteContactPhone": {
                "type": "string"
              },
              "primarySiteContactEmail": {
                "type": "string"
              },
              "primarySitePhonePrefix": {
                "type": "string"
              },
              "secondarySiteContactName": {
                "type": "string"
              },
              "secondarySiteContactPhone": {
                "type": "string"
              },
              "secondarySiteContactEmail": {
                "type": "string"
              },
              "secondarySitePhonePrefix": {
                "type": "string"
              },
              "demarcationPoint": {
                "type": "string"
              },
              "siteAccess": {
                "type": "string"
              },
              "interfaceType": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "country": {
            "iso": "HK",
            "name": "Hong Kong"
          },
          "formattedAddress": "Example address Hong Kong",
          "latitude": "22.3139685",
          "longitude": "114.2162923",
          "bandwidth": "1",
          "bandwidthUnit": "Gbps",
          "contractTerm": "12",
          "contractTermUnit": "month",
          "interval": "6 weeks",
          "lastMileProvider": "Not Provided",
          "lastMileProviderKey": "NOT_PROVIDED",
          "mrc": "388.36",
          "mrcCurrency": "USD",
          "nrc": "0.00",
          "nrcCurrency": "USD",
          "quoteKey": "2c301211-a933-4093-11b7-8d055e10b38a",
          "shieldPortId": "63d8b212122bf50015110d6c",
          "tcv": "4660.21",
          "tcvCurrency": "USD",
          "trc": "4660.32",
          "trcCurrency": "USD",
          "vendorName": "HKT",
          "metro": {
            "id": "123",
            "name": "Hong Kong",
            "country": "hk"
          },
          "siteContacts": {
            "primarySiteContactName": "name",
            "primarySiteContactPhone": "312312",
            "primarySiteContactEmail": "test@example.com",
            "primarySitePhonePrefix": "+852",
            "secondarySiteContactName": "test",
            "secondarySiteContactPhone": "+852",
            "secondarySiteContactEmail": "test@example.com",
            "secondarySitePhonePrefix": "+852",
            "demarcationPoint": "demarcationPoint",
            "siteAccess": "siteAccess",
            "interfaceType": "test"
          }
        }
      },
      "EdgePayloadDraft": {
        "required": ["shieldPortId", "quoteKey", "formattedAddress", "country"],
        "properties": {
          "addressResult": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "country": {
                "type": "object",
                "properties": {
                  "iso": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "formattedAddress": {
                "type": "string"
              },
              "latitude": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EdgePayloadNonSensitive"
            }
          },
          "uuid": {
            "type": "string"
          },
          "selectedSolutionQuoteKey": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "siteContacts": {
            "type": "object",
            "properties": {
              "primarySiteContactName": {
                "type": "string"
              },
              "primarySiteContactPhone": {
                "type": "string"
              },
              "primarySiteContactEmail": {
                "type": "string"
              },
              "primarySitePhonePrefix": {
                "type": "string"
              },
              "secondarySiteContactName": {
                "type": "string"
              },
              "secondarySiteContactPhone": {
                "type": "string"
              },
              "secondarySiteContactEmail": {
                "type": "string"
              },
              "secondarySitePhonePrefix": {
                "type": "string"
              },
              "demarcationPoint": {
                "type": "string"
              },
              "siteAccess": {
                "type": "string"
              },
              "interfaceType": {
                "type": "string"
              }
            }
          },
          "orderStep": {
            "type": "string",
            "enum": ["INSTALLATION_DETAILS"]
          },
          "message": {
            "type": "string"
          },
          "draftOrderId": {
            "type": "string"
          },
          "country": {
            "type": "object",
            "properties": {
              "iso": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "formattedAddress": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "bandwidth": {
            "type": "string"
          },
          "bandwidthUnit": {
            "type": "string"
          },
          "contractTerm": {
            "type": "string"
          },
          "contractTermUnit": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "lastMileProvider": {
            "type": "string"
          },
          "lastMileProviderKey": {
            "type": "string"
          },
          "mrc": {
            "type": "string"
          },
          "mrcCurrency": {
            "type": "string"
          },
          "nrc": {
            "type": "string"
          },
          "nrcCurrency": {
            "type": "string"
          },
          "quoteKey": {
            "type": "string"
          },
          "shieldPortId": {
            "type": "string"
          },
          "tcv": {
            "type": "string"
          },
          "tcvCurrency": {
            "type": "string"
          },
          "trc": {
            "type": "string"
          },
          "trcCurrency": {
            "type": "string"
          },
          "vendorName": {
            "type": "string"
          },
          "metro": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "formatted-address": {
            "type": "string"
          }
        },
        "example": {
          "addressResult": {
            "city": "London",
            "country": {
              "iso": "GB",
              "name": "United Kingdom"
            },
            "formattedAddress": "Example address",
            "latitude": 51.497686,
            "longitude": -0.136045
          },
          "data": [
            {
              "bandwidth": 200,
              "bandwidthUnit": "Mbps",
              "contractTerm": 36,
              "contractTermUnit": "month",
              "interval": "13 weeks",
              "lastMileProvider": "Not Provided",
              "lastMileProviderKey": "NOT_PROVIDED",
              "mrc": 298.61,
              "mrcCurrency": "USD",
              "nrc": 0,
              "nrcCurrency": "USD",
              "quoteKey": "f127a24b-eb70-46f4-bf1d-e5413a356c32",
              "shieldPortId": "63d8b0aa122bf50015a80d6c",
              "tcv": 10749.54,
              "tcvCurrency": "USD",
              "trc": 10749.96,
              "trcCurrency": "USD",
              "vendorName": "NEOS",
              "metro": {
                "id": "77d9f1fbbcaa906f3cddb6d1",
                "name": "Hong Kong",
                "country": "hk"
              }
            }
          ],
          "uuid": "36a2095e-caff-4796-880e-df93bd7ab477",
          "selectedSolutionQuoteKey": "f131324b-eb70-46f4-bf1d-e5413a356c32",
          "postCode": "123131",
          "siteContacts": {
            "primarySiteContactName": "1 teScik243",
            "primarySiteContactPhone": "3223423 1",
            "primarySiteContactEmail": "45223423@34.pl 12",
            "primarySitePhonePrefix": 44,
            "secondarySiteContactName": "5345 21",
            "secondarySiteContactPhone": 5345,
            "secondarySiteContactEmail": "23425634@#4.pl",
            "secondarySitePhonePrefix": 33,
            "demarcationPoint": 645645,
            "siteAccess": 764,
            "interfaceType": 4784
          },
          "orderStep": "INSTALLATION_DETAILS",
          "message": "Test v2",
          "draftOrderId": "66412f992112014231237060",
          "country": {
            "iso": "GB",
            "name": "United Kingdom"
          },
          "formattedAddress": "Example address United Kingdom",
          "latitude": 51.497686,
          "longitude": -0.136045,
          "bandwidth": 200,
          "bandwidthUnit": "Mbps",
          "contractTerm": 36,
          "contractTermUnit": "month",
          "interval": "13 weeks",
          "lastMileProvider": "Not Provided",
          "lastMileProviderKey": "NOT_PROVIDED",
          "mrc": 298.61,
          "mrcCurrency": "USD",
          "nrc": 0,
          "nrcCurrency": "USD",
          "quoteKey": "f127a24b-1220-46f4-bf1d-e5413a356c32",
          "shieldPortId": "12318b0aa122bf5015a23d61",
          "tcv": 10749.54,
          "tcvCurrency": "USD",
          "trc": 10749.96,
          "trcCurrency": "USD",
          "vendorName": "NEOS",
          "metro": {
            "id": "739f1fbbcaa90123cdd11d1",
            "name": "Hong Kong",
            "country": "hk"
          },
          "formatted-address": "Example address United Kingdom"
        }
      },
      "CreateEdgeDraft": {
        "required": ["speed", "edgePayload"],
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "description": "If name is not provided, it will automatically assign name: `Draft order DD-MM-YYYY`."
          },
          "speed": {
            "type": "number",
            "description": "The speed of the bandwidth (in Mbps)"
          },
          "edgePayload": {
            "type": "object",
            "description": "Contains all information needed to recreate the original form values in the frontend.",
            "properties": {
              "formatted-address": {
                "type": "string"
              },
              "addressResult": {
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "object",
                    "properties": {
                      "iso": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "formattedAddress": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "string"
                  },
                  "longitude": {
                    "type": "string"
                  }
                }
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "bandwidth": {
                      "type": "string"
                    },
                    "bandwidthUnit": {
                      "type": "string"
                    },
                    "contractTerm": {
                      "type": "string"
                    },
                    "contractTermUnit": {
                      "type": "string"
                    },
                    "interval": {
                      "type": "string"
                    },
                    "lastMileProvider": {
                      "type": "string"
                    },
                    "lastMileProviderKey": {
                      "type": "string"
                    },
                    "mrc": {
                      "type": "string"
                    },
                    "mrcCurrency": {
                      "type": "string"
                    },
                    "nrc": {
                      "type": "string"
                    },
                    "nrcCurrency": {
                      "type": "string"
                    },
                    "quoteKey": {
                      "type": "string"
                    },
                    "shieldPortId": {
                      "type": "string"
                    },
                    "tcv": {
                      "type": "string"
                    },
                    "tcvCurrency": {
                      "type": "string"
                    },
                    "trc": {
                      "type": "string"
                    },
                    "trcCurrency": {
                      "type": "string"
                    },
                    "vendorName": {
                      "type": "string"
                    },
                    "metro": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "uuid": {
                "type": "string"
              },
              "selectedSolutionQuoteKey": {
                "type": "string"
              },
              "siteContacts": {
                "type": "object",
                "properties": {
                  "primarySiteContactName": {
                    "type": "string",
                    "nullable": true
                  },
                  "primarySiteContactPhone": {
                    "type": "string",
                    "nullable": true
                  },
                  "primarySiteContactEmail": {
                    "type": "string",
                    "nullable": true
                  },
                  "primarySitePhonePrefix": {
                    "type": "string",
                    "nullable": true
                  },
                  "secondarySiteContactName": {
                    "type": "string",
                    "nullable": true
                  },
                  "secondarySiteContactPhone": {
                    "type": "string",
                    "nullable": true
                  },
                  "secondarySiteContactEmail": {
                    "type": "string",
                    "nullable": true
                  },
                  "secondarySitePhonePrefix": {
                    "type": "string",
                    "nullable": true
                  },
                  "demarcationPoint": {
                    "type": "string",
                    "nullable": true
                  },
                  "siteAccess": {
                    "type": "string",
                    "nullable": true
                  },
                  "interfaceType": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "orderStep": {
                "type": "string",
                "default": "INSTALLATION_DETAILS"
              }
            }
          }
        },
        "example": {
          "name": "custom name",
          "speed": "500,",
          "edgePayload": {
            "formatted-address": "Example, Hong Kong",
            "addressResult": {
              "city": "Kowloon",
              "country": {
                "iso": "HK",
                "name": "Hong Kon"
              },
              "formattedAddress": "Example, Hong Kong",
              "latitude": 22.3139685,
              "longitude": 114.2162923
            },
            "data": [
              {
                "bandwidth": 500,
                "bandwidthUnit": "Mbps",
                "contractTerm": 12,
                "contractTermUnit": "month",
                "interval": "6 weeks",
                "lastMileProvider": "Not Provided",
                "lastMileProviderKey": "NOT_PROVIDED",
                "mrc": 359.84,
                "mrcCurrency": "USD",
                "nrc": 0,
                "nrcCurrency": "USD",
                "quoteKey": "b32a13e4-72c9-43cc-bc21-a343a24661b5",
                "shieldPortId": "63d8b0aa122bf50015a80d6c",
                "tcv": 4318.08,
                "tcvCurrency": "USD",
                "trc": 4318.08,
                "trcCurrency": "USD",
                "vendorName": "HKT",
                "metro": {
                  "id": "77d9f1fbbcaa906f3cddb6d1",
                  "name": "Hong Kong",
                  "country": "hk"
                }
              }
            ],
            "uuid": "0696ed9e-5b93-4b59-affd-5409af489edc",
            "selectedSolutionQuoteKey": "b32a13e4-72c9-43cc-bc21-a343a24661b5",
            "siteContacts": {
              "primarySiteContactName": "",
              "primarySiteContactPhone": "",
              "primarySiteContactEmail": "",
              "primarySitePhonePrefix": "+852,",
              "secondarySiteContactName": "",
              "secondarySiteContactPhone": "",
              "secondarySiteContactEmail": "",
              "secondarySitePhonePrefix": "",
              "demarcationPoint": "",
              "siteAccess": "",
              "interfaceType": null
            },
            "orderStep": "INSTALLATION_DETAILS"
          }
        }
      },
      "CreateLayer2ConnectionSchema": {
        "type": "object",
        "title": "Standard L2 (port to port) connection.",
        "properties": {
          "type": {
            "type": "string",
            "description": "The connection type, typically \"LAYER_2\".",
            "enum": ["LAYER2"]
          },
          "name": {
            "type": "string",
            "description": "The name of the new connection."
          },
          "portId": {
            "type": "string",
            "description": "The source port ID."
          },
          "destPortId": {
            "type": "string"
          },
          "regionId": {
            "type": "string"
          },
          "destRegionId": {
            "type": "string"
          },
          "destDcf": {
            "type": "string"
          },
          "speed": {
            "type": "number",
            "description": "The port speed in Mbps."
          },
          "destMetroId": {
            "type": "string",
            "description": "The ID of the destination metro."
          },
          "destCompany": {
            "type": "string",
            "description": "The username of the destination company."
          },
          "paymentType": {
            "type": "string",
            "enum": ["creditcard", "invoice"],
            "description": "The PAYG payment type."
          },
          "duration": {
            "type": "number"
          },
          "durationUnit": {
            "type": "string",
            "description": "The duration unit for the connection ('d', 'w', 'm', 'y')."
          },
          "evergreen": {
            "type": "boolean"
          },
          "classOfService": {
            "type": "string",
            "enum": ["GOLD", "SILVERPLUS", "SILVER", "BRONZE"]
          },
          "srcVlanRequest": {
            "type": "number",
            "nullable": true
          },
          "destVlanRequest": {
            "type": "number",
            "nullable": true
          },
          "discountCode": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "name",
          "portId",
          "speed",
          "destPortId",
          "destMetroId",
          "destCompany",
          "paymentType",
          "duration",
          "durationUnit",
          "classOfService"
        ]
      },
      "UpdateLayer2ConnectionSchema": {
        "title": "Edit connection.",
        "description": "This is used for both connection requests and regular connection edits. Fields only used in connection requests (`connection.status: pending`) have the description preprended with *Connection request*.",
        "type": "object",
        "properties": {
          "speed": {
            "description": "Speed in Mbps. You can set any speed while the connection request is PENDING. After the connection has been accepted by both parties, the connection speed can be _reduced_ at any time, but may not be _increased_ without a change request.",
            "type": "number",
            "minimum": 1
          },
          "name": {
            "description": "Friendly name for this connection. This is specific to your company, however when first creating a connection request this name will set for bot your company and the destination company.",
            "type": "string"
          },
          "portId": {
            "description": "Connection request: Port ID to use for this connection. If changing the controller would change the cdrBillingType for the other person, they will need to approve this connection request again.",
            "type": "string"
          },
          "untagged": {
            "description": "Connection request: Whether this connection should be untagged.",
            "type": "boolean"
          },
          "destUntagged": {
            "description": "Connection request: Whether the destination should be untagged. Only used for self-connection.",
            "type": "boolean"
          },
          "destPortId": {
            "description": "Connection request: Dest port ID to use for a self-connection.",
            "type": "string"
          },
          "controllerId": {
            "description": "Connection request: Controller ID to use for this connection. Only allowed on Layer 3 connections. If changing the controller would change the cdrBillingType for the other person, they will need to approve this connection request again.",
            "type": "string"
          },
          "destControllerId": {
            "description": "Connection request: Dest controller ID to use for a self-connection.",
            "type": "string"
          }
        }
      },
      "LogModel": {
        "example": {
          "results": [
            {
              "timestamp": "2016-07-17T23:14:36.853Z",
              "connection": {
                "id": "55783e39519d254d36f6126e",
                "speed": {
                  "value": 200,
                  "name": "200 Mbps"
                },
                "status": "ACTIVE",
                "name": "International link"
              },
              "user": {
                "id": "58980a25a77b4d7bf459d100",
                "name": "Stan",
                "username": "stan",
                "type": "PERSON",
                "groups": [],
                "location": null,
                "summary": null,
                "headline": null,
                "background": null,
                "avatarId": null,
                "overviewImage": null,
                "categories": [],
                "isCloudProvider": false,
                "cloudProviderDetails": {
                  "asn": {
                    "range": []
                  },
                  "bgpAuthority": "PCCWGLOBAL",
                  "companyType": "DCP"
                },
                "online": false,
                "isFollowing": false,
                "isFollowee": false,
                "__v": 0,
                "stats": {
                  "members": 0,
                  "interconnections": 0,
                  "followers": 0,
                  "following": 0,
                  "privateArticles": 0,
                  "privateEvents": 0,
                  "privatePosts": 0,
                  "articles": 0,
                  "events": 0,
                  "posts": 0
                },
                "displayOrder": -299,
                "system": {
                  "welcomeMessage": null
                },
                "deletedAt": null,
                "deleted": false,
                "verified": false,
                "verifiedIdentity": false,
                "tags": [],
                "status": "ACTIVE",
                "companies": [],
                "linkUserCompany": {},
                "signedCompanyRefId": null
              }
            }
          ]
        }
      },
      "Package": {
        "type": "string",
        "enum": ["alwayson", "ondemand"]
      },
      "NumberOfProtectedIpsInQuery": {
        "type": "string",
        "example": "1,8",
        "description": "Number of IPv4 address prefixes to be protected. Comma separated list of minimum and maximum range.",
        "enum": ["1,8", "9,16", "17,32", "33,64"]
      },
      "TotalMitigatedTraffic": {
        "type": "integer",
        "description": "DDoS attack traffic to be mitigated, in Mbps.",
        "example": 50,
        "enum": [20, 50, 100]
      },
      "BasicTerminationSite": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Reading Site"
          },
          "type": {
            "type": "string",
            "enum": ["headquarters", "datacentre", "branch"],
            "example": "headquarters"
          },
          "country_code": {
            "type": "string",
            "example": "GB"
          },
          "street_address": {
            "type": "string",
            "example": "6-8 Market Place"
          },
          "city": {
            "type": "string",
            "example": "Reading"
          },
          "county": {
            "type": "string",
            "example": "Berkshire"
          },
          "post_code": {
            "type": "string",
            "example": "RG1 3TE"
          }
        }
      },
      "ReturnedTerminationSite": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              }
            }
          },
          {
            "$ref": "#/components/schemas/BasicTerminationSite"
          },
          {
            "type": "object",
            "properties": {
              "time_created": {
                "type": "string",
                "description": "Exact date and time the order was created.",
                "example": "2020-11-18T14:34:53.246Z"
              }
            }
          }
        ]
      },
      "Site": {
        "type": "object",
        "properties": {
          "site_id": {
            "type": "integer"
          },
          "country_id": {
            "type": "string"
          },
          "country_name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "city_name": {
            "type": "string"
          },
          "site_bdm": {
            "type": "string"
          },
          "site_bdm_name": {
            "type": "string"
          }
        }
      },
      "SalesLink": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "type_name": {
            "type": "string"
          },
          "data_rate": {
            "type": "string"
          },
          "data_rate_unit": {
            "type": "string"
          },
          "burst": {
            "type": "string"
          },
          "burst_rate_unit": {
            "type": "string"
          },
          "from_site": {
            "$ref": "#/components/schemas/Site"
          },
          "to_site": {
            "$ref": "#/components/schemas/Site"
          }
        }
      },
      "SalesRecord": {
        "type": "object",
        "properties": {
          "external_id": {
            "type": "integer"
          },
          "sr_id": {
            "type": "integer"
          },
          "so_id": {
            "type": "integer"
          },
          "sp_id": {
            "type": "integer"
          },
          "rfq_request_id": {
            "type": "integer"
          },
          "rfq_component_id": {
            "type": "integer"
          },
          "cust_id": {
            "type": "string"
          },
          "cust_name": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "product_family": {
            "type": "string"
          },
          "product_type": {
            "type": "string"
          },
          "product_desc": {
            "type": "string"
          },
          "provisioning_in_name": {
            "type": "string"
          },
          "segment": {
            "type": "string"
          },
          "sale_status_id": {
            "type": "string"
          },
          "sale_status_name": {
            "type": "string"
          },
          "signed_region_name": {
            "type": "string"
          },
          "signed_bdm": {
            "type": "string"
          },
          "signed_bdm_name": {
            "type": "string"
          },
          "signed_bdm_region": {
            "type": "string"
          },
          "sales_bdm": {
            "type": "string"
          },
          "sales_bdm_name": {
            "type": "string"
          },
          "completion_delay_reason": {
            "type": "string"
          },
          "region_service_manager": {
            "type": "string"
          },
          "region_service_manager_name": {
            "type": "string"
          },
          "region_service_manager2": {
            "type": "string"
          },
          "region_service_manager2_name": {
            "type": "string"
          },
          "salesman_code": {
            "type": "string"
          },
          "partner_id": {
            "type": "string"
          },
          "circuit_id": {
            "type": "string"
          },
          "prev_circuit_id": {
            "type": "string"
          },
          "next_circuit_id": {
            "type": "string"
          },
          "related_sr_id": {
            "type": "string"
          },
          "service_id": {
            "type": "string"
          },
          "circuit_prefix": {
            "type": "string"
          },
          "project_manager": {
            "type": "string"
          },
          "project_manager_name": {
            "type": "string"
          },
          "project_manager2": {
            "type": "string"
          },
          "project_manager2_name": {
            "type": "string"
          },
          "engineer": {
            "type": "string"
          },
          "engineer_name": {
            "type": "string"
          },
          "engineer2": {
            "type": "string"
          },
          "engineer2_name": {
            "type": "string"
          },
          "cascade_provisioning": {
            "type": "string"
          },
          "competitor_identity": {
            "type": "string"
          },
          "provisioning_in": {
            "type": "string"
          },
          "switch": {
            "type": "string"
          },
          "sales_remark": {
            "type": "string"
          },
          "tech_remark": {
            "type": "string"
          },
          "gsmp_circuit_id": {
            "type": "string"
          },
          "dragon_service_id": {
            "type": "string"
          },
          "customer_ref_no": {
            "type": "string"
          },
          "order_create_date": {
            "type": "string"
          },
          "initial_contact_date": {
            "type": "string"
          },
          "target_close_date": {
            "type": "string"
          },
          "hot_prospect_date": {
            "type": "string"
          },
          "sales_close_date": {
            "type": "string"
          },
          "provision_start_date": {
            "type": "string"
          },
          "provision_end_date": {
            "type": "string"
          },
          "customer_requested_target_complete_date": {
            "type": "string"
          },
          "project_complete_date": {
            "type": "string"
          },
          "operation_date": {
            "type": "string"
          },
          "billing_date": {
            "type": "string"
          },
          "termination_date": {
            "type": "string"
          },
          "contract_renew_date": {
            "type": "string"
          },
          "onetime_commission_date": {
            "type": "string"
          },
          "drop_date": {
            "type": "string"
          },
          "cancel_date": {
            "type": "string"
          },
          "free_trial_day": {
            "type": "string"
          },
          "signed_company_id": {
            "type": "string"
          },
          "signed_company_name": {
            "type": "string"
          },
          "signed_region": {
            "type": "string"
          },
          "renew_option": {
            "type": "string"
          },
          "renew_option_desc": {
            "type": "string"
          },
          "renew_month": {
            "type": "string"
          },
          "billing_platform": {
            "type": "string"
          },
          "onetime_revenue": {
            "type": "string"
          },
          "onetime_gm": {
            "type": "string"
          },
          "onetime_gm_percent": {
            "type": "string"
          },
          "monthly_revenue": {
            "type": "string"
          },
          "monthly_gm": {
            "type": "string"
          },
          "monthly_gm_percent": {
            "type": "string"
          },
          "equip_cost": {
            "type": "string"
          },
          "tcv": {
            "type": "string"
          },
          "sales_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesLink"
            }
          },
          "ma_id": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "creation_type": {
            "type": "string"
          },
          "verification_status": {
            "type": "string"
          },
          "contract_length": {
            "type": "string"
          },
          "contract_length_unit": {
            "type": "string"
          },
          "pending_date": {
            "type": "string"
          },
          "stop_pending_date": {
            "type": "string"
          },
          "pending_reason": {
            "type": "string"
          }
        }
      },
      "NumberOfProtectedIps": {
        "type": "array",
        "example": [1, 8],
        "enum": [
          [1, 8],
          [9, 16],
          [17, 32],
          [33, 64]
        ],
        "description": "Number of IPv4 address prefixes to be protected. Array of minimum and maximum range.",
        "minItems": 2,
        "maxItems": 2
      },
      "TotalInboundTraffic": {
        "type": "array",
        "example": [51, 100],
        "enum": [
          [0, 50],
          [51, 100],
          [101, 200],
          [201, 500],
          [501, 1000],
          [1001, 2000]
        ],
        "description": "Corresponding Legitimate Traffic. Array of minimum and maximum range, in Mbps.",
        "minItems": 2,
        "maxItems": 2
      },
      "ServicePeriod": {
        "type": "integer",
        "enum": [12, 24],
        "example": 12
      },
      "BasicOrder": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Provided by user",
            "example": "Anti-DDoS October Order"
          },
          "insight_customer_id": {
            "type": "string",
            "description": "Provided by JWT from Console Connect, e.g. AIN001, TAN006, IS0569, TOL, TATA. Must already be an existing customer on the Insight platform.",
            "example": "AIN001"
          },
          "package": {
            "$ref": "#/components/schemas/Package"
          },
          "number_of_protected_ips": {
            "$ref": "#/components/schemas/NumberOfProtectedIps"
          },
          "total_inbound_traffic": {
            "$ref": "#/components/schemas/TotalInboundTraffic"
          },
          "total_mitigated_traffic": {
            "$ref": "#/components/schemas/TotalMitigatedTraffic"
          },
          "service_period": {
            "$ref": "#/components/schemas/ServicePeriod"
          },
          "resources_behind": {
            "type": "boolean",
            "description": "Whether the cleaned traffic shall be delivered to your existing GIA circuit.",
            "example": true
          }
        },
        "required": [
          "name",
          "insight_customer_id",
          "number_of_protected_ips",
          "total_inbound_traffic",
          "service_period",
          "resources_behind",
          "total_mitigated_traffic",
          "package"
        ]
      },
      "InsightSrId": {
        "type": "number",
        "description": "Sales Record ID, generated via Insight when order is created",
        "example": 10211
      },
      "Status": {
        "type": "string",
        "enum": [
          "new",
          "readyforprovision",
          "superseded",
          "active",
          "canceled",
          "terminated"
        ],
        "example": "active"
      },
      "ScrubbingCentre": {
        "type": "string",
        "enum": [
          "ashburn_us",
          "frankfurt_de",
          "hongkong_cn",
          "singapore_sg",
          "taiwan_tw"
        ],
        "description": "Associated Scrubbing Centre"
      },
      "ProtectedIpAddresses": {
        "type": "array",
        "description": "IP address prefixes that will be protected by the Anti-DDoS service.",
        "items": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "example": "203.203.14.0/24",
              "description": "IP Address prefix; subnet /18 to /24 inclusive"
            },
            "as_number": {
              "type": "integer",
              "example": 18042,
              "description": "Autonomous System Number"
            }
          },
          "required": ["address", "as_number"]
        }
      },
      "CustomerPublicIp": {
        "type": "string",
        "description": "GRE Tunnel IP Address (Public). Used to build the GRE Tunnel.",
        "example": "12.34.1.34/32"
      },
      "PccwgPublicIp": {
        "type": "string",
        "description": "PCCWG GRE Tunnel IP (Public). Used to build the GRE Tunnel.",
        "example": "103.13.2.122/32"
      },
      "BgpPeeringAsNumber": {
        "type": "integer",
        "description": "BGP Peering Tunnel Autonomous System Number. Used to establish BGP session over GRE tunnel.",
        "example": 553
      },
      "ProvisioningConfiguration": {
        "type": "object",
        "description": "This will only be present once the user has completed the Provisioning process and progressed this to a 'readyforprovision' order.",
        "properties": {
          "customer_public_ip": {
            "$ref": "#/components/schemas/CustomerPublicIp"
          },
          "pccwg_public_ip": {
            "$ref": "#/components/schemas/PccwgPublicIp"
          },
          "pccwg_private_ip": {
            "type": "string",
            "description": "PCCWG GRE tunnel IP (Private). Used to build the GRE Tunnel and establish BGP session over GRE tunnel. This field is generated internally; it is not submitted via the CAD form.",
            "example": "103.14.2.23"
          },
          "customer_private_ip": {
            "type": "string",
            "description": "Customer GRE tunnel IP (Private). Used to build the GRE Tunnel and establish BGP session over GRE tunnel. This field is fetched/generated internally; it is not submitted via the CAD form.",
            "example": "103.14.2.23"
          },
          "mtu_size": {
            "type": "integer",
            "description": "Maximum Transmission Unit (bytes). Used to build the GRE tunnel during provisioning. This field is generated internally; it is not submitted via the CAD form.",
            "example": 1460
          },
          "bgp_peering_as_number": {
            "$ref": "#/components/schemas/BgpPeeringAsNumber"
          },
          "bgp_password": {
            "type": "string",
            "description": "BGP session password. Used to establish BGP session over GRE tunnel. This field is generated internally; it is not submitted via the CAD form.",
            "example": "p@55w0rd"
          },
          "scrubbing_centre_as_number": {
            "type": "integer",
            "description": "Scrubbing Centre Autonomous System Number.",
            "example": 837
          }
        }
      },
      "ReturnedOrder": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              }
            }
          },
          {
            "$ref": "#/components/schemas/BasicOrder"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/Status"
              },
              "time_created": {
                "type": "string",
                "description": "Exact date and time the order was created.",
                "example": "2020-11-18T14:34:53.246Z"
              },
              "time_readyforprovision": {
                "type": "string",
                "description": "Exact date and time the provisioning process was completed, when the user submitted the network configuration info.",
                "example": "2020-11-18T14:34:53.246Z"
              },
              "insight_sr_id": {
                "$ref": "#/components/schemas/InsightSrId"
              },
              "insight_so_id": {
                "type": "number",
                "description": "Service Order ID, generated via Insight when order is created",
                "example": 29283
              },
              "circuit_id": {
                "type": "string",
                "description": "Unique identifier for the order",
                "example": "ASH(IPD) CAD901787"
              },
              "scrubbing_centre": {
                "$ref": "#/components/schemas/ScrubbingCentre"
              },
              "protected_ip_addresses": {
                "$ref": "#/components/schemas/ProtectedIpAddresses"
              },
              "provisioning_config_active": {
                "$ref": "#/components/schemas/ProvisioningConfiguration"
              },
              "provisioning_config_standby": {
                "$ref": "#/components/schemas/ProvisioningConfiguration"
              },
              "termination_site_id": {
                "type": "integer",
                "description": "Internal database ID of the Termination Site used for this order",
                "example": 44
              }
            },
            "required": ["insight_so_id"]
          }
        ]
      },
      "ProxyRule": {
        "type": "object",
        "properties": {
          "ProxyPort": {
            "type": "string",
            "example": "443"
          },
          "RealServers": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "47.92.101.159"
            }
          }
        }
      },
      "Rule": {
        "type": "object",
        "properties": {
          "ProxyType": {
            "type": "string",
            "example": "http"
          },
          "ProxyRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProxyRule"
            }
          }
        }
      },
      "CreateWebRuleRequest": {
        "type": "object",
        "required": [
          "domain",
          "ocsp",
          "httpsExt",
          "rules",
          "instanceIds",
          "cnameReused"
        ],
        "properties": {
          "cnameReused": {
            "type": "boolean",
            "example": true
          },
          "resourceGroupId": {
            "type": "string",
            "example": ""
          },
          "domain": {
            "type": "string",
            "example": "example.com"
          },
          "rsType": {
            "type": "integer",
            "example": 0
          },
          "defenseId": {
            "type": "string",
            "example": ""
          },
          "ocsp": {
            "type": "integer",
            "enum": [0, 1],
            "example": 1
          },
          "httpsExt": {
            "type": "object",
            "required": ["Http2", "Http2https", "Https2http"],
            "properties": {
              "Http2": {
                "type": "integer",
                "enum": [0, 1],
                "example": 1
              },
              "Http2https": {
                "type": "integer",
                "enum": [0, 1],
                "example": 1
              },
              "Https2http": {
                "type": "integer",
                "enum": [0, 1],
                "example": 1
              }
            }
          },
          "rules": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/Rule"
            }
          },
          "instanceIds": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "example": "ddos-a4a8adcd-e5bf-413e-91fc-022f303eb54f"
            }
          }
        }
      },
      "ProxyType": {
        "type": "object",
        "properties": {
          "ProxyPorts": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": 80
          },
          "ProxyType": {
            "type": "string",
            "enum": ["http", "https"],
            "example": "http"
          }
        }
      },
      "HttpsExt": {
        "type": "object",
        "properties": {
          "Http2": {
            "type": "integer",
            "description": "Flag indicating whether to use HTTP/2.",
            "enum": [0, 1]
          },
          "Http2https": {
            "type": "integer",
            "description": "Flag indicating whether to use HTTP/2 over HTTPS.",
            "enum": [0, 1]
          },
          "Https2http": {
            "type": "integer",
            "description": "Flag indicating whether to use HTTPS/2 over HTTP.",
            "enum": [0, 1]
          }
        },
        "description": "Configuration options for HTTPS extensions."
      },
      "ModifyWebRuleRequestBody": {
        "type": "object",
        "required": [
          "resourceGroupId",
          "domain",
          "proxyTypes",
          "httpsExt",
          "realServers",
          "instanceIds",
          "cnameReused"
        ],
        "properties": {
          "resourceGroupId": {
            "type": "string",
            "example": ""
          },
          "domain": {
            "type": "string",
            "format": "uri",
            "example": "example.com"
          },
          "proxyTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProxyType"
            }
          },
          "rsType": {
            "type": "integer",
            "example": 0
          },
          "httpsExt": {
            "$ref": "#/components/schemas/HttpsExt"
          },
          "realServers": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "format": "ipv4",
              "example": "1.1.1.1"
            }
          },
          "ocsp": {
            "type": "integer",
            "enum": [0, 1],
            "example": 1
          },
          "instanceIds": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "example": "ddos-3a1aaf10-5829-4ba6-bfc7-3ea950ed1234"
            }
          },
          "cnameReused": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ConfigL7RsPolicyRequestBody": {
        "type": "object",
        "properties": {
          "resourceGroupId": {
            "type": "string",
            "example": ""
          },
          "domain": {
            "type": "string",
            "example": "example.com"
          },
          "policy": {
            "type": "object",
            "properties": {
              "ProxyMode": {
                "type": "string",
                "enum": ["ip_hash", "rr", "least_time"],
                "example": "ip_hash"
              },
              "Attributes": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": ["RealServer"],
                  "properties": {
                    "RealServer": {
                      "type": "string",
                      "example": "121.70.168.58"
                    },
                    "Attribute": {
                      "type": "object",
                      "properties": {
                        "Weight": {
                          "type": "integer",
                          "description": "Only for ProxyMode = rr, must between 1 and 100",
                          "example": 80
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FunctionPlan": {
        "type": "string",
        "enum": ["standard", "enhanced"],
        "example": "standard"
      },
      "Provider": {
        "type": "string",
        "enum": ["ipdc", "dns"],
        "example": "dns"
      },
      "ResourceType": {
        "type": "string",
        "enum": ["pureweb", "mixture"],
        "example": "pureweb"
      },
      "DNSInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 3522
          },
          "circuit_id": {
            "type": "string",
            "example": "HKG(ABB) MPR948521"
          },
          "function": {
            "$ref": "#/components/schemas/FunctionPlan"
          },
          "insight_customer_id": {
            "type": "string",
            "example": "ETT001"
          },
          "insight_sr_id": {
            "type": "string",
            "example": "123141"
          },
          "link": {
            "type": "object",
            "properties": {
              "autoRenewal": {
                "type": "boolean",
                "example": false
              },
              "createdAt": {
                "type": "string",
                "example": "2023-07-18 17:03:51"
              },
              "createdBy": {
                "type": "string",
                "example": "ca8fd4aa-a509-43e5-aa32-8bd2926c9779"
              },
              "createdByName": {
                "type": "string",
                "example": "Console Core Systems Engineering"
              },
              "customer": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "5e99b3d343308a00142cd356"
                  }
                }
              },
              "expiredAt": {
                "type": "string",
                "example": "2023-08-19 00:00:00"
              },
              "externalId": {
                "type": "string",
                "example": "ddosDip-sg-5r53b67eg0l"
              },
              "externalIp": {
                "type": "string",
                "example": "170.33.13.112"
              },
              "id": {
                "type": "string",
                "example": "ddos-7e072ab2-de5a-46a9-a597-e8c322bcc53f"
              },
              "instanceType": {
                "type": "object",
                "properties": {
                  "migrationPlan": {
                    "type": "string",
                    "example": "Insurance"
                  },
                  "protectionPackage": {
                    "type": "string",
                    "example": "Enhanced Function"
                  },
                  "normalBandwidth": {
                    "type": "integer",
                    "example": 300
                  },
                  "cleanBandwidth": {
                    "type": "integer",
                    "example": 300
                  },
                  "cleanQPS": {
                    "type": "integer",
                    "example": 600
                  },
                  "newConnections": {
                    "type": "integer",
                    "example": 5000
                  },
                  "concurrentConnections": {
                    "type": "integer",
                    "example": 100000
                  }
                }
              },
              "name": {
                "type": "string",
                "example": "Some DNS Instance"
              },
              "protected": {
                "type": "object",
                "properties": {
                  "protectedPorts": {
                    "type": "object",
                    "properties": {
                      "usedNumber": {
                        "type": "integer",
                        "example": 1
                      },
                      "maxNumber": {
                        "type": "integer",
                        "example": 10
                      }
                    }
                  },
                  "protectedDomains": {
                    "type": "object",
                    "properties": {
                      "usedNumber": {
                        "type": "integer",
                        "example": 1
                      },
                      "maxNumber": {
                        "type": "integer",
                        "example": 20
                      }
                    }
                  },
                  "protectedSites": {
                    "type": "object",
                    "properties": {
                      "usedNumber": {
                        "type": "integer",
                        "example": 1
                      },
                      "maxNumber": {
                        "type": "integer",
                        "example": 2
                      }
                    }
                  },
                  "singleProtectBandwidthLimit": {
                    "type": "integer",
                    "example": 2015
                  },
                  "availableAdvancedMigrationSessionThisMonth": {
                    "type": "integer",
                    "example": 2
                  }
                }
              },
              "provider": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "0b63baf5-65fc-479c-a316-8d224b0a3d66"
                  },
                  "name": {
                    "type": "string",
                    "example": "Alibaba"
                  },
                  "logo": {
                    "type": "string",
                    "example": "Alibaba"
                  }
                }
              },
              "state": {
                "type": "string",
                "example": "normal"
              },
              "status": {
                "type": "string",
                "example": "ENABLED"
              },
              "subscription": {
                "type": "integer",
                "example": 1
              },
              "uid": {
                "type": "string",
                "example": "292733187643212169"
              },
              "updatedBy": {
                "type": "string",
                "example": "ca8fd4aa-a509-43e5-aa32-8bd2926c9779"
              },
              "updatedByName": {
                "type": "string",
                "example": "Console Core Systems Engineering"
              },
              "updatedAt": {
                "type": "string",
                "example": "2023-07-20 11:45:44"
              }
            }
          },
          "name": {
            "type": "string",
            "example": "Some DNS Instance"
          },
          "package": {
            "$ref": "#/components/schemas/Package"
          },
          "provider": {
            "$ref": "#/components/schemas/Provider"
          },
          "resource_type": {
            "$ref": "#/components/schemas/ResourceType"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "synonym": {
            "type": "string",
            "example": "real-reseller"
          },
          "vendor_account": {
            "type": "string",
            "example": "292733187643212169"
          },
          "vendor_reference": {
            "type": "string",
            "example": "ddos-7e072ab2-de5a-46a9-a597-e8c322bcc53f"
          }
        }
      },
      "DNSPortConfigList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "instanceId": {
                  "type": "string",
                  "example": "ddos-a2dc76e8-bb13-4dab-91f9-28fafd4fc012"
                },
                "name": {
                  "type": "string",
                  "example": "My-Order-01"
                },
                "forwardingProtocol": {
                  "type": "string",
                  "enum": ["tcp", "idp"]
                },
                "forwardingPort": {
                  "type": "string",
                  "example": 8024
                },
                "originServicePort": {
                  "type": "string",
                  "example": 8024
                },
                "forwardingMode": {
                  "type": "string",
                  "example": "Round-robin"
                },
                "sessionPersistence": {
                  "type": "boolean",
                  "example": false
                },
                "healthCheckStatus": {
                  "type": "boolean",
                  "example": false
                },
                "protectionPolicy": {
                  "type": "boolean",
                  "example": false
                },
                "deleted": {
                  "type": "boolean",
                  "example": false
                },
                "originalServerId": {
                  "type": "string",
                  "example": "48.99.104.155"
                }
              },
              "required": [
                "instanceId",
                "name",
                "forwardingProtocol",
                "forwardingPort",
                "originServicePort",
                "forwardingMode",
                "sessionPersistence",
                "healthCheckStatus",
                "protectionPolicy",
                "deleted"
              ]
            }
          },
          "total": {
            "type": "integer",
            "example": 1
          },
          "page": {
            "type": "integer",
            "example": 1
          },
          "size": {
            "type": "integer",
            "example": 10
          }
        },
        "additionalProperties": false,
        "required": ["data", "total", "page", "size"]
      },
      "DNSPortConfigRequest": {
        "type": "object",
        "description": "This will be the request body for DNS port config requests.",
        "properties": {
          "protocol": {
            "type": "string",
            "enum": ["tcp", "udp"],
            "example": "tcp"
          },
          "frontendPort": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535,
            "example": 8210
          },
          "backendPort": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535,
            "example": 8210
          },
          "realServers": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ip address",
              "format": "ipv4",
              "example": "121.70.168.58"
            }
          },
          "uid": {
            "type": "string",
            "example": "292733187643212169"
          },
          "instanceId": {
            "type": "string",
            "example": "ddos-7de04971-3fc4-422f-8e3a-eb8fd44e812a"
          }
        },
        "required": [
          "protocol",
          "frontendPort",
          "backendPort",
          "realServers",
          "uid",
          "instanceId"
        ]
      },
      "ProvisionCloudRouterMyPortSite": {
        "type": "object",
        "title": "My Port Site",
        "example": {
          "accessCircuit": {
            "classOfService": [
              {
                "name": "BRONZE",
                "value": 25
              },
              {
                "name": "gold",
                "value": 75
              }
            ],
            "portId": "579f33b548010f508c7a449c",
            "rateLimit": {
              "unit": "Mbps",
              "value": 400
            }
          },
          "name": "my_cloudrouter_site_name",
          "peer": {
            "type": "SELF"
          },
          "discountCode": "CLOUDROUTER10"
        },
        "properties": {
          "accessCircuit": {
            "description": "L2 config",
            "properties": {
              "classOfService": {
                "description": "Site class of service breakdown by percent. For a single class value must equal 100. For multiple classes sum of values must be 100.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the class.",
                      "enum": ["BRONZE", "SILVER", "GOLD"]
                    },
                    "value": {
                      "type": "number",
                      "description": "Percentage for the class of service. Must equal 100 across all provided classes."
                    }
                  },
                  "required": ["name", "value"]
                }
              },
              "portId": {
                "description": "The ID of an ACTIVE DCP port.",
                "type": "string"
              },
              "rateLimit": {
                "description": "The speed of the VPN site.",
                "properties": {
                  "unit": {
                    "description": "Unit of the rateLimit",
                    "type": "string",
                    "enum": ["Mbps", "Gbps"]
                  },
                  "value": {
                    "description": "value of the rateLimit",
                    "type": "number"
                  }
                },
                "required": ["unit", "value"],
                "type": "object"
              }
            },
            "type": "object",
            "required": ["portId", "rateLimit", "classOfService"]
          },
          "name": {
            "description": "Name for the new VPN site.",
            "type": "string"
          },
          "peer": {
            "description": "L3 peer config",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["SELF"]
              }
            },
            "type": "object",
            "required": ["type"]
          },
          "discountCode": {
            "description": "A valid discount code.",
            "type": "string"
          }
        },
        "required": ["name", "accessCircuit", "peer"]
      },
      "ProvisionCloudRouterGoogleSite": {
        "type": "object",
        "title": "Google Site",
        "example": {
          "accessCircuit": {
            "classOfService": [
              {
                "name": "BRONZE",
                "value": 100
              }
            ],
            "portId": "579f33b548010f508c7a449c",
            "rateLimit": {
              "unit": "Mbps",
              "value": 400
            }
          },
          "name": "my_cloudrouter_site_name",
          "peer": {
            "data": {
              "pairingKey": "2dfcdee7-b6f9-41d0-b98f-639151097693/us-west1/1",
              "tierRateLimit": {
                "unit": "Mbps",
                "value": 500
              }
            },
            "type": "GOOGLE"
          },
          "discountCode": "CLOUDROUTER10"
        },
        "properties": {
          "accessCircuit": {
            "description": "L2 config",
            "properties": {
              "classOfService": {
                "description": "An array with the desired class of service. Only one value is allowed.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the class.",
                      "enum": ["BRONZE", "SILVER", "GOLD"]
                    },
                    "value": {
                      "type": "number",
                      "description": "Only 1 Class is allowed. This value must be 100.",
                      "enum": [100]
                    }
                  },
                  "required": ["name", "value"]
                }
              },
              "portId": {
                "description": "The ID of an ACTIVE DCP port.",
                "type": "string"
              },
              "rateLimit": {
                "description": "The speed of the VPN site.",
                "properties": {
                  "unit": {
                    "description": "unit of the rateLimit",
                    "type": "string",
                    "enum": ["Mbps", "Gbps"]
                  },
                  "value": {
                    "description": "value of the rateLimit",
                    "type": "number"
                  }
                },
                "required": ["unit", "value"],
                "type": "object"
              }
            },
            "type": "object",
            "required": ["portId", "rateLimit", "classOfService"]
          },
          "name": {
            "description": "Name for the new VPN site.",
            "type": "string"
          },
          "peer": {
            "description": "L3 peer config",
            "properties": {
              "data": {
                "properties": {
                  "pairingKey": {
                    "description": "Only valid for Google sites.",
                    "type": "string"
                  },
                  "tierRateLimit": {
                    "description": "Must be one of the speed tiers marked as available on the DCP port.",
                    "properties": {
                      "unit": {
                        "description": "Unit of the rateLimit",
                        "type": "string",
                        "enum": ["Mbps", "Gbps"]
                      },
                      "value": {
                        "description": "value of the rateLimit",
                        "type": "number"
                      }
                    },
                    "required": ["unit", "value"],
                    "type": "object"
                  }
                },
                "type": "object",
                "required": ["pairingKey", "tierRateLimit"]
              },
              "type": {
                "description": "Must be GOOGLE.",
                "type": "string",
                "enum": ["GOOGLE"]
              }
            },
            "type": "object",
            "required": ["type", "data"]
          },
          "discountCode": {
            "description": "A valid discount code.",
            "type": "string"
          }
        },
        "required": ["name", "accessCircuit", "peer"]
      },
      "ProvisionCloudRouterAzureSite": {
        "type": "object",
        "title": "Azure Site",
        "example": {
          "accessCircuit": {
            "classOfService": [
              {
                "name": "BRONZE",
                "value": 100
              }
            ],
            "portId": "579f33b548010f508c7a449c",
            "secondaryPortId": "475cf33b548010f508c7b484f",
            "rateLimit": {
              "unit": "Mbps",
              "value": 400
            }
          },
          "name": "my_cloudrouter_site_name",
          "peer": {
            "data": {
              "pairingKey": "2dfcdee7-b6f9-41d0-b98f-639151097693/us-west1/1",
              "accountId": "123456abc",
              "tierRateLimit": {
                "unit": "Mbps",
                "value": 500
              }
            },
            "type": "AZURE"
          },
          "discountCode": "CLOUDROUTER10"
        },
        "properties": {
          "accessCircuit": {
            "description": "L2 config",
            "properties": {
              "classOfService": {
                "description": "An array with the desired class of service. Only one value is allowed.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the class.",
                      "enum": ["BRONZE", "SILVER", "GOLD"]
                    },
                    "value": {
                      "type": "number",
                      "description": "Only 1 Class is allowed. This value must be 100.",
                      "enum": [100]
                    }
                  },
                  "required": ["name", "value"]
                }
              },
              "portId": {
                "description": "The ID of an ACTIVE DCP port.",
                "type": "string"
              },
              "secondaryPortId": {
                "description": "The ID of an ACTIVE DCP port. Only available for Azure sites.",
                "type": "string"
              },
              "rateLimit": {
                "description": "The speed of the VPN site.",
                "properties": {
                  "unit": {
                    "description": "Unit of the rateLimit",
                    "type": "string",
                    "enum": ["Mbps", "Gbps"]
                  },
                  "value": {
                    "description": "value of the rateLimit",
                    "type": "number"
                  }
                },
                "required": ["unit", "value"],
                "type": "object"
              }
            },
            "type": "object",
            "required": [
              "portId",
              "secondaryPortId",
              "rateLimit",
              "classOfService"
            ]
          },
          "name": {
            "description": "Name for the new VPN site.",
            "type": "string"
          },
          "peer": {
            "description": "L3 peer config",
            "properties": {
              "data": {
                "properties": {
                  "accountId": {
                    "description": "Azure service key.",
                    "type": "string"
                  },
                  "tierRateLimit": {
                    "description": "Must be one of the speed tiers marked as available on the DCP port",
                    "properties": {
                      "unit": {
                        "description": "Unit of the rateLimit",
                        "type": "string",
                        "enum": ["Mbps", "Gbps"]
                      },
                      "value": {
                        "description": "value of the rateLimit",
                        "type": "number"
                      }
                    },
                    "required": ["unit", "value"],
                    "type": "object"
                  }
                },
                "type": "object",
                "required": ["accountId", "tierRateLimit"]
              },
              "type": {
                "description": "Must be AZURE.",
                "type": "string",
                "enum": ["AZURE"]
              }
            },
            "type": "object",
            "required": ["type", "data"]
          },
          "discountCode": {
            "description": "A valid discount code.",
            "type": "string"
          }
        },
        "required": ["name", "accessCircuit", "peer"]
      },
      "ProvisionCloudRouterCloudSite": {
        "type": "object",
        "title": "Cloud Site",
        "example": {
          "accessCircuit": {
            "classOfService": [
              {
                "name": "BRONZE",
                "value": 100
              }
            ],
            "portId": "579f33b548010f508c7a449c",
            "rateLimit": {
              "unit": "Mbps",
              "value": 400
            }
          },
          "name": "my_cloudrouter_site_name",
          "peer": {
            "asn": 64512,
            "data": {
              "accountId": "123456abc",
              "tierRateLimit": {
                "unit": "Mbps",
                "value": 500
              }
            },
            "type": "AWS"
          },
          "discountCode": "CLOUDROUTER10"
        },
        "properties": {
          "accessCircuit": {
            "description": "L2 config",
            "type": "object",
            "required": ["portId", "rateLimit", "classOfService"],
            "properties": {
              "classOfService": {
                "description": "An array with the desired class of service. Only one value is allowed.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the class.",
                      "enum": ["BRONZE", "SILVER", "GOLD"]
                    },
                    "value": {
                      "type": "number",
                      "description": "Only 1 Class is allowed. This value must be 100.",
                      "enum": [100]
                    }
                  },
                  "required": ["name", "value"]
                }
              },
              "portId": {
                "description": "The ID of an ACTIVE DCP port.",
                "type": "string"
              },
              "rateLimit": {
                "description": "The speed of the VPN site.",
                "properties": {
                  "unit": {
                    "description": "Unit of the rateLimit",
                    "type": "string",
                    "enum": ["Mbps", "Gbps"]
                  },
                  "value": {
                    "description": "value of the rateLimit",
                    "type": "number"
                  }
                },
                "required": ["unit", "value"],
                "type": "object"
              }
            }
          },
          "name": {
            "description": "Name for the new VPN site.",
            "type": "string"
          },
          "peer": {
            "description": "L3 peer config",
            "properties": {
              "asn": {
                "description": "A valid ASN for the cloud provider",
                "type": "number"
              },
              "data": {
                "type": "object",
                "required": ["accountId"],
                "properties": {
                  "accountId": {
                    "description": "Your account or project id with selected cloud provider.",
                    "type": "string"
                  },
                  "tierRateLimit": {
                    "type": "object",
                    "description": "For DCP cloud providers. Must be one of the speed tiers marked as available on the DCP port.",
                    "required": ["unit", "value"],
                    "properties": {
                      "unit": {
                        "description": "Unit of the rateLimit",
                        "type": "string",
                        "enum": ["Mbps", "Gbps"]
                      },
                      "value": {
                        "description": "value of the rateLimit",
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "type": {
                "description": "The value for the desired cloud provider (e.g. AWS)",
                "type": "string"
              }
            },
            "type": "object",
            "required": ["type", "data"]
          },
          "discountCode": {
            "description": "A valid discount code.",
            "type": "string"
          }
        },
        "required": ["name", "accessCircuit", "peer"]
      },
      "ProvisionCloudRouterOvhSite": {
        "type": "object",
        "title": "OVHCloud Site",
        "example": {
          "accessCircuit": {
            "classOfService": [
              {
                "name": "BRONZE",
                "value": 100
              }
            ],
            "portId": "579f33b548010f508c7a449c",
            "rateLimit": {
              "unit": "Mbps",
              "value": 500
            }
          },
          "name": "my_cloudrouter_site_name",
          "peer": {
            "asn": 64512,
            "data": {
              "accountId": "666e1180-b0c6-493b-901a-b19a0bc999d2",
              "tierRateLimit": {
                "unit": "Mbps",
                "value": 500
              }
            },
            "type": "OVHCLOUD"
          },
          "discountCode": "CLOUDROUTER10"
        },
        "properties": {
          "accessCircuit": {
            "description": "L2 config",
            "properties": {
              "classOfService": {
                "description": "An array with the desired class of service. Only one value is allowed.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the class.",
                      "enum": ["BRONZE", "SILVER", "GOLD"]
                    },
                    "value": {
                      "type": "number",
                      "description": "Only 1 Class is allowed. This value must be 100.",
                      "enum": [100]
                    }
                  },
                  "required": ["name", "value"]
                }
              },
              "portId": {
                "description": "The PortId returned from validating your OVH Service Key",
                "type": "string"
              },
              "rateLimit": {
                "description": "The speed of the VPN site.",
                "properties": {
                  "unit": {
                    "description": "Unit of the rateLimit",
                    "type": "string",
                    "enum": ["Mbps", "Gbps"]
                  },
                  "value": {
                    "description": "value of the rateLimit",
                    "type": "number"
                  }
                },
                "required": ["unit", "value"],
                "type": "object"
              }
            },
            "type": "object",
            "required": ["portId", "rateLimit", "classOfService", "accountId"]
          },
          "name": {
            "description": "Name for the new VPN site.",
            "type": "string"
          },
          "peer": {
            "description": "L3 peer config",
            "properties": {
              "asn": {
                "description": "ASN for OVHCloud Valid ranges are 64512 - 65534",
                "type": "number"
              },
              "data": {
                "properties": {
                  "accountId": {
                    "description": "OVH Service Key.",
                    "type": "string"
                  },
                  "tierRateLimit": {
                    "description": "Must be one of the speed tiers returned when validating your OVH Service Key",
                    "properties": {
                      "unit": {
                        "description": "Unit of the rateLimit",
                        "type": "string",
                        "enum": ["Mbps", "Gbps"]
                      },
                      "value": {
                        "description": "value of the rateLimit",
                        "type": "number"
                      }
                    },
                    "required": ["unit", "value"],
                    "type": "object"
                  }
                },
                "type": "object",
                "required": ["accountId", "tierRateLimit"]
              },
              "type": {
                "description": "Must be OVHCLOUD.",
                "type": "string",
                "enum": ["OVHCLOUD"]
              }
            },
            "type": "object",
            "required": ["asn", "type", "data"]
          },
          "discountCode": {
            "description": "A valid discount code.",
            "type": "string"
          }
        },
        "required": ["name", "accessCircuit", "peer"]
      },
      "ProvisionCloudRouterOracleSite": {
        "type": "object",
        "title": "Oracle Cloud Site",
        "example": {
          "accessCircuit": {
            "classOfService": [
              {
                "name": "BRONZE",
                "value": 100
              }
            ],
            "portId": "579f33b548010f508c7a449c",
            "rateLimit": {
              "unit": "Mbps",
              "value": 400
            }
          },
          "name": "my_cloudrouter_site_name",
          "peer": {
            "data": {
              "accountId": "ocid1.virtualcircuit.oc1.ap-singapore-1.aaaaaaaavg7gllkugsdbqvhh4pivxxsbonhtmkm6rqasdffotutadxahqvza",
              "tierRateLimit": {
                "unit": "Mbps",
                "value": 500
              }
            },
            "type": "ORACLE"
          },
          "discountCode": "CLOUDROUTER10"
        },
        "properties": {
          "accessCircuit": {
            "description": "L2 config",
            "type": "object",
            "required": ["portId", "rateLimit", "classOfService"],
            "properties": {
              "classOfService": {
                "description": "An array with the desired class of service. Only one value is allowed.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the class.",
                      "enum": ["BRONZE", "SILVER", "GOLD"]
                    },
                    "value": {
                      "type": "number",
                      "description": "Only 1 Class is allowed. This value must be 100.",
                      "enum": [100]
                    }
                  },
                  "required": ["name", "value"]
                }
              },
              "portId": {
                "description": "The ID of an ACTIVE DCP port.",
                "type": "string"
              },
              "rateLimit": {
                "description": "The speed of the VPN site.",
                "properties": {
                  "unit": {
                    "description": "Unit of the rateLimit",
                    "type": "string",
                    "enum": ["Mbps", "Gbps"]
                  },
                  "value": {
                    "description": "value of the rateLimit",
                    "type": "number"
                  }
                },
                "required": ["unit", "value"],
                "type": "object"
              }
            }
          },
          "name": {
            "description": "Name for the new VPN site.",
            "type": "string"
          },
          "peer": {
            "description": "L3 peer config",
            "properties": {
              "data": {
                "type": "object",
                "required": ["accountId"],
                "properties": {
                  "accountId": {
                    "description": "Your Oracle Cloud Identifier (OCID)",
                    "type": "string"
                  },
                  "tierRateLimit": {
                    "type": "object",
                    "description": "For DCP cloud providers. Must be one of the speed tiers marked as available on the DCP port.",
                    "required": ["unit", "value"],
                    "properties": {
                      "unit": {
                        "description": "Unit of the rateLimit",
                        "type": "string",
                        "enum": ["Mbps", "Gbps"]
                      },
                      "value": {
                        "description": "value of the rateLimit",
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "type": {
                "description": "Must be ORACLE.",
                "type": "string",
                "enum": ["ORACLE"]
              }
            },
            "type": "object",
            "required": ["type", "data"]
          },
          "discountCode": {
            "description": "A valid discount code.",
            "type": "string"
          }
        },
        "required": ["name", "accessCircuit", "peer"]
      },
      "ValidAsn": {
        "type": "object",
        "properties": {
          "asn": {
            "type": "number",
            "description": "The ASN being validated"
          },
          "valid": {
            "type": "boolean",
            "description": "The validity of the ASN"
          }
        },
        "example": {
          "asn": 4200000000,
          "valid": true
        }
      },
      "InvalidAsn": {
        "type": "object",
        "properties": {
          "asn": {
            "type": "number",
            "description": "The ASN being validated"
          },
          "valid": {
            "type": "boolean",
            "description": "The validity of the ASN"
          },
          "reason": {
            "type": "string",
            "description": "The reason for the invalidity"
          }
        },
        "example": {
          "asn": 3200000055,
          "valid": false,
          "reason": "ASN should be within the accepted range [4200000000;4200009999]"
        }
      },
      "IoD": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The IO-D Service ID."
          },
          "companyId": {
            "type": "string",
            "description": "The owning company's ID."
          },
          "accessPortId": {
            "type": "string",
            "description": "The specified port's ID."
          },
          "name": {
            "type": "string",
            "description": "The IO-D service name."
          },
          "vlanId": {
            "type": "number",
            "description": "The VLAN ID of the access circuit (between the Access Port and a Console Connect Border Router)."
          },
          "rateLimit": {
            "type": "object",
            "description": "The specified rate limit value and unit.",
            "properties": {
              "rate": {
                "type": "number",
                "description": "The rate limit value."
              },
              "unit": {
                "type": "string",
                "description": "The rate limit unit."
              }
            }
          },
          "burstRate": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "rate": {
                    "type": "number",
                    "description": "The rate limit value."
                  },
                  "unit": {
                    "type": "string",
                    "description": "The rate limit unit."
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "description": "The specified rate limit value and unit."
          },
          "burstType": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Burst type description, e.g. '95th Percentile'."
          },
          "type": {
            "type": "string",
            "description": "The specified routing type.",
            "enum": ["DYNAMIC", "STATIC"]
          },
          "asnId": {
            "type": "string",
            "description": "The specified ASN's ID."
          },
          "ipv4BlockId": {
            "type": "string",
            "description": "The specified IPV4 block's id."
          },
          "ipv6BlockId": {
            "type": "string",
            "description": "The specified IPV6 block's id."
          },
          "enableIpv6": {
            "type": "boolean",
            "description": "Whether this service is IPv6-enabled."
          },
          "customerRouterIpv4": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The customer router's IPV4."
          },
          "customerRouterIpv6": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The customer router's IPV6."
          },
          "consoleRouterIpv4": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The console router's IPV4."
          },
          "consoleRouterIpv6": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The console router's IPV6."
          },
          "linknetIpV4Block": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The linknet IPV4 block's ID."
          },
          "linknetIpV6Block": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The linknet IPV6 block's ID."
          },
          "bgpKey": {
            "type": "string",
            "description": "The specified BGP key."
          },
          "staticRoutes": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "description": "List of static routes for static routing."
          },
          "giaSiteId": {
            "type": "string",
            "description": "IO-D site id from network automation."
          },
          "giaOrderId": {
            "type": "string",
            "description": "The Order ID correlated to this IO-D service."
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "PROVISIONING",
              "ERROR",
              "DOWN",
              "ACTIVE",
              "DELETING",
              "DELETED"
            ],
            "description": "The IO-D service status."
          },
          "peers": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "internal_ip": {
                      "type": "string",
                      "description": "Internal ip"
                    },
                    "external_ip": {
                      "type": "string",
                      "description": "External ip"
                    },
                    "bgp_status": {
                      "type": "string",
                      "description": "Peer BGP status."
                    }
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "description": "Peer info for GIA site, which contains bgp status"
          },
          "defaultOriginate": {
            "type": "boolean",
            "description": "Whether default IPV4 route (0.0.0.0/0) is advertised to the customer router."
          },
          "defaultOriginateIpv6": {
            "type": "boolean",
            "description": "Whether default IPV6 route is advertised to the customer router."
          }
        }
      },
      "get": {
        "properties": {
          "id": {
            "type": "string"
          },
          "friendlyId": {
            "type": "string"
          },
          "simPoolId": {
            "type": "string"
          },
          "simPoolName": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "apnId": {
            "type": "string"
          },
          "connectivityType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "simQuantity": {
            "type": "string"
          },
          "deliveryAddress": {
            "type": "string"
          },
          "companyAddress": {
            "type": "string"
          },
          "orderType": {
            "type": "string"
          },
          "dnsPreferred": {
            "type": "string"
          },
          "dnsAlternate": {
            "type": "string"
          },
          "useDefaultDNS": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          },
          "deliveryEmail": {
            "type": "string"
          },
          "paymentType": {
            "type": "string"
          },
          "offerType": {
            "type": "string"
          },
          "endUser": {
            "type": "string"
          },
          "skipUserEmail": {
            "type": "boolean"
          },
          "skipAdminEmail": {
            "type": "boolean"
          },
          "skipSupportEmail": {
            "type": "boolean"
          },
          "skipCompliance": {
            "type": "boolean"
          },
          "skipSlack": {
            "type": "boolean"
          },
          "skipInsightSr": {
            "type": "boolean"
          },
          "sourceEnterpriseId": {
            "type": "string"
          },
          "simType": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "purchaseDate": {
            "type": "string"
          },
          "originalPurchaseOrder": {
            "type": "string"
          },
          "purchaseProject": {
            "type": "string"
          },
          "eccn": {
            "type": "string"
          },
          "hkHsCode": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "unitPrice": {
            "type": "string"
          },
          "imsiProfileId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          },
          "updatedById": {
            "type": "string"
          },
          "company_id": {
            "type": "string"
          },
          "deleted_at": {
            "type": "object"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "A date time format."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "A date time format."
          }
        }
      },
      "ErrorResponseSchemaExtended": {
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "status": {
                "type": "integer"
              },
              "statusCode": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "SupportTicketNote": {
        "type": "object",
        "properties": {
          "noteText": {
            "type": "string",
            "description": "The text comment to be added to the ticket.",
            "example": "My connection is experiencing packet loss between 0800 and 0807 every day."
          }
        }
      },
      "DescribeDomainOverviewRequest": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "domains": {
            "type": "array",
            "description": "List of domains to query",
            "items": {
              "type": "string"
            }
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Start time for the report"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "End time for the report"
          },
          "interval": {
            "type": "integer",
            "description": "Time interval in seconds"
          },
          "region": {
            "type": "string",
            "description": "Region to filter the data"
          },
          "queryType": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "pageSize": {
            "type": "integer"
          },
          "pageNumber": {
            "type": "integer"
          }
        },
        "required": [
          "companyIds",
          "domains",
          "startTime",
          "endTime",
          "interval",
          "region",
          "queryType",
          "uid",
          "pageSize",
          "pageNumber"
        ],
        "example": {
          "companyIds": ["company-id-1", "company-id-2"],
          "domains": ["example.com", "example2.com"],
          "startTime": "2023-08-06T02:00:00.000Z",
          "endTime": "2023-09-06T02:00:00.000Z",
          "interval": 21600,
          "region": "eu-west-1",
          "queryType": "",
          "uid": "123456789",
          "pageSize": 10,
          "pageNumber": 0
        }
      },
      "DescribeDomainOverviewResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "headers": {
                "type": "object",
                "properties": {
                  "access-control-allow-origin": {
                    "type": "string",
                    "example": "*"
                  },
                  "date": {
                    "type": "string",
                    "example": "Tue, 05 Sep 2023 03:14:29 GMT"
                  },
                  "content-length": {
                    "type": "string",
                    "example": "89"
                  },
                  "keep-alive": {
                    "type": "string",
                    "example": "timeout=25"
                  },
                  "x-acs-request-id": {
                    "type": "string",
                    "example": "936467EF-0A0A-3886-B5FF-96604273AAFB"
                  },
                  "connection": {
                    "type": "string",
                    "example": "keep-alive"
                  },
                  "content-type": {
                    "type": "string",
                    "example": "application/json;charset=utf-8"
                  },
                  "etag": {
                    "type": "string",
                    "example": "89nygYOIaUphMaOEboWhVVg9"
                  },
                  "access-control-expose-headers": {
                    "type": "string",
                    "example": "*"
                  },
                  "x-acs-trace-id": {
                    "type": "string",
                    "example": "039ea15683691a9a2c0e3c3c1c93da31"
                  }
                }
              },
              "statusCode": {
                "type": "integer",
                "example": 200
              },
              "body": {
                "type": "object",
                "properties": {
                  "maxHttp": {
                    "type": "integer",
                    "example": 18299
                  },
                  "maxHttps": {
                    "type": "integer",
                    "example": 18018
                  },
                  "requestId": {
                    "type": "string",
                    "example": "936467EF-0A0A-3886-B5FF-96604273AAFB"
                  }
                }
              }
            }
          }
        }
      },
      "DescribeDomainStatusCodeListRequest": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "domains": {
            "type": "array",
            "description": "List of domains to query",
            "items": {
              "type": "string"
            }
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Start time for the report"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "End time for the report"
          },
          "interval": {
            "type": "integer",
            "description": "Time interval in seconds"
          },
          "region": {
            "type": "string",
            "description": "Region to filter the data"
          },
          "queryType": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "pageSize": {
            "type": "integer"
          },
          "pageNumber": {
            "type": "integer"
          }
        },
        "required": [
          "companyIds",
          "domains",
          "startTime",
          "endTime",
          "interval",
          "region",
          "queryType",
          "uid",
          "pageSize",
          "pageNumber"
        ],
        "example": {
          "companyIds": ["company-id-1", "company-id-2"],
          "domains": ["example.com", "example2.com"],
          "startTime": "2023-08-06T02:00:00.000Z",
          "endTime": "2023-09-06T02:00:00.000Z",
          "interval": 21600,
          "region": "eu-west-1",
          "queryType": "",
          "uid": "123456789",
          "pageSize": 10,
          "pageNumber": 0
        }
      },
      "DescribeDomainStatusCodeListResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "headers": {
                "type": "object",
                "properties": {
                  "access-control-allow-origin": {
                    "type": "string",
                    "example": "*"
                  },
                  "date": {
                    "type": "string",
                    "example": "Wed, 06 Sep 2023 01:47:08 GMT"
                  },
                  "content-length": {
                    "type": "string",
                    "example": "291"
                  },
                  "keep-alive": {
                    "type": "string",
                    "example": "timeout=25"
                  },
                  "x-acs-request-id": {
                    "type": "string",
                    "example": "A273F8FA-865C-37B5-A867-AF2CB62490ED"
                  },
                  "connection": {
                    "type": "string",
                    "example": "keep-alive"
                  },
                  "content-type": {
                    "type": "string",
                    "example": "application/json;charset=utf-8"
                  },
                  "etag": {
                    "type": "string",
                    "example": "24Pfysgh7RauIVj1mTdrkAQ1"
                  },
                  "access-control-expose-headers": {
                    "type": "string",
                    "example": "*"
                  },
                  "x-acs-trace-id": {
                    "type": "string",
                    "example": "494cb533a18fe5f5d63793ed9b280452"
                  }
                }
              },
              "statusCode": {
                "type": "integer",
                "example": 200
              },
              "body": {
                "type": "object",
                "properties": {
                  "requestId": {
                    "type": "string",
                    "example": "A273F8FA-865C-37B5-A867-AF2CB62490ED"
                  },
                  "statusCodeList": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "index": {
                          "type": "integer",
                          "example": 116
                        },
                        "status200": {
                          "type": "integer",
                          "example": 1984
                        },
                        "status2XX": {
                          "type": "integer",
                          "example": 1984
                        },
                        "status3XX": {
                          "type": "integer",
                          "example": 0
                        },
                        "status403": {
                          "type": "integer",
                          "example": 0
                        },
                        "status404": {
                          "type": "integer",
                          "example": 0
                        },
                        "status405": {
                          "type": "integer",
                          "example": 10459600
                        },
                        "status4XX": {
                          "type": "integer",
                          "example": 10459600
                        },
                        "status501": {
                          "type": "integer",
                          "example": 0
                        },
                        "status502": {
                          "type": "integer",
                          "example": 0
                        },
                        "status503": {
                          "type": "integer",
                          "example": 0
                        },
                        "status504": {
                          "type": "integer",
                          "example": 0
                        },
                        "status5XX": {
                          "type": "integer",
                          "example": 0
                        },
                        "time": {
                          "type": "integer",
                          "example": 1693792800
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DescribeDomainQPSListRequest": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "domains": {
            "type": "array",
            "description": "List of domains to query",
            "items": {
              "type": "string"
            }
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Start time for the report"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "End time for the report"
          },
          "interval": {
            "type": "integer",
            "description": "Time interval in seconds"
          },
          "region": {
            "type": "string",
            "description": "Region to filter the data"
          },
          "queryType": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        },
        "required": [
          "companyIds",
          "domains",
          "startTime",
          "endTime",
          "interval",
          "region",
          "queryType",
          "uid"
        ],
        "example": {
          "companyIds": ["company-id-1", "company-id-2"],
          "domains": ["example.com", "example2.com"],
          "startTime": "2023-08-06T02:00:00.000Z",
          "endTime": "2023-09-06T02:00:00.000Z",
          "interval": 21600,
          "region": "eu-west-1",
          "queryType": "",
          "uid": "123456789"
        }
      },
      "DescribeDomainQPSListResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "data": {
            "type": "object",
            "properties": {
              "headers": {
                "type": "object",
                "properties": {
                  "access-control-allow-origin": {
                    "type": "string",
                    "description": "Access control header"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date header"
                  },
                  "content-length": {
                    "type": "string",
                    "description": "Content length header"
                  },
                  "keep-alive": {
                    "type": "string",
                    "description": "Keep-alive header"
                  },
                  "x-acs-request-id": {
                    "type": "string",
                    "description": "Request ID header"
                  },
                  "connection": {
                    "type": "string",
                    "description": "Connection header"
                  },
                  "content-type": {
                    "type": "string",
                    "description": "Content type header"
                  },
                  "etag": {
                    "type": "string",
                    "description": "Etag header"
                  },
                  "access-control-expose-headers": {
                    "type": "string",
                    "description": "Access control expose header"
                  },
                  "x-acs-trace-id": {
                    "type": "string",
                    "description": "ACS Trace ID header"
                  }
                }
              },
              "statusCode": {
                "type": "integer",
                "description": "Status code"
              },
              "body": {
                "type": "object",
                "properties": {
                  "domainQPSList": {
                    "type": "array",
                    "description": "List of domain QPS information",
                    "items": {
                      "type": "object",
                      "properties": {
                        "attackQps": {
                          "type": "integer",
                          "description": "Attack QPS"
                        },
                        "cacheHits": {
                          "type": "integer",
                          "description": "Cache Hits"
                        },
                        "index": {
                          "type": "integer",
                          "description": "Index"
                        },
                        "maxAttackQps": {
                          "type": "integer",
                          "description": "Maximum Attack QPS"
                        },
                        "maxNormalQps": {
                          "type": "integer",
                          "description": "Maximum Normal QPS"
                        },
                        "maxQps": {
                          "type": "integer",
                          "description": "Maximum QPS"
                        },
                        "time": {
                          "type": "integer",
                          "description": "Time"
                        },
                        "totalCount": {
                          "type": "integer",
                          "description": "Total Count"
                        },
                        "totalQps": {
                          "type": "integer",
                          "description": "Total QPS"
                        }
                      }
                    }
                  },
                  "requestId": {
                    "type": "string",
                    "description": "Request ID"
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": 200,
          "data": {
            "headers": {
              "access-control-allow-origin": "*",
              "date": "Thu, 07 Sep 2023 03:13:42 GMT",
              "content-length": "232",
              "keep-alive": "timeout=25",
              "x-acs-request-id": "CF412C6C-A488-3B43-B765-8B6F6E8EF9F1",
              "connection": "keep-alive",
              "content-type": "application/json;charset=utf-8",
              "etag": "2YhHJI3NlXePWxNOV/gmVTQ2",
              "access-control-expose-headers": "*",
              "x-acs-trace-id": "fcbc2e111cf3069d7a4da6bd2211a74f"
            },
            "statusCode": 200,
            "body": {
              "domainQPSList": [
                {
                  "attackQps": 485,
                  "cacheHits": 0,
                  "index": 116,
                  "maxAttackQps": 36316,
                  "maxNormalQps": 0,
                  "maxQps": 36316,
                  "time": 1693792800,
                  "totalCount": 10461584,
                  "totalQps": 485
                }
              ],
              "requestId": "CF412C6C-A488-3B43-B765-8B6F6E8EF9F1"
            }
          }
        }
      },
      "DescribeDomainAttackEventsRequest": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "domains": {
            "type": "array",
            "description": "List of domains to query",
            "items": {
              "type": "string"
            }
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Start time for the report"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "End time for the report"
          },
          "interval": {
            "type": "integer",
            "description": "Time interval in seconds"
          },
          "region": {
            "type": "string",
            "description": "Region to filter the data"
          },
          "queryType": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "pageSize": {
            "type": "integer"
          },
          "pageNumber": {
            "type": "integer"
          }
        },
        "required": [
          "companyIds",
          "domains",
          "startTime",
          "endTime",
          "interval",
          "region",
          "queryType",
          "uid",
          "pageSize",
          "pageNumber"
        ],
        "example": {
          "companyIds": ["company-id-1", "company-id-2"],
          "domains": ["example.com", "example2.com"],
          "startTime": "2023-08-06T02:00:00.000Z",
          "endTime": "2023-09-06T02:00:00.000Z",
          "interval": 21600,
          "region": "eu-west-1",
          "queryType": "",
          "uid": "123456789",
          "pageSize": 10,
          "pageNumber": 0
        }
      },
      "DescribeDomainAttackEventsResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "headers": {
                "type": "object",
                "properties": {
                  "access-control-allow-origin": {
                    "type": "string",
                    "example": "*"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "Fri, 08 Sep 2023 02:26:45 GMT"
                  },
                  "content-length": {
                    "type": "string",
                    "example": "188"
                  },
                  "keep-alive": {
                    "type": "string",
                    "example": "timeout=25"
                  },
                  "x-acs-request-id": {
                    "type": "string",
                    "example": "B2DCF07F-4C0B-3D51-91D6-79B69167CDED"
                  },
                  "connection": {
                    "type": "string",
                    "example": "keep-alive"
                  },
                  "content-type": {
                    "type": "string",
                    "example": "application/json;charset=utf-8"
                  },
                  "etag": {
                    "type": "string",
                    "example": "1Yg5UoqUNzIrsivvGvZcn8A8"
                  },
                  "access-control-expose-headers": {
                    "type": "string",
                    "example": "*"
                  },
                  "x-acs-trace-id": {
                    "type": "string",
                    "example": "33d2575d6461143e945aad1163d16027"
                  }
                }
              },
              "statusCode": {
                "type": "integer",
                "example": 200
              },
              "body": {
                "type": "object",
                "properties": {
                  "domainAttackEvents": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "domain": {
                          "type": "string",
                          "example": "mooncake-20230904-1515.io"
                        },
                        "endTime": {
                          "type": "integer",
                          "example": 1693814370
                        },
                        "maxQps": {
                          "type": "integer",
                          "example": 37119
                        },
                        "startTime": {
                          "type": "integer",
                          "example": 1693814040
                        }
                      }
                    }
                  },
                  "requestId": {
                    "type": "string",
                    "example": "B2DCF07F-4C0B-3D51-91D6-79B69167CDED"
                  },
                  "totalCount": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      },
      "multiple": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "apnId": {
            "type": "string"
          },
          "subnet": {
            "type": "string"
          },
          "firewall": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "primaryDNS": {
            "type": "string"
          },
          "secondaryDNS": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "defaultPrimaryDNS": {
            "type": "string"
          },
          "defaultSecondaryDNS": {
            "type": "string"
          },
          "useDefaultDNS": {
            "type": "boolean"
          },
          "customFirewallEnabled": {
            "type": "boolean"
          },
          "customFirewallPolicies": {
            "type": "string"
          },
          "company_id": {
            "type": "string"
          },
          "apn_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "A date time format."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "A date time format."
          }
        }
      },
      "single": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "apnId": {
            "type": "string"
          },
          "subnet": {
            "type": "string"
          },
          "firewall": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "primaryDNS": {
            "type": "string"
          },
          "secondaryDNS": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "defaultPrimaryDNS": {
            "type": "string"
          },
          "defaultSecondaryDNS": {
            "type": "string"
          },
          "useDefaultDNS": {
            "type": "boolean"
          },
          "customFirewallEnabled": {
            "type": "boolean"
          },
          "customFirewallPolicies": {
            "type": "string"
          },
          "company_id": {
            "type": "string"
          },
          "apn_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "A date time format."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "A date time format."
          }
        }
      },
      "getAll": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "iotSimPoolId": {
            "type": "string"
          },
          "iotOrderId": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "iccid": {
            "type": "string"
          },
          "imsi": {
            "type": "string"
          },
          "msisdn": {
            "type": "string"
          },
          "detectedImei": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "simTransferId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "A date time format."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "A date time format."
          },
          "simProvider": {
            "type": "string"
          },
          "company_id": {
            "type": "string"
          },
          "iot_order_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "A date time format."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "A date time format."
          },
          "iot_sim_pool_id": {
            "type": "string"
          }
        }
      },
      "not-valid": {
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "status": {
                "type": "integer"
              },
              "statusCode": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "GetSignedCompanyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "country": {
            "type": "string"
          },
          "insightId": {
            "type": "integer"
          },
          "companyName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "country": "US",
          "insightId": 987654,
          "companyName": "Tech Innovators Inc.",
          "address": "1234 Silicon Valley Blvd, San Francisco, CA 94107",
          "deleted_at": "2024-08-30T16:45:30Z",
          "created_at": "2023-03-30T16:45:30Z",
          "updated_at": "2024-07-30T16:45:30Z"
        }
      },
      "GeographicAddress": {
        "description": "Structured textual way of describing how to find a property in an urban area (country properties are often defined differently).\nNote: Address corresponds to SID UrbanPropertyAddress",
        "discriminator": {
          "mapping": {
            "FieldedAddress": "#/components/schemas/FieldedAddress",
            "FormattedAddress": "#/components/schemas/FormattedAddress",
            "MEFGeographicPoint": "#/components/schemas/MEFGeographicPoint",
            "GeographicAddressLabel": "#/components/schemas/GeographicAddressLabel"
          },
          "propertyName": "@type"
        },
        "properties": {
          "hasPublicSite": {
            "description": "This attribute specifies if that Address contains Service Sites that are public such as Meet-Me-Rooms at an interconnect location or a shared telecom room in the basement of a multi-tenant building",
            "readOnly": true,
            "type": "boolean"
          },
          "@type": {
            "description": "This field is used as discriminator. The value is the name of one of the types that inherit from it using 'allOf', i.e. one of FieldedAddress, FormattedAddress, GeographicAddressLabel, MEFGeographicPoint. Moreover, it might discriminate for an additional related place as defined in '@schemaLocation'.\n",
            "type": "string"
          },
          "allowsNewSite": {
            "description": "This attribute specifies if a Buyer must use one of the known existing Service Sites at this location for any Products delivered to this Address. For example, if a particular building owner mandated that all interconnects be done in a shared Public Meet-Me-Room, this attribute would be set to False for that Address.",
            "readOnly": true,
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier of the place",
            "readOnly": true,
            "type": "string"
          },
          "href": {
            "description": "Unique reference of the place",
            "readOnly": true,
            "type": "string"
          },
          "@schemaLocation": {
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships. May be used to define additional GeographicAddress types. Usage of this attribute must be agreed upon between Buyer and Seller.",
            "format": "uri",
            "type": "string"
          },
          "associatedGeographicAddress": {
            "$ref": "#/components/schemas/FieldedAddress"
          }
        },
        "required": ["@type"],
        "type": "object"
      },
      "MEFSubUnit": {
        "description": "Allows for sub unit identification",
        "properties": {
          "subUnitNumber": {
            "description": "The discriminator used for the subunit, often just a simple number but may also be a range.",
            "type": "string"
          },
          "subUnitType": {
            "description": "The type of subunit e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
            "type": "string"
          }
        },
        "required": ["subUnitNumber", "subUnitType"],
        "type": "object"
      },
      "GeographicSubAddress": {
        "description": "Additional fields used to specify an address, as detailed as possible.",
        "properties": {
          "buildingName": {
            "description": "Allows for identification of places that require building name  as part of addressing information\n",
            "type": "string"
          },
          "subUnit": {
            "description": "Representation of a MEFSubUnit It is used for describing subunit within a subAddress e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.",
            "items": {
              "$ref": "#/components/schemas/MEFSubUnit"
            },
            "type": "array"
          },
          "levelType": {
            "description": "Describes level types within a building",
            "type": "string"
          },
          "levelNumber": {
            "description": "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2",
            "type": "string"
          },
          "privateStreetNumber": {
            "description": "Private streets numbers internal to a private street",
            "type": "string"
          },
          "privateStreetName": {
            "description": "Private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FieldedAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeographicAddress"
          },
          {
            "properties": {
              "country": {
                "description": "The country that the address is in",
                "type": "string"
              },
              "streetType": {
                "description": "The type of street (e.g., alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf)",
                "type": "string"
              },
              "postcodeExtension": {
                "description": "An extension of a postal code. E.g. the part following the dash in a US urban property address",
                "type": "string"
              },
              "city": {
                "description": "The city that the address is in",
                "type": "string"
              },
              "streetNr": {
                "description": "Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses. MEF 79 defines it as required however as in certain countries it is not used we make it optional in API.",
                "type": "string"
              },
              "locality": {
                "description": "The locality that the address is in",
                "type": "string"
              },
              "postcode": {
                "description": "A descriptor for a postal delivery area used to speed and simplify the delivery of mail (also known as zip code) MEF 79 defines it as required however as in certain countries it is not used we make it optional in API.",
                "type": "string"
              },
              "streetNrLast": {
                "description": "Last number in a range of street numbers allocated to a property",
                "type": "string"
              },
              "streetNrSuffix": {
                "description": "The first street number suffix",
                "type": "string"
              },
              "streetName": {
                "description": "Name of the street or other street type",
                "type": "string"
              },
              "stateOrProvince": {
                "description": "The State or Province that the address is in",
                "type": "string"
              },
              "streetNrLastSuffix": {
                "description": "Last street number suffix for a ranged address",
                "type": "string"
              },
              "geographicSubAddress": {
                "$ref": "#/components/schemas/GeographicSubAddress"
              },
              "streetSuffix": {
                "description": "A modifier denoting a relative direction",
                "type": "string"
              }
            },
            "required": ["city", "country", "streetName"],
            "type": "object"
          }
        ],
        "description": "A type of Address that has a discrete field and value for each type of boundary or identifier down to the lowest level of detail. For example \"street number\" is one field, \"street name\" is another field, etc. Reference: MEF 79 (Sn 8.9.2)"
      },
      "FormattedAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeographicAddress"
          },
          {
            "properties": {
              "country": {
                "description": "The country that the address is in",
                "type": "string"
              },
              "postcodeExtension": {
                "description": "An extension of a postal code. E.g. the part following the dash in a US urban property address",
                "type": "string"
              },
              "stateOrProvince": {
                "description": "The State or Province that the address is in",
                "type": "string"
              },
              "city": {
                "description": "The city that the address is in",
                "type": "string"
              },
              "addrLine2": {
                "description": "The second address line in a formatted address",
                "type": "string"
              },
              "addrLine1": {
                "description": "The first address line in a formatted address",
                "type": "string"
              },
              "locality": {
                "description": "An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi-rural in nature",
                "type": "string"
              },
              "postcode": {
                "description": "A descriptor for a postal delivery area used to speed and simplify the delivery of mail (also known as ZIP code)",
                "type": "string"
              }
            },
            "required": ["addrLine1", "city", "country"],
            "type": "object"
          }
        ],
        "description": "A type of Address that has discrete fields for each type of boundary or identifier with the exception of street and more specific location details, which are combined into a maximum of two strings based on local postal addressing conventions.  Reference: MEF 79 (Sn 8.9.3)"
      },
      "MEFGeographicPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeographicAddress"
          },
          {
            "properties": {
              "spatialRef": {
                "description": "The spatial reference system used to determine the coordinates. The system used and the value of this field are to be agreed during the onboarding process.",
                "type": "string"
              },
              "x": {
                "description": "The latitude expressed in the format specified by the `spacialRef`",
                "type": "string"
              },
              "y": {
                "description": "The longitude expressed in the format specified by the `spacialRef`",
                "type": "string"
              },
              "z": {
                "description": "The elevation expressed in the format specified by the `spacialRef`",
                "type": "string"
              }
            },
            "required": ["spatialRef", "x", "y"],
            "type": "object"
          }
        ],
        "description": "A MEFGeographicPoint defines a geographic point through coordinates. Reference: MEF 79 (Sn 8.9.5), MEF 79.0.2 (Sn 8.9.5)\n"
      },
      "GeographicAddressLabel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeographicAddress"
          },
          {
            "properties": {
              "externalReferenceId": {
                "description": "The unique reference to an Address as provided by the Administrative Authority.",
                "type": "string"
              },
              "externalReferenceType": {
                "description": "The organization or standard from the organization that administers this Geographic Address Label ensuring it is unique within the Administrative Authority. The value(s) to be used are to be agreed during the onboarding. For North American providers this would normally be CLLI (Common Language Location Identifier) code.",
                "type": "string"
              }
            },
            "required": ["externalReferenceId", "externalReferenceType"],
            "type": "object"
          }
        ],
        "description": "A unique identifier controlled by a generally accepted independent administrative authority that specifies a fixed geographical location. \nReference: MEF 79 (Sn 8.9.4)"
      },
      "GeographicAddressValidation_Create": {
        "description": "This resource is used to manage address validation request.\n\nSkipped properties: alternateGeographicAddress, bestMatchGeographicAddress, validationResult.",
        "properties": {
          "provideAlternative": {
            "description": "Indicator provided by the requester to specify if alternate addresses must be provided in case of partial or fail result. MEF: The attribute is kept for TMF API compliance. MEF requires this attribute always to be set to 'true'. Alternatives should be provided regardless of whether best match was found. The Seller is allowed not to implement the support for 'false'\n",
            "type": "boolean"
          },
          "submittedGeographicAddress": {
            "$ref": "#/components/schemas/GeographicAddress"
          }
        },
        "required": ["provideAlternative", "submittedGeographicAddress"],
        "type": "object"
      },
      "MEFValidationResultType": {
        "description": "Result of the address validation:\n- success - best match found,\n- partial - no best match but alternatives available,\n- fail - neither best match nor alternatives provided\n",
        "enum": ["success", "partial", "fail"],
        "type": "string"
      },
      "GeographicAddressValidation": {
        "description": "This resource is used to manage address validation response.",
        "properties": {
          "validationResult": {
            "$ref": "#/components/schemas/MEFValidationResultType"
          },
          "alternateGeographicAddress": {
            "items": {
              "$ref": "#/components/schemas/GeographicAddress"
            },
            "type": "array",
            "description": "An array of zero or more Addresses known to the Seller that are\nconsidered by the Seller to match the submittedGeographicAddress.\nNot including the bestMatchAddress. MEF: Alternatives should be\nprovided regardless of whether best match was found.\n"
          },
          "provideAlternative": {
            "description": "Indicator provided by the requester to specify if alternate addresses must be provided in case of partial or fail result. MEF: The attribute is kept for TMF API compliance. MEF requires this attribute always to be set to 'true'. Alternatives should be provided regardless of whether best match was found. The Seller is allowed not to implement the support for 'false'\n",
            "type": "boolean"
          },
          "submittedGeographicAddress": {
            "$ref": "#/components/schemas/GeographicAddress"
          },
          "bestMatchGeographicAddress": {
            "$ref": "#/components/schemas/GeographicAddress"
          }
        },
        "required": ["provideAlternative", "submittedGeographicAddress"],
        "type": "object"
      },
      "Error": {
        "description": "Standard Class used to describe API response error. Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.\n",
        "properties": {
          "reason": {
            "description": "Text that explains the reason for error. This can be shown to a client user.",
            "maxLength": 255,
            "type": "string"
          },
          "message": {
            "description": "Text that provides mode details and corrective actions related to the error. This can be shown to a client user.",
            "type": "string"
          },
          "referenceError": {
            "description": "URL pointing to documentation describing the error",
            "format": "uri",
            "type": "string"
          }
        },
        "required": ["reason"],
        "type": "object"
      },
      "Error400Code": {
        "type": "string",
        "description": "One of the following error codes:\n- missingQueryParameter: The URI is missing a required query-string parameter\n- missingQueryValue: The URI is missing a required query-string parameter value\n- invalidQuery: The query section of the URI is invalid.\n- invalidBody: The request has an invalid body",
        "enum": [
          "missingQueryParameter",
          "missingQueryValue",
          "invalidQuery",
          "invalidBody"
        ]
      },
      "Error400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "properties": {
              "code": {
                "$ref": "#/components/schemas/Error400Code"
              }
            },
            "required": ["code"],
            "type": "object"
          }
        ],
        "description": "Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)"
      },
      "Error401Code": {
        "type": "string",
        "description": "One of the following error codes:\n- missingCredentials: No credentials provided.\n- invalidCredentials: Provided credentials are invalid or expired",
        "enum": ["missingCredentials", "invalidCredentials"]
      },
      "Error401": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "$ref": "#/components/schemas/Error401Code"
              }
            },
            "required": ["code"]
          }
        ],
        "description": "Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)"
      },
      "Error403Code": {
        "type": "string",
        "description": "This code indicates that the server understood\nthe request but refuses to authorize it because\nof one of the following error codes:\n- accessDenied: Access denied\n- forbiddenRequester: Forbidden requester\n- tooManyUsers: Too many users",
        "enum": ["accessDenied", "forbiddenRequester", "tooManyUsers"]
      },
      "Error403": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "properties": {
              "code": {
                "$ref": "#/components/schemas/Error403Code"
              }
            },
            "required": ["code"],
            "type": "object"
          }
        ],
        "description": "Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)"
      },
      "Error422Code": {
        "type": "string",
        "description": "One of the following error codes:\n  - missingProperty: The property the Seller has expected is not present in the payload\n  - invalidValue: The property has an incorrect value\n  - invalidFormat: The property value does not comply with the expected value format\n  - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n  - unexpectedProperty: Additional property, not expected by the Seller has been provided\n  - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n  - otherIssue: Other problem was identified (detailed information provided in a reason)\n",
        "enum": [
          "missingProperty",
          "invalidValue",
          "invalidFormat",
          "referenceNotFound",
          "unexpectedProperty",
          "tooManyRecords",
          "otherIssue"
        ]
      },
      "Error422": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "$ref": "#/components/schemas/Error422Code"
              },
              "propertyPath": {
                "type": "string",
                "description": "A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.\nDefined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).\n"
              }
            },
            "required": ["code"]
          }
        ],
        "description": "Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)"
      },
      "Error500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "The following error code:\n- internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.",
                "enum": ["internalError"]
              }
            },
            "required": ["code"]
          }
        ],
        "description": "Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)"
      },
      "Error404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "properties": {
              "code": {
                "description": "The following error code:\n- notFound: A current representation for the target resource not found",
                "enum": ["notFound"],
                "type": "string"
              }
            },
            "required": ["code"],
            "type": "object"
          }
        ],
        "description": "Resource for the requested path not found. (https://tools.ietf.org/html/rfc7231#section-6.5.4)"
      },
      "MEFBuyerSellerType": {
        "type": "string",
        "description": "Indicates if the note is from Buyer or Seller.",
        "enum": ["buyer", "seller"]
      },
      "Note": {
        "type": "object",
        "description": "Extra information about a given entity. Only useful in processes involving human interaction. Not applicable for the automated process.",
        "properties": {
          "author": {
            "type": "string",
            "description": "Author of the note"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date the Note was created"
          },
          "id": {
            "type": "string",
            "description": "Identifier of the note within its containing entity (may or may not be globally unique, depending on provider implementation)"
          },
          "source": {
            "$ref": "#/components/schemas/MEFBuyerSellerType"
          },
          "text": {
            "type": "string",
            "description": "Text of the note"
          }
        },
        "required": ["author", "date", "id", "source", "text"]
      },
      "RelatedContactInformation": {
        "type": "object",
        "description": "Contact information of an individual or organization playing a role for\nthis Order Item. The rule for mapping a represented attribute value to a\n`role` is to use the _lowerCamelCase_ pattern e.g. \n- Buyer Order Item Contact: `role=buyerOrderItemContact` \n- Buyer Implementation Contact: `role=buyerImplementationContact` \n- Buyer Technical Contact: `role=buyerTechnicalContact`\n",
        "properties": {
          "emailAddress": {
            "type": "string",
            "description": "Email address"
          },
          "name": {
            "type": "string",
            "description": "Name of the contact"
          },
          "number": {
            "type": "string",
            "description": "Phone number"
          },
          "numberExtension": {
            "type": "string",
            "description": "Phone number extension"
          },
          "organization": {
            "type": "string",
            "description": "The organization or company that the contact belongs to"
          },
          "postalAddress": {
            "$ref": "#/components/schemas/FieldedAddress"
          },
          "role": {
            "type": "string",
            "description": "A role the party plays in a given context."
          }
        },
        "required": ["emailAddress", "name", "number", "role"]
      },
      "ProductOrder_Common": {
        "type": "object",
        "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa,",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "An identifier for this order within the Buyer's enterprise."
          },
          "note": {
            "type": "array",
            "description": "Free form text to clarify or explain the Product Order. Only new notes can be entered. The Buyer and Seller cannot modify an existing Note. The Buyer creates a Note when creating the Product Order or when updating it. The Seller may add notes at any time.\n",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "projectId": {
            "type": "string",
            "description": "An identifier that is used to group Product Orders that is important to the Buyer. A projectId can be used to relate multiple Product Orders together."
          },
          "relatedContactInformation": {
            "type": "array",
            "description": "Contact information of an individual or organization playing a role in this context.\n(e.g. Product Order Contact: role=productOrderContact;\nSeller Contact: role=sellerContact)\nProviding the Product Order Contact in the request is mandatory.",
            "items": {
              "$ref": "#/components/schemas/RelatedContactInformation"
            },
            "minItems": 1
          }
        },
        "required": ["relatedContactInformation"]
      },
      "MEFProductActionType": {
        "type": "string",
        "description": "Action to be performed on the Product that the Order Item refers to.\n\n| ProductActionType | MEF 57.2   |\n| ----------------- | ---------- |\n| add               | INSTALL    |\n| modify            | CHANGE     |\n| delete            | DISCONNECT |\n",
        "enum": ["add", "modify", "delete"]
      },
      "MEFBillingAccountRef": {
        "type": "object",
        "description": "A reference to the Buyer's Billing Account",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifies the buyer's billing account to which the recurring and non-recurring charges for this order or order item will be billed. Required if the Buyer has more than one Billing Account with the Seller and for all new Product Orders."
          }
        },
        "required": ["id"]
      },
      "TimeUnit": {
        "type": "string",
        "description": "Represents a unit of time.\n",
        "enum": [
          "calendarMonths",
          "calendarDays",
          "calendarHours",
          "calendarMinutes",
          "businessDays",
          "businessHours",
          "businessMinutes"
        ]
      },
      "Duration-2": {
        "type": "object",
        "description": "A Duration in a given unit of time e.g. 3 hours, or 5 days.",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Duration (number of seconds, minutes, hours, etc.)"
          },
          "units": {
            "$ref": "#/components/schemas/TimeUnit"
          }
        },
        "required": ["amount", "units"]
      },
      "MEFOrderItemCoordinationDependencyType": {
        "type": "string",
        "description": "Possible values of the Order Item Coordination Dependency\n\n| OrderItemCoordinationDependencyType | MEF 57.2         | Description                                                                                        |\n|-------------------------------------|------------------|----------------------------------------------------------------------------------------------------|\n| startToStart                        | START_TO_START   | Work on the Specified Order Item can only be started after the Coordinated Order Items are started |\n| startToFinish                       | START_TO_FINISH  | The Coordinated Order Items must complete before work on the Specified Order Item begins           |\n| finishToStart                       | FINISH_TO_START  | Work on the Related Order Items begins after the completion of the Specified Order Item            |\n| finishToFinish                      | FINISH_TO_FINISH | Work on the Related Order Items completes at the same time as the Specified Order Item             |\n",
        "enum": [
          "startToStart",
          "startToFinish",
          "finishToStart",
          "finishToFinish"
        ]
      },
      "MEFOrderItemCoordinatedAction": {
        "type": "object",
        "description": "The interval after the completion of one or more related Order Items that this Order Item can be started or completed",
        "properties": {
          "coordinatedActionDelay": {
            "$ref": "#/components/schemas/Duration-2"
          },
          "coordinationDependency": {
            "$ref": "#/components/schemas/MEFOrderItemCoordinationDependencyType"
          },
          "itemId": {
            "type": "string",
            "description": "Specifies Order Item that is to be coordinated with this Order Item."
          }
        },
        "required": [
          "coordinatedActionDelay",
          "coordinationDependency",
          "itemId"
        ]
      },
      "RelatedPlaceRefOrValue": {
        "type": "object",
        "description": "Place defines the places where the product order must be done.",
        "discriminator": {
          "mapping": {
            "FieldedAddress": "#/components/schemas/FieldedAddress",
            "FormattedAddress": "#/components/schemas/FormattedAddress",
            "GeographicAddressLabel": "#/components/schemas/GeographicAddressLabel",
            "GeographicAddressRef": "#/components/schemas/GeographicAddressRef",
            "GeographicSiteRef": "#/components/schemas/GeographicSiteRef",
            "MEFGeographicPoint": "#/components/schemas/MEFGeographicPoint"
          },
          "propertyName": "@type"
        },
        "properties": {
          "@schemaLocation": {
            "type": "string",
            "format": "uri",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships. May be used to define additional related place types. Usage of this attribute must be agreed upon between Buyer and Seller."
          },
          "@type": {
            "type": "string",
            "description": "This field is used as a discriminator and is used between different place representations. This type might discriminate for additional related place as defined in '@schemaLocation'.\n",
            "enum": [
              "FieldedAddress",
              "FormattedAddress",
              "GeographicAddressLabel",
              "GeographicAddressRef",
              "GeographicSiteRef",
              "MEFGeographicPoint"
            ]
          },
          "role": {
            "type": "string",
            "description": "Role of this place"
          }
        },
        "required": ["@type", "role"]
      },
      "GeographicAddressRef": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RelatedPlaceRefOrValue"
          },
          {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "description": "Hyperlink to the referenced GeographicAddress. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n"
              },
              "id": {
                "type": "string",
                "description": "Identifier of the referenced Geographic Address. This identifier is assigned during a successful address validation request (Geographic Address Validation API)"
              }
            },
            "required": ["id"]
          }
        ],
        "description": "A reference to a Geographic Address resource available through Address Validation API.\n"
      },
      "GeographicSiteRef": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RelatedPlaceRefOrValue"
          },
          {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "description": "Hyperlink to the referenced GeographicSite. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n"
              },
              "id": {
                "type": "string",
                "description": "Identifier of the referenced Geographic Site."
              }
            },
            "required": ["id"]
          }
        ],
        "description": "A reference to a Geographic Site resource available through Service Site API\n"
      },
      "MEFProductConfiguration": {
        "type": "object",
        "description": "MEFProductConfiguration is used as an extension point for MEF specific product/service payload.  The `@type` attribute is used as a discriminator",
        "discriminator": {
          "propertyName": "@type"
        },
        "properties": {
          "@type": {
            "type": "string",
            "description": "The name of the type, defined in the JSON schema specified  above, for the product that is the subject of the Product Order Request. The named type must be a subclass of MEFProductConfiguration."
          }
        },
        "required": ["@type"]
      },
      "ProductOfferingRef": {
        "type": "object",
        "description": "A reference to a Product Offering offered by the Seller to the Buyer.  A Product Offering contains the commercial and technical details of a Product sold by a particular Seller. A Product Offering defines all of the commercial terms and, through association with a particular Product Specification, defines all the technical attributes and behaviors of the Product. A Product Offering may constrain the allowable set of configurable technical attributes and/or behaviors specified in the associated Product Specification.",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink to a Product Offering in Sellers catalog. In case Seller is not providing a catalog capabilities this field is not used.  The catalog API definition is provided by the Seller to the Buyer during onboarding Hyperlink MAY be used by the Seller in responses   Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n"
          },
          "id": {
            "type": "string",
            "description": "Identifier of a Product Offering. It is assigned by the Seller. The Buyer and the Seller exchange information about offerings' ids during the onboarding process."
          }
        },
        "required": ["id"]
      },
      "ProductRelationship": {
        "type": "object",
        "description": "A relationship to an existing Product. The requirements for usage for given Product are described in the Product Specification.",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink to the product in Seller's inventory that is referenced Hyperlink MAY be used when providing a response by the Seller Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request"
          },
          "id": {
            "type": "string",
            "description": "unique identifier of the related Product"
          },
          "relationshipType": {
            "type": "string",
            "description": "Specifies the type (nature) of the relationship to the related Product. The nature of required relationships varies for Products of different types. For example, a UNI or ENNI Product may not have any relationships, but an Access E-Line may have two mandatory relationships (related to the UNI on one end and the ENNI on the other). More complex Products such as multipoint IP or Firewall Products may have more complex relationships. As a result, the allowed and mandatory `relationshipType` values are defined in the Product Specification.\n"
          }
        },
        "required": ["id", "relationshipType"]
      },
      "MEFProductRefOrValueOrder": {
        "type": "object",
        "description": "Used by the Buyer to point to existing and/or describe the desired shape of the product. In case of `add` action - only `productConfiguration` MUST be specified. For `modify` action - both `id` and `productConfiguration` MUST be provided to point which product instance to update and to what state. In `delete` only the `id` must be provided.",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink to the referenced Product. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request."
          },
          "id": {
            "type": "string",
            "description": "The unique identifier of an in-service Product that is the ordering subject. This field MUST be populated if an item `action` is either `modify` or `delete`. This field MUST NOT be populated if an item `action` is `add`."
          },
          "place": {
            "type": "array",
            "description": "The relationships between this Product Order Item and one or more Places as defined in the Product Specification.",
            "items": {
              "$ref": "#/components/schemas/RelatedPlaceRefOrValue"
            }
          },
          "productConfiguration": {
            "$ref": "#/components/schemas/MEFProductConfiguration"
          },
          "productOffering": {
            "$ref": "#/components/schemas/ProductOfferingRef"
          },
          "productRelationship": {
            "type": "array",
            "description": "A list of references to existing products that are related to the ordered Product.",
            "items": {
              "$ref": "#/components/schemas/ProductRelationship"
            }
          }
        }
      },
      "ProductOfferingQualificationItemRef": {
        "type": "object",
        "description": "It's a productOfferingQualification item that has been executed previously.",
        "properties": {
          "alternateProductOfferingProposalId": {
            "type": "string",
            "description": "A unique identifier for this Alternate Product Proposal assigned by the Seller."
          },
          "id": {
            "type": "string",
            "description": "Identifier of an item of a product offering qualification"
          },
          "productOfferingQualificationHref": {
            "type": "string",
            "description": "Reference to a related Product Offering Qualification resource."
          },
          "productOfferingQualificationId": {
            "type": "string",
            "description": "Unique identifier of related Product Offering Qualification resource."
          }
        },
        "required": ["id", "productOfferingQualificationId"]
      },
      "OrderItemRelationship": {
        "type": "object",
        "description": "The relationship between Product Order Items in the Product Order.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the related Order Item (must be in the same Order)."
          },
          "relationshipType": {
            "type": "string",
            "description": "Specifies the nature of the relationship to the related Product Order Item. A string that is one of the relationship types specified in the Product Specification."
          }
        },
        "required": ["id", "relationshipType"]
      },
      "MEFQuoteItemRef": {
        "type": "object",
        "description": "It's a Quote item that has been executed previously.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of a Quote Item"
          },
          "quoteHref": {
            "type": "string",
            "description": "Reference of the related Quote."
          },
          "quoteId": {
            "type": "string",
            "description": "Unique identifier of a Quote."
          }
        },
        "required": ["id", "quoteId"]
      },
      "MEFEndOfTermAction": {
        "type": "string",
        "description": "The action the Seller will take once the term expires. \nRoll indicates that the Product's contract will continue on a rolling basis for the duration of the Roll Interval at the end of the Term.  \nAuto-disconnect indicates that the Product will be disconnected at the end of the Term. \nAuto-renew indicates that the Product's contract will be automatically renewed for the Term Duration at the end of the Term.",
        "enum": ["roll", "autoDisconnect", "autoRenew"]
      },
      "MEFItemTerm": {
        "type": "object",
        "description": "The term of the Item",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the term"
          },
          "duration": {
            "$ref": "#/components/schemas/Duration-2"
          },
          "endOfTermAction": {
            "$ref": "#/components/schemas/MEFEndOfTermAction"
          },
          "name": {
            "type": "string",
            "description": "Name of the term"
          },
          "rollInterval": {
            "$ref": "#/components/schemas/Duration-2"
          }
        },
        "required": ["duration", "endOfTermAction", "name"]
      },
      "MEFProductOrderItem_Common": {
        "type": "object",
        "description": "An identified part of the order. A product order is decomposed into one or more order items. This type holds the attributes common to request and response representation of the Product Order Item.\n",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/MEFProductActionType"
          },
          "agreementName": {
            "type": "string",
            "description": "The name of the Agreement which is referenced for the Product Order Item."
          },
          "billingAccount": {
            "$ref": "#/components/schemas/MEFBillingAccountRef"
          },
          "coordinatedAction": {
            "type": "array",
            "description": "The interval after the completion of one or more related Product Order Items that this Product Order Item can be started or completed",
            "items": {
              "$ref": "#/components/schemas/MEFOrderItemCoordinatedAction"
            }
          },
          "endCustomerName": {
            "type": "string",
            "description": "The name of the End Customer, either a business name or an individual name depending on the end customer."
          },
          "expediteIndicator": {
            "type": "boolean",
            "default": false,
            "description": "Indicates that expedited treatment is requested. Set by the Buyer. If this is set to TRUE, the Buyer sets the Requested Completion Date to the expedited date. See MEF 57.2 section 7.3 for a description of the interaction between the Buyer and the Seller."
          },
          "id": {
            "type": "string",
            "description": "A Buyer provided identifier to identify Product Order Items and to be able to relate them to one another. This is set by the Buyer and is unique within the Product Order. Examples of Reference Identifier could be 1, 2, 3 or A, B, C. The Reference Identifier can be reused in multiple Product Orders to identify a Product Order Item within that Product Order.\n"
          },
          "note": {
            "type": "array",
            "description": "Free form text to clarify or explain the Product Order Item. Only new notes can be entered. The Buyer and Seller cannot modify an existing Note. The Buyer creates a Note when creating the Product Order Item or when updating it. The Seller may add notes at any time. This is not to be used to inform the Seller of Actions that the Buyer wishes performed.\n",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "product": {
            "$ref": "#/components/schemas/MEFProductRefOrValueOrder"
          },
          "productOfferingQualificationItem": {
            "$ref": "#/components/schemas/ProductOfferingQualificationItemRef"
          },
          "productOrderItemRelationship": {
            "type": "array",
            "description": "The relationship between Product Order Items in the Product Order.",
            "items": {
              "$ref": "#/components/schemas/OrderItemRelationship"
            }
          },
          "quoteItem": {
            "$ref": "#/components/schemas/MEFQuoteItemRef"
          },
          "relatedBuyerPON": {
            "type": "string",
            "description": "Identifies the Buyer Purchase Order Number that is related to this Product Order."
          },
          "relatedContactInformation": {
            "type": "array",
            "description": "Contact information of an individual or organization playing a role for this Order Item.\nThe rule for mapping a represented attribute\nvalue to a `role` is to use the _lowerCamelCase_ pattern e.g.\n- Buyer Product Order Item Contact: `role=buyerProductOrderItemContact`\n- Buyer Implementation Contact: `role=buyerImplementationContact`\n- Buyer Technical Contact: `role=buyerTechnicalContact`\n- Buyer Billing Contact: `role=buyerBillingContact`\n- Buyer Fault Contact: `role=buyerFaultContact`\n- Seller Fault Contact: `role=sellerFaultContact`\n- Buyer GDPR Contact: `role=buyerGDPRContact`\n- Seller GDPR Contact: `role=sellerGDPRContact`",
            "items": {
              "$ref": "#/components/schemas/RelatedContactInformation"
            }
          },
          "requestedCompletionDate": {
            "type": "string",
            "format": "date-time",
            "description": "Identifies the Buyer's desired due date (requested delivery date)"
          },
          "requestedItemTerm": {
            "$ref": "#/components/schemas/MEFItemTerm"
          },
          "tspRestorationPriority": {
            "type": "string",
            "description": "Within the United States, indicates the provisioning and restoration priority as defined under the TSP Service Vendor Handbook. The valid values are defined in ATIS OBF document: ATIS-0404001.\n"
          }
        },
        "required": ["action", "id"]
      },
      "MEFProductOrderItem_Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MEFProductOrderItem_Common"
          },
          {
            "type": "object",
            "description": "An identified part of the order. A product order is decomposed into\none or more order items. \nThe modelling pattern introduces the `Common` supertype to\naggregate attributes that are common to both `ProductOrderItem` and\n`ProductOrderItem_Create`. The `Create` type has a subset of\nattributes of the response type and does not introduce any new,\nthus the `Create` type has an empty definition.\n"
          }
        ]
      },
      "ProductOrder_Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductOrder_Common"
          },
          {
            "type": "object",
            "description": "A Product Order is a type of order which  can  be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa, Skipped properties: id,href,completionDate,orderDate,state,stateChange,cancellationDate,cancellationReason\n",
            "properties": {
              "productOrderItem": {
                "type": "array",
                "description": "Items contained in the Product Order.\n",
                "items": {
                  "$ref": "#/components/schemas/MEFProductOrderItem_Create"
                },
                "minItems": 1
              }
            },
            "required": ["productOrderItem"]
          }
        ]
      },
      "MEFProductOrderChargeRef": {
        "type": "object",
        "description": "A reference to a Charge instance",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink to access the Charge"
          },
          "id": {
            "type": "string",
            "description": "A unique identifier of the Charge"
          }
        },
        "required": ["id"]
      },
      "MEFMilestone": {
        "type": "object",
        "description": "Milestones associated to the Product Order Item. Set by the Seller when a Milestone occurs.",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "The date on when the milestone was reached"
          },
          "name": {
            "type": "string",
            "description": "Name of the Milestone."
          },
          "note": {
            "type": "string",
            "description": "Additional comment related to milestone change."
          }
        },
        "required": ["date", "name"]
      },
      "MEFProductOrderItemStateType": {
        "type": "string",
        "description": "Possible values for the state of the Product Order Item The following\nmapping has been used between `MEFProductOrderItemStateType` and MEF\n57.2:\n\n| state                 | MEF 57.2 name | Description|\n| --------------------- | ------------- ||\n| `acknowledged`        | ACKNOWLEDGED  | A Product Order Item has been received and has passed basic business validations. From the `acknowledged` state the Product Order Item is further validated and depending on the results of the validation and if other Product Order Items in the Product Order are also validated the Product Order Item moves to `inProgress`, `rejected.validated`, or `rejected.unassessed`.                                                                                                                                                                                                                                                                                                                                                                                                                |\n| `cancelled`           | CANCELLED     | The Product Order has moved to the `pendingCancellation` state. All Product Order Items move to `cancelled`|\n| `completed`           | COMPLETED     | The Product Order Item has completed provisioning. This is an end state|\n| `failed`              | FAILED        | The fulfillment of a Product Order Item has failed. A Product Order Item may fail because the Buyer declined a Blocking charge identified via the Charge, the Buyer failed to respond to a Charge Item included in a Charge, or the Seller is unable to fulfill the Product Order Item. A Product Order Item moving to `failed` state results in the Product Order State being `failed` or `partial`. This is a terminal state.                                                                                                                                                                                                                                                                                                                                                                  |\n| `held`                | HELD          | The Product Order Item cannot be progressed due to Charge the Seller awaiting a response from the Buyer on a Charge. The Seller stops work on the Product Order Item until the Charge has completed. Upon acceptance by the Buyer of all Blocking charges, the Product Order Item returns to `inProgress` state If the Buyer rejects a Blocking charge, the Product Order Item moves to the `failed` state.                                                                                                                                                                                                                                                                                                                                                                                      |\n| `inProgress`          | IN_PROGRESS   | The Product Order Item has been successfully validated and fulfillment has started. If the Seller's system links validation between Product Order Items in a Product Order, a Product Order Item in this state also indicates that the other Product Order Items passed validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| `pending`             | PENDING       | The Product Order Item cannot be progressed due to the Seller assessing a Cancel Product Order or Modify Product Order Item Requested Delivery Date request. The Seller stops work on the Product Order Item until either the Cancel Product Order has been accepted and the Product Order state moves to `pendingCancellation` and the Product Order Item state moves to `cancelled`, the Cancel Product Order has been rejected and the Product Order Item State moves to `inProgress`, the Modify Product Order Item Requested Delivery Date has been accepted and the Product Order Item State moves to `inProgress`, or the Modify Product Order Item Requested Delivery Date moves to `done.declined` and the Product Order Item state moves to `inProgress` with original delivery dates. |\n| `rejected`            | REJECTED      | A Product Order Item was submitted, and it has failed at least one validation checks the Seller performs during the `acknowledged` state|\n| `rejected.unassessed` | UNASSESSED    | A Product Order was submitted and all validation checks the Seller performs during the `acknowledged` state have not been completed, but another Product Order Item in the Product Order has moved to the `rejected` state|\n| `rejected.validated`  | VALIDATED     | A Product Order was submitted, and it has passed all validation checks the Seller performs during the `acknowledged` state, but another Product Order Item in the Product Order has moved to the `rejected` state|\n",
        "enum": [
          "acknowledged",
          "cancelled",
          "completed",
          "failed",
          "held",
          "inProgress",
          "pending",
          "rejected",
          "rejected.validated",
          "rejected.unassessed"
        ]
      },
      "MEFProductOrderItemStateChange": {
        "type": "object",
        "description": "Holds the State notification reasons and associated date the State changed, populated by the server",
        "properties": {
          "changeDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date on when the state was reached"
          },
          "changeReason": {
            "type": "string",
            "description": "Additional comment related to state change."
          },
          "state": {
            "$ref": "#/components/schemas/MEFProductOrderItemStateType"
          }
        }
      },
      "TerminationError": {
        "type": "object",
        "description": "This indicates an error that caused an Item to be terminated. The code and propertyPath should be used like in Error422.",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/Error422Code"
          },
          "propertyPath": {
            "type": "string",
            "description": "A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.\nDefined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).\n"
          },
          "value": {
            "type": "string",
            "description": "Text to describe the reason of the termination."
          }
        }
      },
      "ProductOrderItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MEFProductOrderItem_Common"
          },
          {
            "type": "object",
            "description": "An identified part of the order. A product order is decomposed into one or more order items.\n",
            "properties": {
              "charge": {
                "type": "array",
                "description": "The Charges associated to this Product Order Item. This list contains all completed Charges containing accepted Charge Items initiated by the Seller. Any Charge that is withdrawn or containing all declined Charge Items must not be included in this list.",
                "items": {
                  "$ref": "#/components/schemas/MEFProductOrderChargeRef"
                }
              },
              "completionDate": {
                "type": "string",
                "format": "date-time",
                "description": "Identifies the date the Seller completed the Product Order Item. Set by Seller when all Product Order Items have reached a terminal state. No further action is permitted on the Product Order after this state is reached."
              },
              "expectedCompletionDate": {
                "type": "string",
                "format": "date-time",
                "description": "Identifies the date the Seller expects to complete the Product Order Item.\n"
              },
              "expediteAcceptedIndicator": {
                "type": "boolean",
                "default": false,
                "description": "Indicates if the Seller has accepted the Buyer's Expedite request. See MEF 57.2 section 7.3 for a description of the interaction between the Buyer and Seller. If this is set to true, the Seller provides the costs to expedite the Product Order in the charge attribute"
              },
              "itemTerm": {
                "type": "array",
                "description": "Term of the Product Order Item",
                "items": {
                  "$ref": "#/components/schemas/MEFItemTerm"
                },
                "maxItems": 1
              },
              "milestone": {
                "type": "array",
                "description": "Milestones associated to the Product Order Item. Set by the Seller when a Milestone occurs.",
                "items": {
                  "$ref": "#/components/schemas/MEFMilestone"
                }
              },
              "state": {
                "$ref": "#/components/schemas/MEFProductOrderItemStateType"
              },
              "stateChange": {
                "type": "array",
                "description": "State change for the Product Order Item",
                "items": {
                  "$ref": "#/components/schemas/MEFProductOrderItemStateChange"
                }
              },
              "terminationError": {
                "type": "array",
                "description": "When the Seller cannot process the request, the Seller returns a text-based list of reasons here.",
                "items": {
                  "$ref": "#/components/schemas/TerminationError"
                }
              }
            }
          }
        ]
      },
      "MEFProductOrderStateType": {
        "type": "string",
        "description": "Possible values for the state of the Product Order The following\nmapping has been used between `MEFProductOrderStateType` and MEF 57.2:\n\n| state                           | MEF 57.2 name          | Description|\n| ------------------------------- | ---------------------- ||\n| `acknowledged`                  | ACKNOWLEDGED           | A Product Order has been received by the Seller and has passed basic validation. A `productOrder.id` is assigned in the `acknowledged` state and a response is returned to the Buyer. The Product Order remains in the `acknowledged` state while validations of Product Order and Product Order Item(s) attributes as applicable is completed. If the Product Order and Product Order Item attributes are validated the Product Order moves to the `inProgress` state. If not validated, the Product Order moves to the `rejected` state.                                                                                                                                                                                                                                               |\n| `assessingCancellation`         | ASSESSING_CANCELLATION | A Cancel Product Order request has been received by the Seller. The Product Order is being assessed to determine if the Product Order can be cancelled. If there are charges associated with cancelling the Product Order, these are communicated to the Buyer using the Charge process. The Product Order remains in the `assessingCancellation` state until any relevant Charge is completed or withdrawn by the Seller. Once the Buyer's request has been validated and any associated Charges completed, the Product Order moves to the `pendingCancellation` state. If the request is not validated or if any associated Charges are not completed, the Product Order moves to the `inProgress` state and the Product Order is not cancelled.                                       |\n| `held.assessingCharge`          | ASSESSING_CHARGE       | A Charge has been initiated by the Seller that is not the result of a Modify Product Order Item Requested Delivery Date or Cancel Product Order request and the Seller is awaiting a Buyer response to the Charge. If a blocking or non-blocking charge is accepted by the Buyer, the Product Order moves to `inProgress`. If a non-blocking charge is declined by the Buyer, the Product Order moves to `inProgress`. If a blocking charge is declined by the Buyer and there are no unrelated Product Order Items in the Product Order, the Product Order moves to the `inProgress` and then to the `failed` state. If a blocking charge is declined by the Buyer and there are unrelated Product Order Items in the Product Order, the Product Order moves to the `inProgress` state. |\n| `pending.assessingModification` | ASSESSING_MODIFICATION | A request has been made by the Buyer to modify either the `expediteIndicator` or the `requestedCompletionDate` of a Product Order Item. The Product Order Item is currently being assessed to determine whether the Modify Product Order Item Requested Delivery Date is valid. If there is a charge associated with the Modify Product Order Item Requested Delivery Date, the Product Order remains in the `pending.assessingModification` state until the Charge is completed or withdrawn by the Seller. Once the Buyer's request has been validated and any associated Charges completed, the Product Order returns to the `inProgress` state.                                                                                                                                      |\n| `cancelled`                     | CANCELLED              | The Product Order has been successfully cancelled. This is a terminal state|\n| `pendingCancellation`           | CANCELLING             | The Buyer's Cancel Request has been assessed and it has been determined that it is feasible to proceed with the cancellation. This state can also result from a Seller cancelling the Product Order within their systems without a request from the Buyer|\n| `completed`                     | COMPLETED              | The Product Order has completed fulfillment and the Product is now active. This is a terminal state|\n| `failed`                        | FAILED                 | All Product Order Items have failed which results in the entire Product Order failing. This is a terminal state.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| `inProgress`                    | IN_PROGRESS            | The Product Order has been successfully validated, and fulfillment has started|\n| `partial`                       | PARTIAL                | Fulfillment of at least one Product Order Item has failed, and fulfillment of at least one Product Order Item has been successful. This is a terminal state|\n| `rejected`                      | REJECTED               | A Product Order was submitted, and it has failed at least one of the validation checks the Seller performs after it reached the `acknowledged` state|\n",
        "enum": [
          "acknowledged",
          "assessingCancellation",
          "cancelled",
          "completed",
          "failed",
          "held.assessingCharge",
          "inProgress",
          "partial",
          "pending.assessingModification",
          "pendingCancellation",
          "rejected"
        ]
      },
      "MEFProductOrderStateChange": {
        "type": "object",
        "description": "Holds the State notification reasons and associated date the State changed, populated by the server",
        "properties": {
          "changeDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date on which the state was reached"
          },
          "changeReason": {
            "type": "string",
            "description": "Additional comment related to state change"
          },
          "state": {
            "$ref": "#/components/schemas/MEFProductOrderStateType"
          }
        }
      },
      "ProductOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductOrder_Common"
          },
          {
            "type": "object",
            "description": "A Product Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa",
            "properties": {
              "cancellationCharge": {
                "type": "array",
                "description": "Charges associated with cancelling the Product Order",
                "items": {
                  "$ref": "#/components/schemas/MEFProductOrderChargeRef"
                }
              },
              "cancellationDate": {
                "type": "string",
                "format": "date-time",
                "description": "Identifies the date the Seller cancelled the Order. Set by Seller when the Order is moved to the cancelled state."
              },
              "cancellationReason": {
                "type": "string",
                "description": "An optional free-form text field for the Seller to provide additional information regarding the reason for the cancellation. If the Seller cancels the Product Order, the Seller provides the reason. If the Buyer requests the cancellation, the Seller copies the reason provided by the Buyer from the Cancel Product Order request."
              },
              "completionDate": {
                "type": "string",
                "format": "date-time",
                "description": "Identifies the date that all Product Order Items within the Order have reached a terminal state. No further action is permitted on the Product Order."
              },
              "href": {
                "type": "string",
                "description": "Hyperlink to access the order"
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for the Product Order that is generated by the Seller when the Product Order is initially accepted via an API."
              },
              "orderDate": {
                "type": "string",
                "format": "date-time",
                "description": "Date when the Product Order was created in the Seller's system and a Product Order Identifier was assigned"
              },
              "productOrderItem": {
                "type": "array",
                "description": "Items contained in the Product Order.\n",
                "items": {
                  "$ref": "#/components/schemas/ProductOrderItem"
                },
                "minItems": 1
              },
              "state": {
                "$ref": "#/components/schemas/MEFProductOrderStateType"
              },
              "stateChange": {
                "type": "array",
                "description": "State change for the Product Order",
                "items": {
                  "$ref": "#/components/schemas/MEFProductOrderStateChange"
                }
              }
            },
            "required": ["id", "orderDate", "productOrderItem", "state"]
          }
        ]
      },
      "MEFBuyerQuoteLevel": {
        "description": "An indication of whether the Buyer's Quote Request is for a Budgetary or Firm Quote Level. Set by the Buyer. Buyer Requested Quote Level contains the possible values and may be set by the Buyer on the Request. All Quote Items in a Quote have the same Quote Level.",
        "enum": ["budgetary", "firm"],
        "type": "string"
      },
      "Quote_Common": {
        "description": "Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contains a list of quote items, a reference to a customer, a list of productOfferings, and attached prices and conditions.",
        "properties": {
          "note": {
            "description": "Free form text associated with the quote. Only useful in processes involving human interaction. Not applicable for the automated process.",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "type": "array"
          },
          "requestedQuoteCompletionDate": {
            "description": "This is requested date - from quote requester - to get a complete response for this quote",
            "format": "date-time",
            "type": "string"
          },
          "relatedContactInformation": {
            "description": "Party playing a role for this quote. If `instantSyncQuote` equals `false` \nthen the Buyer MUST specify Buyer Contact Information ('role: buyerContactInformation') \nand the Seller MUST specify Seller Contact Information ('role: sellerContactInformation')",
            "items": {
              "$ref": "#/components/schemas/RelatedContactInformation"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the quote",
            "type": "string"
          },
          "externalId": {
            "description": "ID given by the consumer and only understandable by him (to facilitate his searches afterwards)",
            "type": "string"
          },
          "buyerRequestedQuoteLevel": {
            "$ref": "#/components/schemas/MEFBuyerQuoteLevel"
          },
          "projectId": {
            "description": "An identifier that is used to group Quotes that represent a unit of functionality that is important to a Buyer. A Project can be used to relate multiple Quotes together.",
            "type": "string"
          },
          "instantSyncQuote": {
            "description": "If this flag is set to true, the Buyer requests an immediate Quote to be provided in the response to the creation of a Quote.",
            "type": "boolean"
          }
        },
        "required": ["buyerRequestedQuoteLevel", "instantSyncQuote"],
        "type": "object"
      },
      "ProductRelationshipWithGrouping": {
        "description": "A relationship to an existing Product. The requirements for usage for given Product are described in the Product Specification. The \"WithGrouping\" flavor of the Product Relationship allows for providing a list of related product identifiers within a single Product Relationship. This can be later used while processing the request as defined in the Product Specification. The `groupingKey` attribute is used to achieve this behavior in the API by marking the list of `ProductRelationshipWithGroupings` within a `product` with a common key.",
        "properties": {
          "relationshipType": {
            "description": "Specifies the type (nature) of the relationship to the related Product. The nature of required relationships varies for Products of different types. For example, a UNI or ENNI Product may not have any relationships, but an Access E-Line may have two mandatory relationships (related to the UNI on one end and the ENNI on the other). More complex Products such as multipoint IP or Firewall Products may have more complex relationships. As a result, the allowed and mandatory `relationshipType` values are defined in the Product Specification.\n",
            "type": "string"
          },
          "id": {
            "description": "unique identifier of a Product that is referenced.",
            "type": "string"
          },
          "href": {
            "description": "Hyperlink to the product in Seller's inventory that is referenced Hyperlink MAY be used when providing a response by the Seller Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request",
            "type": "string"
          },
          "groupingKey": {
            "description": "MEF 80 Introduces a list of related ids for the ProductRelationship. For sake of TMF compliance, a `groupingKey` is introduced to retain id as a simple attribute. Ids from relationships having the same `groupingKey` and `relationshipType` MUST be treated as a list of identifiers.\nReference: MEF 80 (Sn 8.1.8.)\n",
            "type": "string"
          }
        },
        "required": ["id", "relationshipType"],
        "type": "object"
      },
      "MEFProductRefOrValueQuote": {
        "description": "One or more services sold to a Buyer by a Seller. A particular Product Offering defines the technical and commercial attributes and behaviors of a Product.",
        "properties": {
          "id": {
            "description": "The unique identifier of an in-service Product that is the quotation's subject.  This field MUST be populated if an item `action` is either `modify` or `delete`.  This field MUST NOT be populated if an item `action` is `add`.\n",
            "type": "string"
          },
          "href": {
            "description": "Hyperlink to the product in Seller's inventory that is the quotation's subject. Hyperlink MAY be used when providing a response by the Seller. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request\n",
            "type": "string"
          },
          "place": {
            "description": "A list of places that are related to the Product. For example an installation location",
            "items": {
              "$ref": "#/components/schemas/RelatedPlaceRefOrValue"
            },
            "type": "array"
          },
          "productConfiguration": {
            "$ref": "#/components/schemas/MEFProductConfiguration"
          },
          "productOffering": {
            "$ref": "#/components/schemas/ProductOfferingRef"
          },
          "productRelationship": {
            "description": "A list of references to existing products that are related to the Product that would be delivered to fulfill the Quote Item",
            "items": {
              "$ref": "#/components/schemas/ProductRelationshipWithGrouping"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "QuoteItemRelationship": {
        "description": "Used to describe the relationship between quote items. These relationships could have an impact on pricing and conditions",
        "properties": {
          "relationshipType": {
            "description": "Relationship type as relies on, bundles, etc... MEF: Specifies the nature of the relationship to the related Quote Items. The nature of required relationships varies for Products of different types. For example, a UNI or ENNI Product may not have any relationships, but an Access E-Line may have two mandatory relationships (related to the UNI on one end and the ENNI on the other). More complex Products such as multipoint IP or Firewall Products may have more complex relationships. As a result, the allowed and mandatory Relationship Nature values are defined in the Product Specification.",
            "type": "string"
          },
          "id": {
            "description": "ID of the related quote item (must be in the same quote)",
            "type": "string"
          }
        },
        "required": ["id", "relationshipType"],
        "type": "object"
      },
      "MEFQuoteItem_Common": {
        "description": "Quote items describe an action to be performed on a productOffering or a product in order to get pricing elements and conditions.",
        "properties": {
          "requestedQuoteItemTerm": {
            "$ref": "#/components/schemas/MEFItemTerm"
          },
          "note": {
            "description": "Free form text associated with the quote item. Only useful in processes involving human interaction. Not applicable for the automated process.",
            "items": {
              "$ref": "#/components/schemas/Note"
            },
            "type": "array"
          },
          "product": {
            "$ref": "#/components/schemas/MEFProductRefOrValueQuote"
          },
          "productOfferingQualificationItem": {
            "$ref": "#/components/schemas/ProductOfferingQualificationItemRef"
          },
          "relatedContactInformation": {
            "description": "Contact information of an individual or organization playing a role for this Quote. If `instantSyncQuote` equals `false`  then 'Quote Item Technical Contact' must be specified (`role: quoteItemTechnicalContact`). If `instantSyncQuote` equals `false` and the Quote Item requires a location,  the Buyer MUST provide the Quote Item Location Contact Information `role: quoteItemLocationContact`.\n",
            "items": {
              "$ref": "#/components/schemas/RelatedContactInformation"
            },
            "type": "array"
          },
          "agreementName": {
            "description": "Name of the agreement. The name is unique between the Buyer and the Seller.",
            "type": "string"
          },
          "action": {
            "description": "Product action to be applied to this Quote Item. This corresponds to the Order Item Action when an associated product is ordered.",
            "items": {
              "$ref": "#/components/schemas/MEFProductActionType"
            }
          },
          "dealReference": {
            "description": "A pre-agreed pricing modifier reference that the Seller is offering to the Buyer which will impact the price.",
            "type": "string"
          },
          "id": {
            "description": "Identifier of the quote item (generally it is a sequence number 01, 02, 03, ...)",
            "type": "string"
          },
          "requestedQuoteItemInstallationInterval": {
            "description": "The installation interval requested by the Buyer.",
            "items": {
              "$ref": "#/components/schemas/Duration-2"
            }
          },
          "quoteItemRelationship": {
            "description": "A relationship from item within a quote",
            "items": {
              "$ref": "#/components/schemas/QuoteItemRelationship"
            },
            "type": "array"
          }
        },
        "required": ["action", "id"],
        "type": "object"
      },
      "MEFQuoteItem_Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MEFQuoteItem_Common"
          },
          {
            "description": "A quote item describes an action to be performed on a productOffering or a product in order to get pricing elements and condition. The modeling pattern introduces the `MEFQuoteItem_Common` supertype to aggregate attributes that are common to both `QuoteItem` and `MEFQuoteItem_Create`. In this case the create type has a subset of attributes of the response type and does not introduce any new, thus the `MEFQuoteItem_Create` type has an empty definition.",
            "type": "object"
          }
        ]
      },
      "Quote_Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Quote_Common"
          },
          {
            "description": "Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contains a list of quote items, a reference to a customer, a list of productOfferings, and attached prices and conditions.\n",
            "properties": {
              "quoteItem": {
                "description": "An item of the quote - used to describe an operation on a product to be quoted",
                "items": {
                  "$ref": "#/components/schemas/MEFQuoteItem_Create"
                },
                "minItems": 1,
                "type": "array"
              }
            },
            "required": ["quoteItem"],
            "type": "object"
          }
        ]
      },
      "TimePeriod": {
        "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both.",
        "properties": {
          "startDateTime": {
            "description": "Start of the time period, using IETC-RFC-3339 format. If you define a start, you must also define an end",
            "example": "1985-04-12T23:20:50.520Z",
            "format": "date-time",
            "type": "string"
          },
          "endDateTime": {
            "description": "End of the time period, using IETC-RFC-3339 format",
            "example": "1985-04-12T23:20:50.520Z",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MEFSellerQuoteLevel": {
        "description": "An indication of whether the Seller's Quote Response is Budgetary, Firm - Subject to Feasibility Check, or Firm. The Seller Quote Level is provided by the Seller when responding to a Quote request.  This represents the lowest Quote Item Level of all Quote Items included in the Quote.",
        "enum": ["budgetary", "firmSubjectToFeasibilityCheck", "firm"],
        "type": "string"
      },
      "MEFQuoteItemStateType": {
        "description": "Possible values for the status of a QuoteItem.\nFollowing mapping has been used between `MEFQuoteItemStateType` and MEF 80:\n\n| MEFQuoteItemStateType       | MEF 80                            |\n| ----------------------------| --------------------------------- |\n| answered                    | ANSWERED                          |\n| acknowledged                | ACKNOWLEDGED                      |\n| approved.orderable          | ORDERABLE                         |\n| approved.orderableAlternate | ORDERABLE_ALTERNATE               |\n| inProgress                  | IN_PROGRESS                       |\n| inProgress.draft            | IN_PROGRESS_DRAFT                 |\n| abandoned                   | ABANDONED                         |\n| rejected                    | REJECTED                          |\n| unableToProvide             | UNABLE_TO_PROVIDE                 |\n",
        "enum": [
          "answered",
          "acknowledged",
          "approved.orderable",
          "approved.orderableAlternate",
          "inProgress",
          "inProgress.draft",
          "rejected",
          "abandoned",
          "unableToProvide"
        ],
        "type": "string"
      },
      "Money": {
        "type": "object",
        "description": "A base / value business entity used to represent money",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "A positive floating point number"
          }
        }
      },
      "Price": {
        "type": "object",
        "description": "Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price Alteration.",
        "properties": {
          "dutyFreeAmount": {
            "$ref": "#/components/schemas/Money"
          },
          "taxIncludedAmount": {
            "$ref": "#/components/schemas/Money"
          },
          "taxRate": {
            "type": "number",
            "format": "float",
            "description": "Price Tax Rate. Unit: [%]. E.g. value 16 stand for 16% tax."
          }
        },
        "required": ["dutyFreeAmount"]
      },
      "MEFPriceType": {
        "type": "string",
        "description": "Indicates if the price is for recurring or non-recurring charges.",
        "enum": ["recurring", "nonRecurring", "usageBased"]
      },
      "MEFChargePeriod": {
        "type": "string",
        "description": "Used for a recurring charge to indicate period.",
        "enum": ["hour", "day", "week", "month", "year"]
      },
      "QuotePrice": {
        "description": "Description of price and discount awarded",
        "properties": {
          "unitOfMeasure": {
            "description": "Unit of Measure if price depending on it (Gb, SMS volume, etc..) MEF: if Quote Item Price Type equals usageBased",
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "name": {
            "description": "Name of the quote/quote item price",
            "type": "string"
          },
          "priceType": {
            "$ref": "#/components/schemas/MEFPriceType"
          },
          "description": {
            "description": "Description of the quote/quote item price",
            "type": "string"
          },
          "recurringChargePeriod": {
            "$ref": "#/components/schemas/MEFChargePeriod"
          }
        },
        "type": "object"
      },
      "QuoteItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MEFQuoteItem_Common"
          },
          {
            "description": "Quote items describe an action to be performed on a productOffering or a product in order to get pricing elements and conditions.",
            "properties": {
              "terminationError": {
                "description": "When the Seller cannot process the Quote Item Request, the Seller returns a text-based list of reasons here.",
                "items": {
                  "$ref": "#/components/schemas/TerminationError"
                },
                "type": "array"
              },
              "quoteItemInstallationInterval": {
                "$ref": "#/components/schemas/Duration-2"
              },
              "subjectToFeasibilityCheck": {
                "description": "For a Firm Quote Level indicates if the pricing requires a Feasibility Check. The Seller indicates if the Quote Item requires a Feasibility Check. This is not used for a Budgetary Quote Level.",
                "type": "boolean"
              },
              "quoteItemTerm": {
                "description": "Quote Item Term as defined by the Seller and part of the Quote for the Quote Item.",
                "items": {
                  "$ref": "#/components/schemas/MEFItemTerm"
                },
                "maxItems": 1,
                "type": "array"
              },
              "state": {
                "description": "The state of the Quote Item.",
                "items": {
                  "$ref": "#/components/schemas/MEFQuoteItemStateType"
                }
              },
              "quoteItemPrice": {
                "description": "Price for this quote item",
                "items": {
                  "$ref": "#/components/schemas/QuotePrice"
                },
                "type": "array"
              }
            },
            "required": ["state"],
            "type": "object"
          }
        ]
      },
      "MEFQuoteStateType": {
        "description": "Possible values for the status of a Quote.\nFollowing mapping has been used between `MEFQuoteStateType` and MEF 80:\n\n | QuoteStateType                            | MEF 80                            |\n | ----------------------------------------- | --------------------------------- |\n | accepted                                  | ACCEPTED                          |\n | acknowledged                              | ACKNOWLEDGED                      |\n | answered                                  | ANSWERED                          |\n | approved.orderable                        | ORDERABLE                         |\n | approved.orderableAlternate               | ORDERABLE_ALTERNATE               |\n | declined                                  | DECLINED                          |\n | expired                                   | EXPIRED                           |\n | cancelled                                 | CANCELLED                         |\n | unableToProvide                           | UNABLE_TO_PROVIDE                 |\n | inProgress                                | IN_PROGRESS                       |\n | inProgress.draft                          | IN_PROGRESS_DRAFT                 |\n | rejected                                  | REJECTED                          |\n",
        "enum": [
          "accepted",
          "acknowledged",
          "answered",
          "approved.orderable",
          "approved.orderableAlternate",
          "cancelled",
          "unableToProvide",
          "declined",
          "expired",
          "inProgress",
          "inProgress.draft",
          "rejected"
        ],
        "type": "string"
      },
      "MEFQuoteStateChange": {
        "description": "Holds the reached state, reasons, and associated date the Quote state changed, populated by the Seller.",
        "properties": {
          "changeReason": {
            "description": "Additional comment related to state change",
            "type": "string"
          },
          "changeDate": {
            "description": "The date on when the state was reached",
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "description": "A state reached at the change date",
            "items": {
              "$ref": "#/components/schemas/MEFQuoteStateType"
            }
          }
        },
        "required": ["changeDate", "state"],
        "type": "object"
      },
      "Quote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Quote_Common"
          },
          {
            "description": "Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contains a list of quote items, a reference to a customer, a list of productOfferings, and attached prices and conditions.",
            "properties": {
              "effectiveQuoteCompletionDate": {
                "description": "Date when the Quote State was set to one of the Completion States.",
                "format": "date-time",
                "type": "string"
              },
              "expectedQuoteCompletionDate": {
                "description": "This is the date provided by the Seller to indicate the date by which the Quote is expected to reach a Quote Completion State",
                "format": "date-time",
                "type": "string"
              },
              "validFor": {
                "description": "Quote validity period. For use in the context of this attribute, only the endDateTime attribute must be used.",
                "items": {
                  "$ref": "#/components/schemas/TimePeriod"
                }
              },
              "quoteLevel": {
                "description": "An indication of whether the Seller's Quote Response is Budgetary, Firm - Subject to Feasibility Check, or Firm. The Seller Quote Level is provided by the Seller when responding to a Quote request.  This represents the lowest Quote Item Level of all Quote Items included in the Quote.",
                "items": {
                  "$ref": "#/components/schemas/MEFSellerQuoteLevel"
                }
              },
              "quoteItem": {
                "description": "An item of the quote - it is used to describe an operation on a product to be quoted",
                "items": {
                  "$ref": "#/components/schemas/QuoteItem"
                },
                "minItems": 1,
                "type": "array"
              },
              "stateChange": {
                "description": "State change for the Quote",
                "items": {
                  "$ref": "#/components/schemas/MEFQuoteStateChange"
                },
                "type": "array"
              },
              "id": {
                "description": "Unique identifier - attributed by quoting system",
                "type": "string"
              },
              "href": {
                "description": "Hyperlink representing this Quote. Hyperlink MAY be used when providing a response by the Seller\n",
                "type": "string"
              },
              "state": {
                "description": "The state of the Quote.",
                "items": {
                  "$ref": "#/components/schemas/MEFQuoteStateType"
                }
              },
              "quoteDate": {
                "description": "Date and time when the quote was created",
                "format": "date-time",
                "type": "string"
              }
            },
            "required": ["id", "quoteDate", "quoteItem"],
            "type": "object"
          }
        ]
      }
    },
    "examples": {
      "DYNAMIC-private": {
        "summary": "DYNAMIC IO-D with private ASN",
        "value": {
          "accessPortId": "xxxxxxxxxxxxxxxxxxxxxxxx",
          "autoAssignBgpKey": true,
          "billingtype": "invoice",
          "defaultOriginate": true,
          "duration": 4,
          "durationUnit": "m",
          "enableIpv6": false,
          "ipblock": 29,
          "name": "DYNAMIC IoD with private ASN",
          "paymentType": "invoice",
          "privateAsn": true,
          "privateAsnAutoAssign": true,
          "rateLimit": 100,
          "burstRate": 150,
          "burstType": "95th Percentile",
          "type": "DYNAMIC",
          "vlanId": 3001
        }
      },
      "DYNAMIC-public": {
        "summary": "DYNAMIC IO-D with public ASN",
        "value": {
          "accessPortId": "xxxxxxxxxxxxxxxxxxxxxxxx",
          "autoAssignBgpKey": true,
          "billingtype": "invoice",
          "defaultOriginate": true,
          "duration": 4,
          "durationUnit": "m",
          "enableIpv6": false,
          "name": "DYNAMIC IoD with private ASN",
          "paymentType": "invoice",
          "privateAsn": false,
          "asnId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "rateLimit": 100,
          "burstRate": 150,
          "burstType": "95th Percentile",
          "type": "DYNAMIC",
          "vlanId": 3001
        }
      },
      "STATIC": {
        "summary": "DYNAMIC IO-D with private ASN",
        "value": {
          "accessPortId": "xxxxxxxxxxxxxxxxxxxxxxxx",
          "billingtype": "invoice",
          "defaultOriginate": true,
          "duration": 4,
          "durationUnit": "m",
          "enableIpv6": false,
          "ipblock": 29,
          "name": "DYNAMIC IoD with private ASN",
          "paymentType": "invoice",
          "privateAsn": true,
          "privateAsnAutoAssign": true,
          "rateLimit": 100,
          "burstRate": 150,
          "burstType": "95th Percentile",
          "type": "STATIC",
          "vlanId": 3001
        }
      }
    }
  },
  "security": [
    {
      "api-key": []
    }
  ],
  "tags": [
    {
      "name": "Getting Started",
      "description": "This section aims to furnish a comprehensive guide for integrating the Console Connect API into your client system. It includes detailed steps and declarative code samples that demonstrate the process of configuring a client to provision Console Connect Services.\n\n## Prerequisite\nThe following requirements must be met to execute the provided code samples in this guideline:\n1. API Key - Contact the Console Connect Support team to request for an API Key Email: support@consoleconnect.com\n2. Access Rights - User must have role: **Network Admin/NETWORKCONTROL**. You may verify your role **[here](https://app.consoleconnect.com/settings/members)**\n3. Acceptance of Agreement - API users must sign the Specific Terms for API Use.\n\n## Acquiring User Details\nThe **user ID**, **company ID**, and **company username** is obtained upon execution of API **GET /api/auth/token**. This provides information to the currently authenticated user\n\n> **Info**\n>\n> Below is a sample curl command that will respond with the detailed information of the current authenticated user when executed.\n\n```bash\ncurl -X GET https://api.consoleconnect.com/api/auth/token\\\n    -H \"Authorization: Bearer [[API key]]\"\n```               \n\nIf the request was successful, it will respond with a JSON object similar to this:\n\n```json\n{\n  \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxxxx\",\n   \"companies\": [\n        {\n            \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxxxx\",\n            \"name\": \"Demo\",\n            \"username\": \"demo\",\n            // other properties...\n        }\n    ]\n    // other properties...\n}\n```\n> **Info**\n>\n> Refer to **[Get Current User](Auth#operation/GetLoggedInUser)** to see API's full response payload.\n\n> Take note of your **user id** (`id`), **company id** (`companies[0].id`), and **company username** (`companies[0].username`).\n\n## Listing Metro for a Company\nThis endpoint returns a list of Metros a given Company has a presence at.\n\n> **Info**\n>\n> Below is a sample curl command that accepts **company username** as path parameter, see **[List Metros for a Company](Metros#operation/get-company-metros)** for details.\n\n```bash\ncurl -X GET https://api.consoleconnect.com/api/company/${companyUsername}/metro/capabilities`\\\n    -H \"Authorization: Bearer [[API key]]\"\n```\n\n<details>\n\n<summary>If the request was successful, it will respond with a detailed list of metros a given Company has a presence at.</summary>\n\n```json\n{\n  \"results\": [\n    {\n      \"name\": \"New York\",\n      \"code\": \"NYC\",\n      \"country\": \"us\",\n      \"rir\": \"ARIN\",\n      \"regionIds\": [\n        \"xxxxxxxxxxxxxxxxxxxxxxxx\"\n      ],\n      \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n      \"deletedAt\": null,\n      \"createdAt\": \"2017-12-18T00:27:37.028Z\",\n      \"updatedAt\": \"2020-07-10T04:03:37.956Z\",\n      \"logo\": null,\n      \"description\": \"Sample description\",\n      \"ready\": true,\n      \"canCreateController\": false,\n      \"deleted\": false,\n      \"tags\": [],\n      \"capabilities\": {\n        \"layer2\": true\n      },\n      \"firstDataCenterFacilityIdInMetro\": \"xxxxxxxxxxxxxxxxxxxxxxxx\"\n    }\n  ]\n}\n```\n\n</details>\n\n> **Info**\n>\n> Take note of **metro ID** (`[0].id`)\n\n## Searching DCFs\nThis endpoint provides DCF filtering capability and it returns a list of Data Center Facilities (DCF) details.\n\n> **Info**\n>\n> Below is a sample curl command that accepts (`optional`) **criteria**, **page** & **page size** query parameters.\n\n\n```bash\ncurl -X GET \"https://api.consoleconnect.com/v2/data-center-facility/search?criteria={}&page=1&pageSize=10\"`\\\n    -H \"Authorization: Bearer [[API key]]\"\n```\n\n<details>\n\n<summary>If the request was successful, it will respond with a detailed list of DCFs.</summary>\n\n```json\n[{\n  \"company\": {\n    \"privacy\": {\n      \"network\": {\n        \"mode\": \"PUBLIC\",\n        \"blackListIds\": [],\n        \"whiteListIds\": []\n      },\n      \"community\": {\n        \"mode\": \"PUBLIC\",\n        \"blackListIds\": [],\n        \"whiteListIds\": []\n      }\n    },\n    \"addresses\": [\n      {\n        \"registered\": false,\n        \"address\": \"\",\n        \"city\": \"Hong Kong\",\n        \"state\": \"\",\n        \"zip\": \"zipcode\",\n        \"country\": \"HK\",\n        \"email\": null,\n        \"phone\": null,\n        \"geo\": {\n          \"type\": \"Point\",\n          \"coordinates\": []\n        }\n      }\n    ],\n    \"parentIds\": [],\n    \"regionalInternetRegistry\": [],\n    \"businessRegistrationCertVerified\": \"UNVERIFIED\",\n    \"website\": \"http://www.company.com1\",\n    \"emailDomains\": [],\n    \"industry\": \"\",\n    \"businessDevelopmentManagerTypePreference\": \"UNSPECIFIED\",\n    \"isIoTDemoCompany\": false\n  },\n  \"username\": \"DCF_COMPANY_USERNAME\",\n  \"name\": \"SAMPLE-DCF-NAME\",\n  \"tags\": [\n    \"offnet\",\n    \"monthly-ports\"\n  ],\n  \"dataCenterFacility\": {\n    \"airportCodes\": [],\n    \"speeds\": [],\n    \"metroId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"ready\": true,\n    \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    \"nniReady\": true,\n    \"brandId\": null,\n    \"canBundleCrossConnect\": false\n  },\n  \"stats\": {\n    \"members\": 0,\n    \"interconnections\": 0,\n    \"followers\": 5,\n    \"following\": 0,\n    \"privateArticles\": 0,\n    \"privateEvents\": 0,\n    \"privatePosts\": 0,\n    \"articles\": 0,\n    \"events\": 0,\n    \"posts\": 0\n  },\n  \"provider\": [\n    \"PCCWGLOBAL\"\n  ],\n  \"selectiveQinQTunnelProvider\": [],\n  \"externalId\": null,\n  \"destinationPortOnly\": false,\n  \"verified\": true,\n  \"nnis\": null,\n  \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n  \"bundleCrossConnectChargeId\": null,\n  \"deletedAt\": null,\n  \"createdAt\": \"2018-02-20T04:49:09.604Z\",\n  \"updatedAt\": \"2024-07-10T04:22:15.894Z\",\n  \"products\": [\n    {\n      \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"companyId\": null,\n      \"dataCenterFacilityId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n      \"slug\": null,\n      \"status\": \"PUBLISHED\",\n      \"transactionType\": \"ENQUIRE\",\n      \"productType\": \"Data centers\",\n      \"promoted\": true,\n      \"name\": \"Sample Product Name\",\n      \"headline\": \"Sample Headline\",\n      \"description\": \"Demo description\",\n      \"logo\": null,\n      \"overviewImage\": null,\n      \"background\": null,\n      \"categories\": [\n        \"Data Center\"\n      ],\n      \"tags\": null,\n      \"promoTitle\": \"Sample Title\",\n      \"promoHeadline\": \"Sample Headline\",\n      \"callToActionLabel\": \"Order rack\",\n      \"callToActionLink\": null,\n      \"vendorUrl\": null,\n      \"hubspotFormId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"productFamilyId\": null,\n      \"isAddon\": false,\n      \"productCode\": null,\n      \"created_at\": \"2021-02-16T04:18:06.026Z\",\n      \"updated_at\": \"2021-05-19T06:43:38.193Z\"\n    }\n  ],\n  \"isFollowing\": false\n}]\n```\n\n</details>\n\n> **Info**\n>\n> Take note of **DCF company username** (`[0].username`) and **DCF ID** (`[0].id`)\n\n# ASNs\nThis section provides a detailed guide for integrating the Console Connect ASNs API.\n\n## Listing Verified ASN Linked to a Company\nThis endpoint returns a list of ASNs for a specific company\n\n> **Info**\n>\n> Below is a sample curl command that accepts **company ID** as path parameter, and an optional **filter** query parameter. The below example lists all `VERIFIED` and `public` ASNs for a company with the specified `companyId`.\n\n```bash\ncurl -X GET https://api.consoleconnect.com/app-user/${companyId}/asns?filter={\"where\":{\"status\":\"VERIFIED\",\"private\":false}}`\\\n    -H \"Authorization: Bearer [[API key]]\"\n```\n\n<details>\n\n<summary>If the request was successful, it will respond with a detailed list of ASNs.</summary>\n\n```json\n[\n  {\n    \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    \"companyId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"asn\": \"1234\",\n    \"asSet\": \"AS-KEYCOM\",\n    \"private\": false,\n    \"skipPrefixSync\": false,\n    \"status\": \"VERIFIED\",\n    \"ipPrefixConfiguredInIPCV4\": [\n      \"0.0.0.0/22\",\n      \"0.0.0.0/23\",\n      \"0.0.0.0/22\",\n      \"0.0.0.0/22\",\n      \"0.0.0.0/24\",\n      \"0.0.0.0/19\"\n    ],\n    \"ipPrefixConfiguredInIPCV6\": [\n      \"0000:0000::/29\",\n      \"0000:0000::/29\"\n    ],\n    \"ipPrefixConfiguredInSLV4\": [\n      \"0.0.0.0/22\",\n      \"0.0.0.0/23\",\n      \"0.0.0.0/22\",\n      \"0.0.0.0/22\",\n      \"0.0.0.0/24\",\n      \"0.0.0.0/19\"\n    ],\n    \"ipPrefixConfiguredInSLV6\": [\n      \"0000:0000::/29\",\n      \"0000:0000::/29\"\n    ],\n    \"ipPrefixLastCheckedAt\": \"2022-08-01T04:00:24.950Z\",\n    \"ipPrefixLastSLUpdateRequestAt\": null,\n    \"ipPrefixLastSLUpdateSuccessAt\": \"2022-07-27T06:42:37.410Z\",\n    \"ipPrefixLastErrorAt\": \"2024-08-02T00:27:07.910Z\",\n    \"deallocatedAt\": null,\n    \"ipPrefixLastErrorReason\": \"[object Object]\",\n    \"company_id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"deleted_at\": null,\n    \"created_at\": \"2021-08-24T00:29:51.456Z\",\n    \"updated_at\": \"2024-08-02T00:27:08.040Z\"\n  }\n]\n```\n\n</details>\n\n## Getting Private ASNs Range\nThis endpoint returns a range of private ASNs\n\n> **Info**\n>\n> Below is a sample curl command. \n\n```bash\ncurl -X GET https://api.consoleconnect.com/api/private-asn/range`\\\n    -H \"Authorization: Bearer [[API key]]\"\n```\n\nIf the request was successful, it will respond with a range of ASNs similar to the JSON object below\n\n```json\n{\n\"start\": 4200000000,\n\"end\": 4294967294\n}\n```\n\n# Pricing\nThis section provides a comprehensive guide for integrating the Console Connect Price Calculator API into your client system. It also provides a detailed explanation of the API's behavior, attributes and properties of the resulting API response.\n\n## Pricing - Ports and Connections\nThis endpoint calculates ports and layer 2 connections, it accepts an array of `ports` and `connections` as request body payload and responds with calculation details based on the provided payload.\n\n### Request Attributes\nBelow is a detailed description of each request attributes for this API service.\n\n* **Ports** `ports` - An array of port details and configuration.\n  * **DCF** `dcf` - The Data Center Facility ID where will be located in.\n\n  > **Note:**\n  >\n  > You may refer to **[Searching DCFs](Getting-Started#section/Searching-DCFs)** to obtain the `dcfId` of your DCF choice.\n\n  * **Speed** `speed` - The desired speed of the port in Mbps.\n  * **Duration unit** `durationUnit` - Set to `m` if the Data Center accepts month-to-month port orders. <br>\n  Enum: `y` or `m` <br>\n  Default: `y`\n\n* **Connections** `connections` - An array of layer 2 connection configuration to get pricing for.\n  * **Bandwidth** `bandwidth` - The desired bandwidth of the connection in Mbps.\n  * **Class of Service** `classOfService` - The class of service\n  * **Duration** `duration` - The duration details.\n    * **Value** `value` - The desired duration for this service.\n    * **Unit** `unit` - The unit of the provided duration value. Enum: day (`d`), week (`w`), month (`m`), year (`y`)\n\n    > **Info**\n    >\n    > `durationUnit` Enum values: day (`d`), week (`w`), month (`m`), year (`y`)\n\n    > **Note:**\n    >\n    > Maximum duration value by units: days:`6` | weeks:`3` | months:`36` | years:`3`\n\n  * **Source DCF** `srcDcf` - The ID of the source (A-end) Data Center Facility\n\n  > **Note:**\n  >\n  > You may refer to **[Searching DCFs](Getting-Started#section/Searching-DCFs)** to obtain the `dcfId` of your DCF choice.\n\n  * **Source Region** `srcRegion` - The ID of the source (A-end) region. (`Optional`)\n\n  * **Destination DCF** `destDcf` - The ID of the destination (Z-end) Data Center Facility.\n\n  > **Note:**\n  >\n  > You may refer to **[Searching DCFs](Getting-Started#section/Searching-DCFs)** to obtain the `dcfId` of your DCF choice.\n\n  * **Destination Region** `destRegion` - The ID of the destination (Z-end) region. (`Optional`)\n\n* **Discount Code** `discountCode` - Promotional or partner code.\n* **Include Cross Connect** `includeCrossConnect` - Set to true if your DCF supports cross connect add-on.\n\n> **Note:**\n>\n> Only available in a 12 months contract.\n\nSee below sample curl command:\n```bash\ncurl -X POST https://api.consoleconnect.com/api/pricing/calculate`\\\n   -H \"Authorization: Bearer [[API key]]\"\n   --data-raw '{\n    \"ports\": [\n      {\n        \"dcf: \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"speed\": 1000,\n        \"duration\": \"y\"\n      }\n    ]\n   }' \n```\n> **Note:**\n>\n> For more request payload examples, refer to **[Ports and Connections](Pricing#operation/calculate-price-for-ports-and-connections)** API specs.\n\nIf the request was successful, it will respond with list/array of ports or connection pricing details:\n```json\n{\n  \"results\": [\n    {\n      \"type\": \"PORT\",\n      \"entity\": {\n        \"dcf\": {\n          \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n          \"name\": \"Company A\",\n          \"popId\": null,\n          \"regionIds\": null,\n          \"metroIds\": null,\n          \"tags\": null\n        },\n        \"speed\": 1000,\n        \"discountId\": \"\",\n        \"durationUnit\": \"y\"\n      },\n      \"price\": 300,\n      \"preAuthAmount\": 300,\n      \"amountSaved\": null,\n      \"amountSavedTotal\": null,\n      \"basicTotalAmount\": null,\n      \"basicMonthlyAmount\": null,\n      \"priceCalculatorAttributes\": {\n        \"discountIds\": [],\n        \"discounts\": []\n      }\n    }\n  ]\n}\n```\n\n> **Note:** \n>\n> To see the response attributes definition, refer to **[Ports and Connections](Pricing#operation/calculate-price-for-ports-and-connections)** API specs, under the **Responses Section**.\n\n## Internet On-Demand Pricing - Company & Port\nThis endpoint calculates IO-D service charge rate by company & ports, it accepts **company ID** (`companyId`), **port ID** (`portId`), **bandwidth** (`bandwidth`), **duration value** (`durationValue`), **duration unit** (`durationUnit`) and an optional **discount code** (`discountCode`) as query parameters and responds with calculation details based on the configuration provided.\n\n### Request Attributes\nBelow is a detailed description of each request attributes for this API service.\n\n* **Company ID** `companyId` - Your company ID.\n\n> **Note:**\n>\n> You may refer to **[Acquiring User Details](Getting-Started#section/Acquiring-User-Details)** to obtain your company ID.\n\n* **Port ID** `portId` - Your port ID.\n\n> **Note:**\n>\n> You may refer to **[Listing Ports for a Specific Company](Getting-Started#section/Ports/Listing-Ports-for-a-Specific-Company)** to obtain your port ID.\n\n* **Bandwidth** `bandwidth` - The desired bandwidth or rate limit (in Mbps) for the IO-D service.\n* **Duration value** `durationValue` - The desired duration value\n* **Duration unit** `durationUnit` - The desired duration unit\n\n> **Info**\n>\n> `durationUnit` Enum values: day (`d`), week (`w`), month (`m`), year (`y`)\n\n> **Note:**\n>\n> Maximum duration value by units: days:`6` | weeks:`3` | months:`36` | years:`3`\n\nSee below sample curl command, configured with a duration of 6 days:\n```bash\ncurl -X GET \"https://api.test.consoleconnect.com/v2/pricing/gia/byCompanyAndPort?companyId=xxxxxxxxxxxxxxxxxxxxxxxx&portId=xxxxxxxxxxxxxxxxxxxxxxxx&bandwidth=10&durationValue=6&durationUnit=d\"`\\\n    -H \"Authorization: Bearer [[API key]]\"\n```\n\n> **Note**\n>\n> Notice the `durationValue` & `durationUnit` which is equivalent to 6 days. Response may vary based on the configured duration (`more` than or `less` than a month). See **[Response Attributes](<Getting-Started#section/Pricing/IO-D-Pricing-by-DCF-or-Company-and-Port-or-DCF-(bulk)-Response-Attributes>)** for more details.\n\nSee sample response for the pricing details below:\n```json\n  { \n    \"onceOff\": {\n      \"giaCost\": 73.97,\n      \"ipCosts\": {\n        \"ipv426Cost\": 34.52,\n        \"ipv427Cost\": 24.66,\n        \"ipv428Cost\": 0,\n        \"ipv429Cost\": null,\n        \"ipv430Cost\": null\n      }\n    },\n    \"burstRate\": 0.004050035038912062,\n    \"duration\": {\n      \"unit\": \"d\",\n      \"value\": 6\n    }\n  }\n```\n\n## Internet On-Demand Pricing by DCF\nThis endpoint calculates IO-D service charge rate by a specific DCF, it accepts **DCF ID** (`dcfId`), **bandwidth** (`bandwidth`), **duration value** (`durationValue`), **duration unit** (`durationUnit`) and an optional **discount code** (`discountCode`) and **company ID** (`companyId`) as query parameters and responds with calculation details based on the configuration provided.\n\n### Request Attributes\nBelow is a detailed description of each request attributes for this API service.\n\n* **Company ID** `dcfId` - Data Center Facility (DCF) ID.\n\n> **Note:**\n>\n> you may refer to **[Searching DCFs](Getting-Started#section/Searching-DCFs)** to obtain the `dcfId` of your DCF choice.\n\n* **Bandwidth** `bandwidth` - The desired bandwidth or rate limit (in Mbps) for the IO-D service.\n* **Duration value** `durationValue` - The desired duration value\n* **Duration unit** `durationUnit` - The desired duration unit\n\n> **Info**\n>\n> `durationUnit` Enum values: day (`d`), week (`w`), month (`m`), year (`y`)\n\n> **Note:**\n>\n> Maximum duration value by units: days:`6` | weeks:`3` | months:`36` | years:`3`\n\nSee below sample curl command, configured with a duration of more than a month:\n```bash\ncurl -X GET \"https://api.test.consoleconnect.com/v2/pricing/gia/byDcf?dcfId=xxxxxxxxxxxxxxxxxxxxxxxx&bandwidth=10&durationValue=2&durationUnit=y\"`\\\n    -H \"Authorization: Bearer [[API key]]\"\n```\n\n> **Note**\n>\n> Notice the `durationValue` & `durationUnit` which is equivalent to 2 years. Response may vary based on the configured duration (`more` than or `less` than a month). See **[Response Attributes](<Getting-Started#section/Pricing/IO-D-Pricing-by-DCF-or-Company-and-Port-or-DCF-(bulk)-Response-Attributes>)** for more details.\n\nSee sample response for the pricing details below:\n```json\n{\n  \"contractTotals\": {\n    \"giaCost\": 3420,\n    \"ipCosts\": {\n      \"ipv426Cost\": 1596,\n      \"ipv427Cost\": 1140,\n      \"ipv428Cost\": 0,\n      \"ipv429Cost\": null,\n      \"ipv430Cost\": null\n    }\n  },\n  \"unitCosts\": {\n    \"giaCost\": 142.5,\n    \"ipCosts\": {\n      \"ipv426Cost\": 66.5,\n      \"ipv427Cost\": 47.5,\n      \"ipv428Cost\": 0,\n      \"ipv429Cost\": null,\n      \"ipv430Cost\": null\n    }\n  },\n  \"contractTotalsAmountSaved\": null,\n  \"unitCostsAmountSaved\": null,\n  \"burstRate\": 0.04681165489,\n  \"duration\": {\n    \"unit\": \"y\",\n    \"value\": 2\n  }\n}\n```\n\n## Internet On-Demand Pricing by DCF (Bulk)\nThis endpoint accepts **DCF ID** (`dcfId`) and **price requests** (`priceRequests`) as query parameters and responds with an array of price calculation details associated with the **price request** (`priceRequests`) configuration provided in the API request.\n\n### Request Attributes\nBelow is a detailed description of each request attributes for this API service.\n\n* **DCF ID** `dcfId` - Your data center facility (DCF) of choice ID.\n\n> **Note:**\n>\n> you may refer to **[Searching DCFs](Getting-Started#section/Searching-DCFs)** to obtain your `dcfId`\n\n* **Price Requests** `priceRequests` - A collection of different IO-D service configuration (bandwidth and duration) you desire to configure your IO-D service with.\n\n    **Price Requests item's attributes/fields:**\n    * **Bandwidth** `bandwidth` - The desired bandwidth or rate limit (in Mbps) for the IO-D service.\n    * **Duration value** `durationValue` - The desired duration value\n    * **Duration unit** `durationUnit` - The desired duration unit\n    \n    > **Info**\n    >\n    > `durationUnit` Enum values: day (`d`), week (`w`), month (`m`), year (`y`)\n\n    > **Note:**\n    >\n    > Maximum duration value by units: days:`6` | weeks:`3` | months:`36` | years:`3`\n\nSee below sample curl command, which passes 2 IO-D configuration items in **price requests** (`priceRequests`) query parameter:\n\n* `Index 0` - Configured with service duration of *more* than a month.\n* `Index 1` - Configured with service duration of *less* than a month.\n\n```bash\ncurl -X GET \"https://api.consoleconnect.com/v2/pricing/gia/bulkByDcf?dcfId=xxxxxxxxxxxxxxxxxxxxxxxx&priceRequests=[{\"bandwidth\":10,\"durationValue\":24,\"durationUnit\":\"m\"},{\"bandwidth\":10,\"durationValue\":6,\"durationUnit\":\"d\"}]\"`\\\n    -H \"Authorization: Bearer [[API key]]\"\n```\n> **Note**\n>\n> Notice the value of priceRequests, `index 0`'s duration value and unit is equivalent to 24 months / 2 years where as `index 1`'s duration value and unit is equivalent to 6 days.\n\nThe expected response for this API Service is an array of price calculation details - each price calculation item corellates with each of the item provided in the **price requests** (`priceRequests`) query parameter for the specified **DCF ID** (`dcfId`). See **Response Attributes** section below for the response details.  \n\n<details>\n\n<summary>See sample response for the pricing details below.</summary>\n\n```json\n[\n  { // Recurring - with duration of more than a month\n    \"contractTotals\": {\n      \"giaCost\": 3420,\n      \"ipCosts\": {\n        \"ipv426Cost\": 1596,\n        \"ipv427Cost\": 1140,\n        \"ipv428Cost\": 0,\n        \"ipv429Cost\": null,\n        \"ipv430Cost\": null\n      }\n    },\n    \"unitCosts\": {\n      \"giaCost\": 142.5,\n      \"ipCosts\": {\n        \"ipv426Cost\": 66.5,\n        \"ipv427Cost\": 47.5,\n        \"ipv428Cost\": 0,\n        \"ipv429Cost\": null,\n        \"ipv430Cost\": null\n      }\n    },\n    \"contractTotalsAmountSaved\": null,\n    \"unitCostsAmountSaved\": null,\n    \"burstRate\": 0.04681165489,\n    \"duration\": {\n      \"unit\": \"m\",\n      \"value\": 24\n    }\n  },\n  {  // OnceOff - with duration of less than a month\n    \"onceOff\": {\n      \"giaCost\": 73.97,\n      \"ipCosts\": {\n        \"ipv426Cost\": 34.52,\n        \"ipv427Cost\": 24.66,\n        \"ipv428Cost\": 0,\n        \"ipv429Cost\": null,\n        \"ipv430Cost\": null\n      }\n    },\n    \"burstRate\": 0.004050035038912062,\n    \"duration\": {\n      \"unit\": \"d\",\n      \"value\": 6\n    }\n  }\n]\n```\n\n</details>\n\n## IO-D Pricing by DCF | Company & Port | DCF (bulk) Response Attributes\n*`IO-D Pricing By DCF API`*, *`IO-D Pricing By Company & Ports API`* and *`IO-D Pricing By DCF (Bulk) API`* share similar response structure (*Recurring Response* or *OnceOff Response*) that may vary depending on the provided duration (*less than* or *more than* a month).\n\n  ### Recurring Response\n----\n  Applicable charges for the service configured with duration of *`more`* than a month. See sample response above `index 0`.\n\n  **Property Definition**\n  * `contractTotals` - The full duration of service charge rates.\n    * `giaCost` - The full duration of service charge rate\n    * `ipCost` - The **IP Block** selection/option - each option equivalent to full duration of service charge rate, chargeable on top of `giaCost`.\n  * `unitCosts` - Equivalent to monthly service charge rates.\n    * `giaCost` - The monthly service charge rate.\n    * `ipCost` - The **IP Block** selection/option - each option equivalent to monthly service charge rate, chargeable monthly on top of `giaCost`.\n  * `contractTotalsAmountSaved` - The full duration computed saved amount.\n  * `unitCostsAmountSaved` - Computed monthly saved amount.\n  * `burstRate` - Burst rate/Mbps charge rate.\n  * `duration` - Configured duration of service.\n    * `value` - The configured duration value for the service.\n    * `unit` - The configured duration unit for the service. `Enum:` days (`d`), weeks (`w`), months (`m`), years (`y`).\n\n  > **Note:**\n  >\n  > Depending on your **IP Block** of choice, charges may apply on top of `giaCost`. See `[0].contractTotals.ipCost` or `[0].unitCosts.ipCost` in the response sample above for the price details.\n  >\n  > Notice `null` and `0` values in both `[0].contractTotals.ipCost` and `[0].unitCosts.ipCost` - `null` is equivalent to *unavailable* and `0` is equivalent to *free of charge*.\n\n  ### OnceOff Response\n----\n  Applicable charges for the service configured with duration of *`less`* than a month. See sample response above `index 1`.\n\n  **Property Definition**\n  * `onceOff` - The full duration of service charge rate and IP Block options charge rate.\n    * `giaCost` - The full duration of service charge rate\n    * `ipCost` - The **IP Block** selection/option - each option equivalent to full duration of service charge rate, chargeable on top of `giaCost`.\n  * `burstRate` - Burst rate/Mbps charge rate.\n  * `duration` - Configured duration of service.\n    * `value` - The configured duration value for the service.\n    * `unit` - The configured duration unit for the service in day(s) (`d`) or in week(s) (`w`).\n\n# Ports\nThis section provides a detailed guide for integrating the Console Connect Port Services API through your client systems.\n\n## Listing Ports for a Specific Company\nThis endpoint accepts **company username** as a path parameter and responds with a list of ports owned by the specific company. \n\nSee below sample curl command:\n\n```bash\ncurl -X GET https://api.consoleconnect.com/api/company/${companyUsername}/ports?deleted=false`\\\n    -H \"Authorization: Bearer [[API key]]\"\n```\n\n<details>\n\n<summary>If the request was successful, it will respond with a detailed list of ports for the given company.</summary>\n\n```json\n{\n  \"results\": [\n    {\n      \"dcpCompanyId\": null,\n      \"name\": \"XXXX CONNECTIVITY\",\n      \"speed\": {\n        \"value\": 1000,\n        \"name\": \"1000 Mbps\"\n      },\n      \"speedOverprovisioningFactor\": 1,\n      \"singleService\": false,\n      \"locationId\": null,\n      \"dataCenterFacilityId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n      \"popId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"metroId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n      \"status\": \"ACTIVE\",\n      \"serviceStatus\": \"OPEN\",\n      \"linkState\": \"UP\",\n      \"linkStateUpSince\": null,\n      \"linkStateSyncedAt\": \"2021-06-08T01:05:03.507Z\",\n      \"type\": \"NNI\",\n      \"isEdgePort\": false,\n      \"edgePayload\": null,\n      \"mediaType\": \"COPPER\",\n      \"partner\": {\n        \"type\": \"NONE\",\n        \"connectionSpeeds\": []\n      },\n      \"ip\": {\n        \"ipv4\": null,\n        \"ipv6\": null\n      },\n      \"capabilities\": {\n        \"model6Limit\": false,\n        \"model6LimitNumber\": null,\n        \"singleService\": false\n      },\n      \"activeChangedAt\": \"2021-06-08T01:05:33.694Z\",\n      \"firstActiveAt\": \"2021-06-08T01:05:03.706Z\",\n      \"updatedAt\": \"2023-01-24T02:08:29.005Z\",\n      \"createdAt\": \"2021-06-08T01:04:59.457Z\",\n      \"deleted\": false,\n      \"deletedAt\": null,\n      \"importedAt\": null,\n      \"importer\": null,\n      \"salesRecordId\": \"123456\",\n      \"paymentType\": \"plan\",\n      \"payg\": null,\n      \"onboarded\": true,\n      \"onboardedBy\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n      \"onboardedAt\": \"2021-06-08T01:04:59.455Z\",\n      \"onboardedStatus\": \"COMPLETE\",\n      \"onboardedStatusDetail\": null,\n      \"onboardedDeviceName\": \"usw01.pop01.hkg39\",\n      \"onboardedInterfaceName\": \"GigabitEthernet0/0/11\",\n      \"onboardedAllocatedBandwidth\": 10,\n      \"billingId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n      \"vlanRanges\": [\n        {\n          \"start\": 1000,\n          \"end\": 1010\n        }\n      ],\n      \"iciLink\": \"A\",\n      \"reportingLabels\": [\n        \"Meeting place port\"\n      ],\n      \"supportedServices\": [\n        \"L2\"\n      ],\n      \"cosTransparency\": null,\n      \"cosMapping\": {\n        \"GOLD\": [\n          \"\"\n        ],\n        \"SILVERPLUS\": [],\n        \"SILVER\": [\n          \"\"\n        ],\n        \"BRONZE\": []\n      },\n      \"externalId\": \"port-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n      \"ticketLink\": null,\n      \"crossConnectXcOwner\": null,\n      \"crossConnectFullDemarc\": null,\n      \"interconnectEnabled\": null,\n      \"interconnectProvider\": null,\n      \"interconnectOrderNumber\": null,\n      \"interconnectCircuitId\": null,\n      \"interconnectCompletedAt\": null,\n      \"interconnectVlanRange\": null,\n      \"interconnectNniPortName\": null,\n      \"localLoopEnabled\": null,\n      \"localLoopId\": null,\n      \"localLoopCustomerId\": null,\n      \"localLoopProviderName\": null,\n      \"localLoopSalesRecordId\": null,\n      \"localLoopBandwidth\": null,\n      \"localLoopCompletedAt\": null,\n      \"localLoopASideAddress\": null,\n      \"localLoopASideXConnectId\": null,\n      \"localLoopZSideAddress\": null,\n      \"localLoopGsmpId\": null,\n      \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n      \"accessCircuit\": {\n        \"crossConnectMediaType\": null\n      },\n      \"companyId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n      \"capacity\": {\n        \"total\": 1000,\n        \"utilised\": 365,\n        \"remaining\": 635\n      },\n      \"company\": {\n        \"officeAddress\": null,\n        \"system\": {\n          \"welcomeMessage\": true\n        },\n        \"company\": {\n          \"industry\": null,\n          \"companySize\": null,\n          \"dateFounded\": null,\n          \"clientId\": null,\n          \"first\": null,\n          \"last\": null,\n          \"address\": null,\n          \"city\": null,\n          \"state\": null,\n          \"zip\": null,\n          \"phone\": null,\n          \"fax\": null,\n          \"businessType\": \"Internet Exchange\",\n          \"website\": \"sample.com\",\n          \"registeredName\": \"updatedone2\",\n          \"addresses\": [\n            {\n              \"geo\": {\n                \"type\": \"Point\",\n                \"coordinates\": []\n              },\n              \"primary\": true,\n              \"registered\": true,\n              \"address\": \"2 Stuart Road\",\n              \"city\": \"Tegucigalpa\",\n              \"state\": \"hk\",\n              \"zip\": \"4000\",\n              \"country\": \"HN\",\n              \"email\": null,\n              \"phone\": \"01234567891\"\n            }\n          ],\n          \"partnerType\": null,\n          \"isIoTDemoCompany\": false\n        },\n        \"cloudProviderDetails\": {\n          \"asn\": {\n            \"range\": [\n              4200099007,\n              4200099009\n            ]\n          },\n          \"cloudType\": \"vultr\",\n          \"companyType\": \"B2B\",\n          \"bgpAuthority\": \"PCCWGLOBAL\"\n        },\n        \"stats\": {\n          \"members\": 186,\n          \"interconnections\": 0,\n          \"followers\": 0,\n          \"following\": 0,\n          \"privateArticles\": 0,\n          \"privateEvents\": 0,\n          \"privatePosts\": 0,\n          \"articles\": 14,\n          \"events\": 0,\n          \"posts\": 29\n        },\n        \"accountManagerEmail\": null,\n        \"accountManagerId\": null,\n        \"createdAt\": \"2019-08-09T05:32:18.613Z\",\n        \"updatedAt\": \"2024-07-25T06:51:06.162Z\",\n        \"username\": \"qe1\",\n        \"deletedAt\": null,\n        \"deleted\": false,\n        \"verified\": true,\n        \"tags\": [\n          \"promoted\"\n        ],\n        \"status\": \"ACTIVE\",\n        \"displayOrder\": 0,\n        \"external\": [\n          {\n            \"id\": \"15\",\n            \"type\": \"SDWAN\",\n            \"status\": \"UNSYNCED\"\n          }\n        ],\n        \"groups\": [],\n        \"location\": null,\n        \"summary\": \"<p>Testing adding new image12</p>\",\n        \"headline\": \"wholesale\",\n        \"background\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"avatarId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"name\": \"SAMPLE NAME\",\n        \"type\": \"COMPANY\",\n        \"oldAvatarId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"verifiedIdentity\": true,\n        \"portsActive\": 14,\n        \"categories\": [\n          \"Analytics\",\n          \"AI\",\n          \"IoT\"\n        ],\n        \"overviewImage\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"isCloudProvider\": true,\n        \"signedCompanyRefId\": 4,\n        \"signedCompanyVerified\": true,\n        \"billingAccount\": \"115475\",\n        \"businessRegistrationNumber\": \"123456\",\n        \"selectiveQinQTunnelProvider\": [],\n        \"companies\": [],\n        \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"online\": false\n      },\n      \"dataCenterFacility\": {\n        \"system\": {\n          \"welcomeMessage\": null\n        },\n        \"company\": {\n          \"privacy\": {\n            \"network\": {\n              \"mode\": \"PUBLIC\",\n              \"blackListIds\": [],\n              \"whiteListIds\": []\n            },\n            \"community\": {\n              \"mode\": \"PUBLIC\",\n              \"blackListIds\": [],\n              \"whiteListIds\": []\n            }\n          },\n          \"businessType\": null,\n          \"partnerType\": null,\n          \"companySize\": null,\n          \"dateFounded\": null,\n          \"registeredName\": null,\n          \"businessRegistrationCertReference\": null,\n          \"businessRegistrationCertUploadedAt\": null,\n          \"businessRegistrationCertRejectedReason\": null,\n          \"clientId\": null,\n          \"first\": null,\n          \"last\": null,\n          \"address\": null,\n          \"city\": null,\n          \"state\": null,\n          \"zip\": null,\n          \"phone\": null,\n          \"fax\": null,\n          \"addresses\": [\n            {\n              \"geo\": {\n                \"type\": \"Point\",\n                \"coordinates\": []\n              },\n              \"registered\": false,\n              \"address\": \"\",\n              \"city\": \"Hong Kong\",\n              \"state\": \"\",\n              \"zip\": \"zipcode\",\n              \"country\": \"HK\",\n              \"email\": null,\n              \"phone\": null\n            }\n          ],\n          \"regionalInternetRegistry\": [],\n          \"businessRegistrationCertVerified\": \"UNVERIFIED\",\n          \"website\": \"http://www.company.com1\",\n          \"emailDomains\": [],\n          \"industry\": \"\",\n          \"businessDevelopmentManagerTypePreference\": \"UNSPECIFIED\",\n          \"isIoTDemoCompany\": false\n        },\n        \"dataCenterFacility\": {\n          \"airportCodes\": [],\n          \"speeds\": [],\n          \"metroId\": \"dataCenterFacility\",\n          \"ready\": true,\n          \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n          \"nniReady\": true,\n          \"brandId\": null,\n          \"canBundleCrossConnect\": false\n        },\n        \"cloudProviderDetails\": {\n          \"asn\": {\n            \"range\": []\n          },\n          \"bgpAuthority\": \"PCCWGLOBAL\",\n          \"companyType\": \"DCP\"\n        },\n        \"stats\": {\n          \"members\": 0,\n          \"interconnections\": 0,\n          \"followers\": 5,\n          \"following\": 0,\n          \"privateArticles\": 0,\n          \"privateEvents\": 0,\n          \"privatePosts\": 0,\n          \"articles\": 0,\n          \"events\": 0,\n          \"posts\": 0\n        },\n        \"overviewImage\": null,\n        \"businessRegistrationNumber\": null,\n        \"signedCompanyRefId\": null,\n        \"accountManagerEmail\": null,\n        \"accountManagerId\": null,\n        \"createdAt\": \"2018-02-20T04:49:09.604Z\",\n        \"updatedAt\": \"2024-07-10T04:22:15.894Z\",\n        \"username\": \"hkg05\",\n        \"deletedAt\": null,\n        \"deleted\": false,\n        \"verified\": true,\n        \"tags\": [\n          \"offnet\",\n          \"monthly-ports\"\n        ],\n        \"status\": \"ACTIVE\",\n        \"displayOrder\": -299,\n        \"groups\": [],\n        \"location\": null,\n        \"summary\": \"\",\n        \"headline\": null,\n        \"background\": null,\n        \"avatarId\": null,\n        \"name\": \"hkg39-Asia-HK-APAC\",\n        \"type\": \"DATA_CENTER_FACILITY\",\n        \"popIds\": [\n          \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n        ],\n        \"costbookLocationId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"costbookLocation\": {\n          \"name\": \"ASIA 1\",\n          \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n          \"deletedAt\": null,\n          \"createdAt\": \"2019-05-21T04:09:32.819Z\",\n          \"updatedAt\": \"2019-11-05T01:31:28.426Z\",\n          \"tags\": [\n            \"generated\"\n          ],\n          \"gatewayIds\": [],\n          \"regionIds\": [\n            \"xxxxxxxxxxxxxxxxxxxxxxxx\"\n          ],\n          \"regions\": [\n            {\n              \"name\": \"APAC\",\n              \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n              \"deletedAt\": null,\n              \"createdAt\": \"2017-12-18T00:26:28.610Z\",\n              \"updatedAt\": \"2018-09-11T04:15:10.124Z\",\n              \"deleted\": false,\n              \"priceMultiplier\": 1,\n              \"insightRegion\": \"Asia\"\n            }\n          ],\n          \"gateways\": []\n        },\n        \"verifiedIdentity\": false,\n        \"provider\": [\n          \"PCCWGLOBAL\"\n        ],\n        \"destinationPortOnly\": false,\n        \"categories\": [],\n        \"nnis\": null,\n        \"isCloudProvider\": false,\n        \"l3CostbookLocationId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"bundleCrossConnectChargeId\": null,\n        \"signedCompanyVerified\": false,\n        \"selectiveQinQTunnelProvider\": [],\n        \"companies\": [],\n        \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"online\": false\n      },\n      \"connections\": [\n        {\n          \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n          \"name\": \"SAMPLE NAME\",\n          \"status\": \"ERROR\",\n          \"speed\": 10,\n          \"type\": \"LAYER2\",\n          \"srcConfigTag\": null,\n          \"typeFriendly\": \"IBM Direct Link\"\n        },\n        {\n          \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n          \"name\": \"SAMPLE NAME2\",\n          \"status\": \"ERROR\",\n          \"speed\": 10,\n          \"type\": \"LAYER2\",\n          \"srcConfigTag\": null,\n          \"typeFriendly\": \"IBM Direct Link\"\n        }\n      ],\n      \"metro\": {\n        \"name\": \"Hong Kong\",\n        \"code\": \"HKG\",\n        \"country\": \"hk\",\n        \"rir\": \"APNIC\",\n        \"regionIds\": [\n          \"xxxxxxxxxxxxxxxxxxxxxxxx\"\n        ],\n        \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"deletedAt\": null,\n        \"createdAt\": \"2017-12-18T00:45:44.120Z\",\n        \"updatedAt\": \"2024-02-25T05:02:47.267Z\",\n        \"logo\": null,\n        \"description\": \"a\",\n        \"ready\": true,\n        \"canCreateController\": false,\n        \"deleted\": false,\n        \"tags\": []\n      }\n    }\n  ]\n}\n```\n\n</details>\n\n> **Note**\n>\n> Take note of your **port ID** (`results[0].id`).\n\n## Checking Port Capabilities\nThis endpoint provides details to a specific port's capabilities, it accepts **company ID** and **port ID** as path parameter.\n\nSee below sample curl command:\n\n```bash\ncurl -X GET https://api.consoleconnect.com/app-user/${companyId}/ports/${portId}/info`\\\n    -H \"Authorization: Bearer [[API key]]\"\n```\n\nIf the request was successful, it will respond with a JSON object similar to this:\n\n```json\n{\n  \"capabilities\": {\n    \"giaStandardV1\": true,\n    \"l2TypeA\": false,\n    \"l3vpnTypeA\": true,\n    \"qinq\": true\n  }\n}\n```\n\n## Ordering/Reserving Ports\nThis section illustrates the creation of an order to reserve a port via the Console Connect API.\n\n\n> **Info**\n>\n> Below is a sample curl command that will execute creation of port order, it accepts your **company username** as path parameter.\n\n```bash\ncurl -X PUT https://api.consoleconnect.com/api/company/${companyUsername}/ports/orders`\\\n   -H \"Authorization: Bearer [[API key]]\"\n   --data-raw '{\n    \"dataCenterFacility\": \"DCF_Company_Username\",\n    \"speed\": \"1000\",\n    \"durationUnit\": \"y\",\n    \"portName\": \"SAMPLE-PORT-NAME\",\n    \"paymentType\": \"invoice\"\n   }' \n```\n\n> **Note**\n>\n> Refer to **[Searching DCFs](Getting-Started#section/Searching-DCFs)** above to obtain a value for `dataCenterFacility` request body field.\n\n# Layer 2 Connection\nThis section provides detailed guide on creating L2 connection through Console Connect API Service.\n\n## Creating L2 Connection (Port to Port)\nThis section illustrates the creation of L2 connectivity between ports through the Console Connect API Service.\n\n#### S2S (Self to Self) Connection\nThe following example demonstrates a S2S (self-to-self) connection, in which a user establishes a link between two ports managed by the same organization. This setup indicates that the user has precise knowledge of the ports involved in the connection.\n\n\n> **Info**\n>\n> Below is a sample curl command that will execute the creation of L2 Connection (port to port), it accepts your **company username** as path parameter.\n\n\n```bash\ncurl -X PUT https://api.consoleconnect.com/api/v2/company/${companyUsername}/connections/layer2`\\\n   -H \"Authorization: Bearer [[API key]]\"\n   --data-raw '{\n    \"name\":\"DEMO-L2-S2S\",\n    \"destCompany\":\"DEMO-COMPANY\",\n    \"portId\":\"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"destPortId\":\"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"duration\":12,\n    \"durationUnit\":\"m\",\n    \"paymentType\":\"invoice\",\n    \"classOfService\":\"SILVER\",\n    \"speed\":100,\n    \"type\":\"LAYER2\",\n    \"evergreen\":true\n   }' \n```\n\n> **Note**\n>\n> To obtain `portId` & `destPortId` please see **\"[Listing Ports for a Specific Company](Getting-Started#section/Ports/Listing-Ports-for-a-Specific-Company)\"**.\n\n#### B2B (Business to Business) Connection\nThe following example illustrates a B2B (business-to-business) connection, where a user initiates a link between two ports managed by separate organizations. Consequently, the user does not have prior knowledge of which specific port will be used for the connection.\n\n> **Note**\n>\n> The following sample curl command is similar to the previous example, with the only difference being the request payload, which includes `destMetroId`, `destDcf`, `destRegionId`, and `regionId`, while excluding the **destination port ID** (`destPortId`).\n\n```bash\ncurl -X PUT https://api.consoleconnect.com/api/v2/company/${companyUsername}/connections/layer2`\\\n   -H \"Authorization: Bearer [[API key]]\"\n   --data-raw '{\n    \"name\":\"DEMO-L2-B2B\",\n    \"destCompany\":\"DEMO-COMPANY\",\n    \"destDcf\":\"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"destMetroId\":xxxxxxxxxxxxxxxxxxxxxxxx,\n    \"destRegionId\":xxxxxxxxxxxxxxxxxxxxxxxx,\n    \"portId\":\"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"regionId\":\"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"duration\":1,\n    \"durationUnit\":\"y\",\n    \"paymentType\":\"invoice\",\n    \"classOfService\":\"SILVER\",\n    \"speed\":10,\n    \"type\":\"LAYER2\",\n    \"evergreen\":true\n   }' \n```\n\n#### Obtaining the payload for L2 Connection B2B\n1. To obtain `destMetroId` & `destRegionId` execute **[Listing Metros for a Company](Getting-Started#section/Listing-Metro-for-a-Company)** then extract **metro ID** (`results[0].id`) and **region ID** (`results[0].regionIds[0]`).\n2. To obtain `destDcf` execute **[Searching DCFs](Getting-Started#section/Searching-DCFs)** then extract **destination DCF** (`[0].id`)\n3. To obtain `portId` & `regionId` execute **\"[Listing Ports for a Specific Company](Getting-Started#section/Ports/Listing-Ports-for-a-Specific-Company)\"** then extract **region ID** (`results[0].metros.regionIds[0]`) and **port ID** (`results[0].id`)\n\n# Internet On-Demand\nThis section provides a detailed guide for integrating Console Connect Internet On-Demand (IO-D) Service with client system through Console Connect API Service.\n\n> **Note**\n>\n> On top of the mentioned **[prerequisite](Getting-Started#section/Prerequisite)** above, please see **[additional requirements](<Internet-On-Demand-(IO-D)#section/Prerequisites>)** to perform the following action.\n\n## Provisioning Internet On-Demand (IO-D) Service\nThis section illustrates the provisioning of IO-D service for a specified company (through **company ID**) configured with a private ASN\n\n\n> **Info**\n>\n> Below is a sample curl command that that provisions an IO-D service for a specific company through **company ID** as path parameter, configured to auto assign a private ASN.\n\n```bash\ncurl -X POST https://api.consoleconnect.com/app-user/${companyId}/gia-service`\\\n   -H \"Authorization: Bearer [[API key]]\"\n   --data-raw '{\n    \"accessPortId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"name\": \"Sample IO-D Name\",\n    \"rateLimit\": 10,\n    \"type\": \"DYNAMIC\",\n    \"privateAsn\": true,\n    \"privateAsnAutoAssign\": true,\n    \"ipBlock\": 28,\n    \"enableIpv6\": false,\n    \"autoAssignBgpKey\": true,\n    \"defaultOriginate\": true,\n    \"defaultOriginateIpv6\": true,\n    \"duration\": {\n        \"quantity\": 1,\n        \"unit\": \"d\"\n    },\n    \"paymentType\": \"invoice\",\n    \"ipGeoCountry\": \"JP\",\n    \"ipGeoCity\": \"\"\n   }' \n```\n\n#### Helpful Tips\n1. To validate if your port is **IO-D enabled**, execute **[Checking Port Capabilities Guideline](Getting-Started#section/Ports/Checking-Port-Capabilities)**, then if `capabilities.giaStandardV1`'s value is true, then your port is IO-D enabled.\n2. To check your port **capacity**, execute **[Listing Ports for a Specific Company](Getting-Started#section/Ports/Listing-Ports-for-a-Specific-Company)**, then take note of your port's remaining **capacity** (`results[0].capacity.remaining`).\n3. Depending on a certain configuration given, certain options in the request body could be mandatory/disallowed, see **[Provisioning IO-D Service](<Internet-On-Demand-(IO-D)#operation/provision-iod-service>)** to see all the `required` request body field.\n    - If `type` property value is `DYNAMIC`\n\n        **Either**\n\n        - If `privateAsn` property value is `true` \n          \n          - **Must** either set `privateAsnAutoAssign` property value to `true` **OR** set `privateAsnRequested` field providing your private ASN.\n        \n          > **Note** \n          > \n          > A helpful endpoint is available in providing you with a range of ASNs by executing **[Getting Private ASN Range](Getting-Started#section/ASNs/Getting-Private-ASNs-Range)**.\n          - **Must** provide an `ipBlock`\n          - If `enableIpv6` property value is `true`\n            - **Must** supply an `ipv6Block` \n\n            > **Note:**\n            >\n            > Currently the only valid value for `ipv6Block` is 48.\n          - **Must** either set `autoAssignBgpKey` property value to `true` or supply a 6-24 characters long string value to `bgpKey`.\n          - **Must** not set or include `asnId` in the request body.\n        \n        - If `privateAsn` property value is `false` \n          \n          - **Must** supply an **ASN ID** ( `asnId` )\n        \n          > **Note** \n          >\n          > To find your public ASN ID, execute **[Listing Verified ASN Linked to a Company](Getting-Started#section/ASNs/Listing-Verified-ASN-Linked-to-a-Company)** and take note of your **ASN ID** (`[0].id`).\n\n          > **Note** \n          >\n          > To add new ASN, contact **[Console Connect Support Team (support@consoleconnect.com)](mailto:support@consoleconnect.com)** providing your ASN.\n\n          - **Must** either set `autoAssignBgpKey` property value to `true` or supply a 6-24 characters long string value to `bgpKey`.\n          - **Must** not set or include `privateAsnRequested` in the request body.\n          - **Must** not set or include `privateAsnAutoAssign` in the request body.\n    - If `type` property value is `STATIC`\n      - **Must** set `privateAsn` property value to `true`.\n      - **Must** set `privateAsnAutoAssign` property value to true\n      - **Must** provide an `ipBlock`\n          - If `enableIpv6` property value is `true`\n            - **Must** supply an `ipv6Block` \n\n            > **Note:**\n            >\n            > Currently the only valid value for `ipv6Block` is 48.\n      - **Must** not set or include `asnId` in the request body.\n      - **Must** not set or include `privateAsnRequested` in the request body.\n      - **Must** not set or include `bgpKey ` in the request body.\n      - **Must** not set or include `autoAssignBgpKey` in the request body.\n4. Configuring `burstRate` involves **a set of rules**:\n    - Committed data rate limit minimum is set at 10% of remaining port capacity.\n    - Burstable bandwidth must exceed committed data rate, but not exceed remaining port capacity.\n    - See Tip **#2** to check your port capacity.\n5. **IP prefix:** Ensure any IP prefix you will advertise via BGP are registered and signed under your ASN in your regional Internet Routing Registry.\n\n# CloudRouter\nThis section provides a detailed guide for integrating CloudRouter Services with client systems using the Console Connect API Service.\n\n## Listing Existing CloudRouters\nThis is useful when acquiring data that are relevant when **[Provisioning a new Site on an Existing VPN](CloudRouter#operation/Provision-a-new-L3VPN-Site)**\n\n> **Info**\n>\n> Below is a sample curl command that will return an array of previously provisioned CloudRouter(if there are any) that correlates with the specified **companyId**.\n```bash\ncurl -X GET https://api.consoleconnect.com/app-user/${companyId}/l3vpns`\\\n    -H \"Authorization: Bearer [[API key]]\"\n```\n<details>\n\n<summary>If the request was successful, it will respond with a JSON object similar to this:</summary>\n\n```json\n[\n  {\n    \"name\": \"Demo\",\n    \"status\": \"CREATED\",\n    \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"paymentMethod\": \"invoice\",\n    \"duration\": {\n      \"quantity\": 1,\n      \"unit\": \"y\"\n    },\n    \"bandwidth\": \"10GB\",\n    \"companyId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-02-10T16:01:57.308Z\",\n    \"updatedAt\": \"2023-06-23T07:27:21.640Z\",\n    \"sites\": [\n      {\n        \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        \"companyId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"l3vpnId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"name\": \"London Site\",\n        \"type\": \"COMPANY\",\n        \"portId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"slVlanId\": \"119\",\n        \"rateLimit\": {\n          \"rate\": 30,\n          \"unit\": \"Mbps\"\n        },\n        \"mtu\": null,\n        \"classOfService\": [\n          {\n            \"name\": \"BRONZE\",\n            \"value\": 100\n          },\n          {\n            \"name\": \"SILVER\",\n            \"value\": 0\n          },\n          {\n            \"name\": \"GOLD\",\n            \"value\": 0\n          }\n        ],\n        \"redundancySiteType\": \"primary\",\n        \"redundancyLinkedSiteId\": null,\n        \"status\": \"ACTIVE\",\n        \"simPoolId\": null,\n        \"company_id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"l3vpn_id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"sim_pool_id\": null,\n        \"deleted_at\": null,\n        \"created_at\": \"2024-04-23T06:33:22.745Z\",\n        \"updated_at\": \"2024-07-21T15:34:13.201Z\",\n        \"port_id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"peers\": [\n          {\n            \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n            \"companyId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n            \"l3vpnSiteId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n            \"slPeerUuid\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n            \"type\": \"SELF\",\n            \"partner\": {},\n            \"status\": \"ACTIVE\",\n            \"bgpKey\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n            \"asn\": 64512,\n            \"externalIp\": \"10.51.208.110/30\",\n            \"internalIp\": \"10.51.208.109/30\",\n            \"subnet\": \"10.51.208.108/30\",\n            \"defaultOriginate\": false,\n            \"company_id\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n            \"l3vpn_site_id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n            \"deleted_at\": null,\n            \"created_at\": \"2024-04-23T06:35:20.932Z\",\n            \"updated_at\": \"2024-04-23T06:35:52.943Z\"\n          }\n        ],\n        \"providerInfo\": {\n          \"city\": \"London\",\n          \"country\": \"GB\",\n          \"countryDisplayName\": \"United Kingdom\",\n          \"metroName\": \"London\",\n          \"dcfName\": \"SAMPLE Cloud - LD8\",\n          \"companyName\": \"CC API (DEMO)\",\n          \"companyUsername\": \"ccapidemo\",\n          \"portName\": \"SAMPLE PORT - NAME\",\n          \"portId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n          \"dcfId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n          \"metroId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n          \"companyId\": \"xxxxxxxxxxxxxxxxxxxxxxxx\",\n          \"portPartner\": {\n            \"type\": \"NONE\",\n            \"connectionSpeeds\": []\n          }\n        }\n      }\n    ],\n    \"calculatedCapacity\": {\n      \"total\": 10000,\n      \"used\": 30,\n      \"remaining\": 9970\n    }\n  }\n]\n```\n\n</details>\n\n> **Info**\n>\n> With this array of existing CloudRouter data we could extract the **L3VPN ID** (`[0].sites[0].l3vpnId`) from a specific cloud router's list of sites object.\n\n\n\n## Provisioning new Site on an existing VPN (CloudRouter)\nThis section outlines the prerequisites and provides guidelines for provisioning a new VPN site within an existing CloudRouter VPN via Console Connect API integrated in a client system.\n\n> **Note**\n>\n> On top of the mentioned **[prerequisite](Getting-Started#section/Prerequisite)** above, please see **[additional requirements](CloudRouter#operation/Provision-a-new-L3VPN-Site)** to perform the following action.\n\n> **Info**\n>\n> Below is a sample curl command that will execute creation of a new site within an existing CloudRouter VPN, it accepts **company ID** and **l3vpn ID** as path parameter.\n```bash\ncurl -X POST https://api.consoleconnect.com/app-user/${companyId}/l3vpns/${l3vpnId}/site`\\\n   -H \"Authorization: Bearer [[API key]]\"\n   --data-raw '{\n      \"name\":\"SAMPLE NAME\",\n      \"accessCircuit\":{\n        \"classOfService\":[\n          {\"name\":\"BRONZE\",\"value\":50},\n          {\"name\":\"SILVER\",\"value\":50},\n          {\"name\":\"GOLD\",\"value\":0}\n        ],\n        \"rateLimit\":{\"unit\":\"Mbps\",\"value\":100},\n        \"portId\":\"PORT_ID\"\n      },\n      \"peer\":{\"type\":\"SELF\"},\n      \"discountCode\":\"\"\n    }'  \n```\n> **Note**\n>\n> The API execution above is an example of `SELF` peer type( sites created on one of your active Console Connect Ports. ), see **[more details here](CloudRouter#operation/Provision-a-new-L3VPN-Site)**."
    },
    {
      "name": "Auth",
      "description": "Users must authenticate successfully before any further API calls can be made. There are two methods for authenticating to api outlined in this section.\n\n## API Key\n\nAPI Keys are provisioned by Support against your Console Connect User Account. Email [Support](mailto:support@consoleconnect.com) to request a key.\n\nHere is an example request using an API Key:\n\n```\ncurl -X GET https://api.consoleconnect.com/api/company/exampleCo/ports \\\n-H \"Authorization: Bearer [[api key]]\"\n```\n\n## portal-token (Deprecated)\nThe portal-token method of authentication will be removed soon. Please use API keys to authenticate. Contact [Support](mailto:support@consoleconnect.com) if a portal-token is required in the meantime.\n"
    },
    {
      "name": "Agreements",
      "description": "\nYou must agree to the *Specific Terms for API Use* before using the Console Connect API.\nIf you are using the [Console Connect](https://app.consoleconnect.com) web application, you must also agree to the Console Connect Terms of Service.\nTo view agreement information via API, you will need your companyId, which can be retrieved through the [Company API](#tag/Company)."
    },
    {
      "name": "Search",
      "description": "Search for users, companies, and data center facilities."
    },
    {
      "name": "Pricing",
      "description": "Look up pricing"
    },
    {
      "name": "Metros",
      "description": "Metros are the locations of DCFs on the Console Connect platform. These endpoints can be used to search for places where companies have active ports available for Layer 2 Connections."
    },
    {
      "name": "Data Center Facilities (DCFs)",
      "description": "Data Center Facilities (DCFs) are the hosts of Ports on the Console Connect platform. They support a range of Speeds (1Gb, 10Gb, 1000Gb) in various locations across the globe.\nThe endpoints and examples listed in this section will help you find the right DCF for your needs."
    },
    {
      "name": "Port Orders",
      "description": ""
    },
    {
      "name": "Ports",
      "description": "Before configuring any network services in Console Connect, you must create a port. This is a two-step process; ordering or requesting a port, then activating that port.\nConsole Connect manages entitlements through plan-based subscriptions associated with each port (one subscription per port). Before you can order a port, your company must have a subscription to a plan with sufficient entitlements available to complete the request. To list your company’s subscriptions and entitlements refer to [Get all plans and entitlements](#network-ports-all-plans-&-entitlements-get)."
    },
    {
      "name": "Edge Console",
      "description": "Before configuring any network services in Console Connect, you must create a port. This is a two-step process; ordering or requesting a port, then activating that port.\nThe price with all vendor details is returned and stored in the edgePayload. The difference between Edge and non-Edge order/port is that there is edgePayload present and the flag is set to isEdgePort=true. The collections in MongoDb for both are the same."
    },
    {
      "name": "Layer 2 Connections",
      "description": "Once a port is active, you can provision a connection on it. You can create Layer 2 Connections between your port and another port belonging to your company (self-to-self), to a port belonging to another company (B2B), or to a DCP port.\n\nConnections can be in one of the following states:\n\nStatus | Description\n--:| ----\nPENDING | The connection request is pending approval from at least one party.\nCANCELLED | The request was cancelled by the source/requestor.\nPENDING ACCEPTANCE | Pending acceptance by 3rd party service (e.g. AWS).\nDENIED | The request was rejected by the target.\nACCEPTED | The request was accepted by the target, but the physical port has not yet come up.\nACTIVE | The connection is Active and operational.\nDISABLED | The connection has been explicitly disabled.\nDELETING | The connection is in the process of being deleted.\nDELETED | The connection has been deleted.\nMANUAL | The connection is being manually provisioned.\nERROR | The connection is in an error state. Refer to connection.errorReason for more information."
    },
    {
      "name": "Alibaba Cloud",
      "description": "Use the generic connection Create, Read, Update and Delete (CRUD) routes for searching, updating and deleting Layer 2 Alibaba Cloud Direct Connect Partner connections."
    },
    {
      "name": "Anti-DDoS",
      "description": "Use this API to create, list, update or delete Anti-DDoS orders for the Console Security application."
    },
    {
      "name": "AWS Direct Connect",
      "description": "Use the generic connection Create, Read, Update and Delete (CRUD) routes for searching, updating and deleting Layer 2 AWS Direct Connect Partner connections."
    },
    {
      "name": "Azure ExpressRoute",
      "description": "To create an Azure connection, you will need to:\n1. Create a connection request via the Azure dashboard.\n2. Use the [Create an Azure Direct Connect Partner.\nconnection](#network-azure-expressroute-create-azure-connection) endpoint\nto create a connection request in Console Connect using the service key\nfrom Azure.\n    * The connection group will be created and the status will be `CREATING`.\n    * After connection creation is completed, the status will become `ACTIVE`.\n3. [Configure your peering\ninformation](#network-azure-expressroute-azure-connection-peering-config)\n\n#### Provisioning Statuses\nThere are several sub-statuses available for Azure connections, which can be\nfound\nin the `connection.partner.peering` field. These statuses are listed in\nthe\nfollowing table.\n\nProvisioning Status | Description\n--:| ----\nNOT PROVISIONED | Not yet provisioned.\nPROVISIONING | In the process of provisioning with Azure.\nPROVISIONED | Connection is active & ready to use.\nDEPROVISIONING | In the process of deprovisioning with Azure."
    },
    {
      "name": "Google Cloud Engine",
      "description": "Use the generic connection Create, Read, Update and Delete (CRUD) routes for searching, updating and deleting Layer 2 Google Cloud Engine Direct Connect Partner connections."
    },
    {
      "name": "IBM Cloud Direct Link",
      "description": "\nManage Layer 2 IBM Cloud Direct Link Connections.\n\nUse the generic connection Create, Read, Update and Delete (CRUD) routes for searching, updating and deleting Layer 2 IBM Cloud Direct Link connections."
    },
    {
      "name": "Internet On-Demand (IO-D)",
      "description": "\n## Prerequisites\nBefore you can get started working with IO-D, please ensure:\n* Your company has been verified on the Console Connect platform\n* The authenticated user account has IO-D Create permissions\n* A port with IO-D capability has been specified\n> **Note:** checkout the **[IO-D guideline](/tag/Getting-Started#section/Internet-On-Demand)** for more guidelines & tips related to IO-D.\n## Path Routes\nThe IO-D API endpoints reference `GIA`. Global Internet Access (GIA) was the internal Console Connect product name for Internet On-Demand (IO-D).\nThe IO-D endpoints are nested under the `/app-user/{companyId}` path with *two different roots*. One is singular (`gia-service`) and the other is plural (`gia-services`). These paths are associated with the following actions:\n\n|Root Path|Actions|\n|---------|---------|\n|`/app-user/{companyId}/gia-service`|Create, Flex, Logs|\n|`/app-user/{companyId}/gia-services`|Search/List, Get by ID|"
    },
    {
      "name": "ASNs",
      "description": "*ASN statuses include:*\n\n  * UNVERIFIED - The initial state of a newly added ASN. The ASN will then be verified by Console Connect Support.\n\n  * VERIFIED - This ASN is correct, as verified by Console Connect Support."
    },
    {
      "name": "Search",
      "description": "Search for users, companies, posts, events or articles."
    },
    {
      "name": "CloudRouter",
      "description": "CloudRouter / L3VPN operations."
    },
    {
      "name": "Entitlements",
      "description": "Check entitlements for network actions."
    },
    {
      "name": "Companies",
      "description": "Manage Company business and network information."
    },
    {
      "name": "Users",
      "description": "Manage individual user accounts."
    },
    {
      "name": "Support Tickets",
      "description": "Create and view tickets for the Console Connect Support team."
    },
    {
      "name": "Heartbeat",
      "description": "Retrieve status information for the Console Connect API service."
    },
    {
      "name": "Internet of Things (IoT)",
      "description": "* Simplify the ordering, deployment, and change management of your entire global Internet of Things (IoT) network with Console Connect.\n* From real-time activation and deactivation of devices to service configuration, and traffic monitoring, you benefit from end-to-end control and visibility over your global Internet of Things (IoT) assets.\n* The Console Connect Internet of Things (IoT) service is delivered via our extensive worldwide mobile 2G, 3G, and 4G partner networks and supported by our extensive private global MPLS infrastructure.\n* End-to-end Internet of Things (IoT) connectivity can be extraordinarily complex, often involving a combination of local and international connections, leased lines, public internet, mobile and Wi-Fi networks, and private and public clouds.\n* Console Connect Internet of Things (IoT) simplifies the ordering, deployment, and change management of your entire global Internet of Things (IoT) network."
    },
    {
      "name": "Edge SIM",
      "description": "1. Edge SIM enables end to end connectivity from the customer’s edge mobile device to the Customer’s designated Cloud or data center.\n\n  * Edge devices can be distributed worldwide and connected to the Cloud via local mobile networks in over 180 countries (note: ~120 countries are offered on the Console Connect portal; other countries are available on request) where there are Service Coverage and grouped into several Pricing Zones.\n  * Bypassing the public Internet, the end-to-end connection from the mobile device is secured over a private path direct from the mobile device into the CloudRouter\n  * Groups of SIMs called “SIMPools” act as an individual site in Cloud Router, allowing for easy configuration for the customer to build private networks to multiple clouds and data centers.\n  * Configuration of Edge SIM is totally automated, allowing customers to build their own networks in minutes.\n2. An ordering service is provided in Console Connect together with a SIM management portal\n\n  * Edge SIM can be ordered by the customer anytime over the console ordering portal, similar to other Console Connect services.\n\n  * The newly ordered Edge SIMs can be added to any of the existing SIMPool or if require, the customer can setup a new SIMPool.  SIMPools can be added to the Customer’s existing or newly defined sites on Cloud Router.\n\n### Frequently Asked Questions (FAQs)\n\n  * What is Edge SIM?\n      * Edge SIM allows you to extend the connectivity of your mobile devices to connect directly with your own CloudRouter network.  This allows for the creation of new and novel configurations; and use cases that are more secure, reliable, and scalable as the Internet is bypassed entirely.  Edge SIM is entirely automated. Networks can be configured with a few clicks, and working within minutes.\n\n  * What are the major differences between the Console Connect Edge SIM and the Console Connect IoT SIM solution?\n      * Existing Console Connect IoT SIMs essentially provide services via simple internet connectivity, whereas Edge SIMs bypass the Internet entirely, allowing for direct connections to Clouds and data centers globally, through CloudRouter. The Edge SIM solution is suitable for more sophisticated IoT applications, as shown in the table below:.\n\nThis is aimed at simplifying the ordering, deployment and change management of your entire global IoT network with Console Connect.\n\n  * A SIMPool is a group of SIMs that share the same service gateway and configurations, such as IP addresses, subnets, and DNS servers.\n  * SIMs can be added to a SIMPool or moved to another SIMPool\n  * A SIMPool has to be added to the Cloud Router before the traffic can be routed to the customer network\n  * The SIMPool will also be used to direct traffic to a managed firewall for customers requiring internet access in the future."
    },
    {
      "name": "MEF-Sonata",
      "description": "## Description\n\n    **This API Spec is complaint with MEF LSO Sonata Grace Version**\n\n\n\n  Supported product type:\n\n  - UNI\n\n  - Access Eline\n\n\n  List of supported use cases:\n\n\n  - Validate Address\n\n  - Retrieve Address by Identifier\n\n  - Create UNI quote(sync, firm)\n\n  - Create Access Eline quote(sync, firm)\n\n  - Query quote by id\n\n  - Create UNI ADD order\n\n  - Create Access Eline ADD order\n\n  -  Query UNI order by id\n\n  -  Query Access Eline order by id\n\n   - Create UNI delete order\n\n   - Create Access Eline delete order\n\n   - query UNI product instance by product order id\n\n   - query Access Eline product instance by product order id\n\n   - query UNI product instance by id\n\n   - query Access Eline product instance by id\n\n## Authentication\nUsers must authenticate successfully before any further API calls can be made. There are two authentication headers required for authenticating to api outlined in this section.\n\n### Console Connect API key\n\nCC api key are provisioned by Support against your Console Connect User Account. Email [Support](mailto:support@consoleconnect.com) to request a key. \n### x-sonata-buyer-key\nAnother layer of Authentication, Contact [Support](mailto:support@consoleconnect.com) for x-sonata-buyer-key in the meantime.\n\n### Example request\n```\ncurl -X GET https://{{baserURL}}/mefApi/sonata/productInventory/v7/product/{id} \\\n-H \"Authorization: Bearer [[Console Connect api key]]\"\n-H \"x-sonata-buyer-key: Bearer [[x-sonata-buyer-key]]\"\n```"
    }
  ]
}
